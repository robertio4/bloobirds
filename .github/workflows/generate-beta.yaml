name: Generate Beta Version

on:
  push:
    branches:
      - production

permissions:
  contents: write
  pull-requests: write

jobs:
  create_beta_version:
    if: contains(github.event.head_commit.message, 'Prerelease')
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      upload_url: ${{ steps.set_outputs.outputs.upload_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run extension:build:beta

      - name: Extract version from commit message
        id: extract_version
        run: |
          COMMIT="${{ github.event.head_commit.message }}"
          VERSION=$(echo "$COMMIT" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?')
          if [ -z "$VERSION" ]; then
            echo "No version number found in the PR title."
            exit 1
          fi
          echo "version=v$VERSION" >> $GITHUB_OUTPUT

      - name: Update version and changelog
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          cd packages/apps/bloobirds-chrome-extension
          npm version $VERSION
          npm run changelog
          git add package.json CHANGELOG.md
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -m "chore: bump version to v$VERSION"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a new tag
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          git tag "$VERSION"
          git push origin "$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload dist artifact
        id: artifact-upload-step
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: packages/apps/bloobirds-chrome-extension/dist
      - name: Set outputs
        id: set_outputs
        run: |
          echo "upload_url=${{ steps.artifact-upload-step.outputs.artifact-url }}" >> $GITHUB_OUTPUT

  create-beta-branch:
    runs-on: ubuntu-latest
    needs: create_beta_version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create a new branch for testing
        run: |
          TITLE="${{ github.event.head_commit.message }}"
          VERSION=$(echo "$TITLE" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?')
          BASE_VERSION=$(echo "$VERSION" | sed -E 's/(-[a-zA-Z0-9]+)?(\.[0-9]+)?$/\1/')
          if git ls-remote --exit-code --heads origin "$BASE_VERSION"; then
            echo "Branch $BASE_VERSION already exists, skipping creation."
          else
            git checkout -b "$BASE_VERSION"
            git push origin "$BASE_VERSION"
          fi

  create-release:
    runs-on: ubuntu-latest
    needs: create_beta_version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract latest changelog entry
        id: changelog
        run: |
          VERSION=$(echo "${GITHUB_REF#refs/tags/}")
          CHANGELOG_ENTRY=$(awk "/^## ${VERSION}/,/^## / { print }" CHANGELOG.md)
          echo "changelog=${CHANGELOG_ENTRY}" >> $GITHUB_OUTPUT

      - name: Commpress dist artifact
        run: tar -czvf dist.tar.gz -C packages/apps/bloobirds-chrome-extension dist

      - name: Create a new release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: dist.tar.gz
          prerelease: ${{ contains(github.ref_name, '-') }}
          body: ${{ steps.changelog.outputs.changelog }}

  merge-to-develop:
    runs-on: ubuntu-latest
    needs: create_beta_version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout develop branch
        run: |
          git checkout develop

      - name: Merge changes from main
        run: |
          VERSION=${{ needs.create_beta_version.outputs.version }}
          BASE_VERSION=$(echo "$VERSION" | sed -E 's/(-[a-zA-Z0-9]+)?(\.[0-9]+)?$/\1/')
          git merge origin/main -m "Merge from main to develop: $BASE_VERSION"

      - name: Push changes to develop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin develop
