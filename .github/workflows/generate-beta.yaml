name: Generate Beta Version

on:
  push:
    branches:
      - production

permissions:
  contents: write
  pull-requests: write

jobs:
  create_beta_version:
    if: contains(github.event.head_commit.message, 'Prerelease')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Generate changelog
        run: npm run changelog

      - name: Extract version from commit message
        id: extract_version
        run: |
          TITLE="${{ github.event.head_commit.message }}"
          VERSION=$(echo "$TITLE" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?')
          BASE_VERSION=$(echo "$VERSION" | sed -E 's/(-[a-zA-Z0-9]+)?(\.[0-9]+)?$/\1/')
          if [ -z "$VERSION" ]; then
            echo "No version number found in the PR title."
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV

      - name: Update manifest.json
        run: |
          NAME="Bloobirds Beta"
          ICON="src/beta.png"
          cd packages/apps/bloobirds-chrome-extension
          sed -i "s#\"name\": \".*\"#\"name\": \"$NAME\"#" ./manifest.json
          sed -i "s#\"default_icon\": \".*\"#\"default_icon\": \"$ICON\"#" ./manifest.json

      - name: Update version in package.json
        run: |
          VERSION=${{ env.VERSION }}
          git add CHANGELOG.md packages/apps/bloobirds-chrome-extension/manifest.json
          cd packages/apps/bloobirds-chrome-extension
          npm version $VERSION
          git add package.json

      - name: Push commits
        run: |
          VERSION=${{ env.VERSION }}
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -m "chore: bump version to v$VERSION"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a new tag
        run: |
          git tag "v$VERSION"
          git push origin "v$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-beta-branch:
    runs-on: ubuntu-latest
    needs: create_beta_version

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create a new branch for testing
        run: |
          BASE_VERSION=${{ needs.update-manifest.outputs.BASE_VERSION }}
          git checkout -b "$BASE_VERSION"
          git push origin "$BASE_VERSION"
