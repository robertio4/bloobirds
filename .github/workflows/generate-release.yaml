name: Generate Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Determine build command
        id: build_command
        run: |
          if [[ "${{ github.ref_name }}" == *-* ]]; then
            echo "build_command=extension:build:beta" >> $GITHUB_ENV
          else
            echo "build_command=extension:build:release" >> $GITHUB_ENV
          fi

      - name: Build the project
        run: npm run $build_command

      - name: Upload dist artifact
        id: artifact-upload-step
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: packages/apps/bloobirds-chrome-extension/dist

      - name: Get current tag
        id: current_tag
        run: echo "CURRENT_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Get previous tag
        id: previous_tag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 --exclude=$CURRENT_TAG)
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_ENV

      - name: Generate release notes
        id: generate_release_notes
        run: |
          RELEASE_NOTES=$(git log ${PREVIOUS_TAG}..${CURRENT_TAG} --pretty=format:"%h - %s (%an)" --abbrev-commit)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # Utiliza solo el nombre del tag
          release_name: Release ${{ github.ref_name }}
          body: $RELEASE_NOTES
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }} # Detecta si es una pre-release

      - name: Zip the build directory
        run: |
          zip -r dist.zip packages/apps/bloobirds-chrome-extension/dist

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.artifact-upload-step.outputs.artifact-url }}
          asset_path: dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip
