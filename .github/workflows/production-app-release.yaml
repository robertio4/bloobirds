name: Frontend app production CD

on:
  workflow_call:
    inputs:
      version:
        description: 'The version to deploy'
        required: true
        type: string

jobs:
  publish:
    name: Publish the frontend app - PROD
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Create Sentry.io release
        uses: tclindner/sentry-releases-action@v1.2.0
        continue-on-error: true
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: bloobirds
          SENTRY_PROJECT: bloobirds
        with:
          tagName: bloobirds@${{ inputs.version }}
          environment: production
          sourceMapOptions: '{"include": ["build"], "urlPrefix": "~/", "rewrite": true }'
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Compress sources
        run: find $GITHUB_WORKSPACE/build -type f ! -name '*.mp3' -exec gzip -9 {} \; -exec mv {}.gz {} \;
      - name: Cleanup S3
        run: aws s3 rm s3://bloobirds-frontend-prod/ --recursive
      - name: Upload S3 mp3 files
        run: aws s3 cp $GITHUB_WORKSPACE/build/ s3://bloobirds-frontend-prod/ --recursive --cache-control max-age=86400 --exclude="*" --include="*.mp3"
      - name: Upload S3 caching files
        run: aws s3 cp $GITHUB_WORKSPACE/build/ s3://bloobirds-frontend-prod/ --recursive --content-encoding gzip --cache-control max-age=86400 --include="*" --exclude="*.html" --exclude="*.mp3"
      - name: Upload S3 non caching files
        run: aws s3 cp $GITHUB_WORKSPACE/build/ s3://bloobirds-frontend-prod/ --recursive --content-encoding gzip --cache-control max-age=0 --exclude="*" --include="*.html"
      - name: Invalidate Cloudfront entrypoint
        run: aws cloudfront create-invalidation --distribution-id E2IL8L8VTUBUNH --paths /index.html /
      - name: Register new version
        run: |
          curl --request POST \
            --url https://web-api.bloobirds.com/service/version/new \
            --header 'authorization: Bearer ${{ secrets.BB_JWT }}' \
            --header 'content-type: application/json' \
            --data '{
              "appName": "WEBAPP",
              "deploymentTimestamp": '"$(date +%s)"'
          }' -v
