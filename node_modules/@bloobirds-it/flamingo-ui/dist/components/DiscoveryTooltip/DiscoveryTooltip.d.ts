import React, { MutableRefObject } from "react";
import { ColorType } from "../../typings";
import { ButtonProps } from "../Button/Button";
import { BasePlacement, VariationPlacement } from "@popperjs/core";
export type DiscoveryTooltipProps = {
    anchor?: React.ReactElement;
    anchorShouldNotOpen?: boolean;
    width?: string;
    height?: string;
    title?: string;
    color?: ColorType;
    className?: string;
    isPersistent?: boolean;
    visible?: boolean;
    customStyles?: any;
    arrowCustomStyles?: any;
    children?: React.ReactElement[];
    position?: BasePlacement | VariationPlacement;
    rounded?: boolean;
};
type DiscoveryDefaultAnchorProps = {
    anchorRef?: MutableRefObject<HTMLDivElement>;
    dotBackgroundColor?: ColorType;
    dotColor?: ColorType;
};
interface TooltipButtonProps extends ButtonProps {
    isMainButton?: boolean;
    children?: React.ReactElement | string;
}
declare const pkg: {
    ({ visible, isPersistent, ...props }: DiscoveryTooltipProps): React.JSX.Element;
    displayName: string;
    defaultProps: {
        width: string;
        height: string;
        color: string;
        rounded: boolean;
    };
} & {
    DiscoveryDefaultAnchor: {
        ({ dotBackgroundColor, dotColor }: DiscoveryDefaultAnchorProps): React.JSX.Element;
        defaultProps: {
            dotColor: string;
            dotBackgroundColor: string;
        };
    };
    TooltipImage: ({ children, className }: {
        children: React.ReactElement | string;
        className?: string;
    }) => React.JSX.Element;
    TooltipFooter: ({ className, children, description, descriptionClassName, footerColor, }: {
        className?: string;
        children?: React.ReactElement | React.ReactElement[];
        description?: React.ReactElement | string;
        descriptionClassName?: string;
        footerColor?: ColorType;
    }) => React.JSX.Element;
    TooltipButton: ({ isMainButton, onClick, children, ...props }: TooltipButtonProps) => React.JSX.Element;
};
export { pkg as DiscoveryTooltip };
