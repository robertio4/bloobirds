import * as React from "react";
import { MutableRefObject, ReactNode, SyntheticEvent } from "react";
import { ColorType } from "../../typings";
export declare enum AdornmentPositions {
    RIGHT = "right",
    LEFT = "left"
}
export interface BaseInputProps {
    adornmentPosition?: AdornmentPositions;
    adornment?: ReactNode;
    className?: string;
    darkMode?: boolean;
    dataTest?: string;
    disabled?: boolean;
    error?: string;
    errorStyle?: boolean;
    height?: string;
    helper?: string;
    inline?: boolean;
    placeholder?: string;
    ref?: MutableRefObject<HTMLInputElement>;
    removePlaceholder?: boolean;
    role?: string;
    transparent?: boolean;
    warning?: string;
    warningStyle?: boolean;
    width?: string;
}
interface BaseInputWrapperProps extends BaseInputProps {
    children?: any;
    color?: ColorType;
    cursor?: "pointer" | "text";
    filled?: boolean;
    focused?: boolean;
    name?: string;
    onClick?: (e: SyntheticEvent) => void;
}
declare const BaseInput: React.ForwardRefExoticComponent<Omit<BaseInputWrapperProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
export default BaseInput;
