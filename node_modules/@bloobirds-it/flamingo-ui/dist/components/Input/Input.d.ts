import * as React from "react";
import { FocusEvent, KeyboardEvent, MouseEvent, RefObject, SyntheticEvent } from "react";
import { BaseInputProps } from "../BaseInput/BaseInput";
import { ColorType, IconType } from "../../typings";
export interface InputProps extends BaseInputProps {
    value?: any;
    defaultValue?: any;
    name?: string;
    size?: "small" | "medium" | "labeled";
    type?: "text" | "number" | "password" | "url" | "email";
    borderless?: boolean;
    icon?: IconType;
    innerRef?: RefObject<HTMLInputElement>;
    onSubmit?: (value: any, event: SyntheticEvent) => void;
    onBlur?: (event: FocusEvent<HTMLInputElement>) => void;
    onClick?: (event: MouseEvent<HTMLInputElement>) => void;
    onChange?: (value: string) => void;
    onKeyPress?: (e: KeyboardEvent<HTMLInputElement>) => void;
    onKeyDown?: (e: KeyboardEvent<HTMLInputElement>) => void;
    onFocus?: (e: FocusEvent<HTMLInputElement>) => void;
    color?: ColorType;
    autoFocus?: boolean;
    ref?: RefObject<HTMLInputElement>;
}
declare const Input: {
    ({ size, innerRef, ...props }: InputProps): React.JSX.Element;
    defaultProps: {
        type: string;
        autoComplete: string;
        size: string;
        borderless: boolean;
        autoFocus: boolean;
    };
};
export default Input;
