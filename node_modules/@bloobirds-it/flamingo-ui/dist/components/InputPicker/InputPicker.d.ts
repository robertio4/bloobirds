import * as React from "react";
import { RefObject } from "react";
import { BaseSelectProps } from "../BaseSelect/BaseSelect";
type UnusedSelectProps = "children" | "focused" | "filled" | "onSearch" | "onFocus" | "onSubmit" | "onClick";
type InputPickerValue = {
    type: string;
    value?: any;
};
export interface InputPickerProps extends Omit<BaseSelectProps, UnusedSelectProps> {
    children?: React.ReactNode;
    visible?: boolean;
    value?: InputPickerValue;
    placeholder?: string;
    defaultValue?: InputPickerValue;
    innerRef?: RefObject<HTMLInputElement>;
    onChange?: (value: InputPickerValue) => void;
    renderDisplayValue?: (value: InputPickerValue) => string;
    openDefaultValue?: InputPickerValue;
}
declare const InputPicker: {
    (Props: InputPickerProps): React.JSX.Element;
    defaultProps: {
        visible: boolean;
        children: any[];
    };
};
export default InputPicker;
