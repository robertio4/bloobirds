import { ToastPosition } from "react-hot-toast";
import { ColorType, IconType } from "../typings";
export type ToastType = "success" | "error" | "warning" | "info";
export type ToastAction = {
    color: ColorType;
    text: string;
    onClick: () => void;
};
export type ToastOptions = {
    message: string;
    duration?: number | "infinity";
    type?: ToastType;
    position?: ToastPosition;
};
export interface ReminderOptions extends Omit<ToastOptions, "type"> {
    type?: "reminder";
    subtitle?: string;
    icon?: IconType;
    iconColor?: ColorType;
    sound?: string;
    onClick?: () => void;
}
export interface ActionOptions extends Omit<ToastOptions, "type" | "duration"> {
    type?: "action";
    duration: number;
    icon?: IconType;
    actions: Array<ToastAction>;
    onFinish?: () => void;
}
type ConfigType = ToastOptions | ReminderOptions | ActionOptions;
export declare const createToast: (config: ConfigType) => string;
export declare const dismissToast: (id: string) => void;
export declare const useToasts: () => {
    createToast: (config: ConfigType) => string;
    dismissToast: (id: string) => void;
};
export {};
