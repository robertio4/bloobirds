import { RecoilState, SerializableParam } from "recoil";
export interface Subscription {
    id: string;
    query?: object;
    subscribedFunction: CallbackFunction;
    subscriptionCollection: string;
    lastUpdate?: Date;
}
export interface EventSubscription extends Subscription {
    event: string;
}
export interface SubscriptionOptions {
    createSubscription: boolean;
}
export type CallbackFunction = Function;
export declare const eventsSubscriptionsFamily: (param: SerializableParam) => RecoilState<EventSubscription[]>;
export declare const useEventSubscription: (eventToListen: string, onNewData: CallbackFunction, options?: SubscriptionOptions) => void;
