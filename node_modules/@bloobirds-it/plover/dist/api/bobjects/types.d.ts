export declare enum BobjectTypeMap {
    Company = "Company",
    Lead = "Lead",
    Task = "Task",
    Activity = "Activity",
    Opportunity = "Opportunity",
    Product = "Product",
    OpportunityProducts = "Opportunity Products"
}
export declare type BobjectType = BobjectTypeMap | keyof typeof BobjectTypeMap;
export declare enum Direction {
    ASC = "ASC",
    DESC = "DESC"
}
export interface SearchSort {
    field: string;
    direction: Direction;
}
export declare enum SearchMode {
    WILDCARD__SEARCH = "WILDCARD__SEARCH",
    PREFIX__SEARCH = "PREFIX__SEARCH",
    AUTOCOMPLETE__SEARCH = "AUTOCOMPLETE__SEARCH",
    EXACT__SEARCH = "EXACT__SEARCH",
    SUBQUERY__SEARCH = "SUBQUERY__SEARCH"
}
export interface QueryValue {
    query: string | string[] | SearchQuery;
    searchMode?: SearchMode;
}
export interface SearchQuery {
    [key: string]: string | string[] | QueryValue;
}
export interface SearchRequest {
    query?: SearchQuery;
    sort?: SearchSort[];
    pageSize?: number;
    page?: number;
    formFields?: boolean;
    injectReferences?: boolean;
    websocketSubscriptionId?: string;
    subscriptionId?: string;
}
