{"version":3,"file":"functiontostring.js","sources":["../../../src/integrations/functiontostring.ts"],"sourcesContent":["import type { IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { convertIntegrationFnToClass } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst functionToStringIntegration: IntegrationFn = () => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const context = getOriginalFunction(this) || this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n  };\n};\n\n/** Patch toString calls to return proper name for wrapped functions */\n// eslint-disable-next-line deprecation/deprecation\nexport const FunctionToString = convertIntegrationFnToClass(INTEGRATION_NAME, functionToStringIntegration);\n"],"names":[],"mappings":";;;AAIA,IAAA,wBAAA,CAAA;AACA;AACA,MAAA,gBAAA,GAAA,kBAAA,CAAA;AACA;AACA,MAAA,2BAAA,GAAA,MAAA;AACA,EAAA,OAAA;AACA,IAAA,IAAA,EAAA,gBAAA;AACA,IAAA,SAAA,GAAA;AACA;AACA,MAAA,wBAAA,GAAA,QAAA,CAAA,SAAA,CAAA,QAAA,CAAA;AACA;AACA;AACA;AACA,MAAA,IAAA;AACA;AACA,QAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAA,WAAA,GAAA,IAAA,EAAA;AACA,UAAA,MAAA,OAAA,GAAA,mBAAA,CAAA,IAAA,CAAA,IAAA,IAAA,CAAA;AACA,UAAA,OAAA,wBAAA,CAAA,KAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA;AACA,SAAA,CAAA;AACA,OAAA,CAAA,OAAA,CAAA,EAAA;AACA;AACA,OAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA,CAAA,CAAA;AACA;AACA;AACA;AACA,MAAA,gBAAA,GAAA,2BAAA,CAAA,gBAAA,EAAA,2BAAA;;;;"}