{"version":3,"file":"index.es.js","sources":["../src/PlateFloatingLink.tsx","../src/LinkElement/LinkElement.styles.ts","../src/LinkElement/LinkElement.tsx","../src/LinkToolbarButton/LinkToolbarButton.tsx"],"sourcesContent":["import React from 'react';\nimport { TEditableProps } from '@udecode/plate-core';\nimport {\n  FloatingLink,\n  LaunchIcon,\n  LinkIcon,\n  LinkOffIcon,\n  ShortTextIcon,\n  useFloatingLinkSelectors,\n} from '@udecode/plate-link';\nimport { plateButtonCss } from '@udecode/plate-ui-button';\nimport {\n  floatingButtonCss,\n  FloatingIconWrapper,\n  floatingInputCss,\n  FloatingInputWrapper,\n  floatingRootCss,\n  floatingRowCss,\n  FloatingVerticalDivider,\n} from '@udecode/plate-ui-toolbar';\n\nexport const PlateFloatingLink = ({ readOnly }: TEditableProps) => {\n  const isEditing = useFloatingLinkSelectors().isEditing();\n\n  if (readOnly) return null;\n\n  const input = (\n    <div tw=\"flex flex-col w-[330px]\">\n      <FloatingInputWrapper>\n        <FloatingIconWrapper>\n          <LinkIcon width={18} />\n        </FloatingIconWrapper>\n\n        <FloatingLink.UrlInput\n          css={floatingInputCss}\n          placeholder=\"Paste link\"\n        />\n      </FloatingInputWrapper>\n\n      <div tw=\"h-px bg-gray-200\" />\n\n      <FloatingInputWrapper>\n        <FloatingIconWrapper>\n          <ShortTextIcon width={18} />\n        </FloatingIconWrapper>\n        <FloatingLink.TextInput\n          css={floatingInputCss}\n          placeholder=\"Text to display\"\n        />\n      </FloatingInputWrapper>\n    </div>\n  );\n\n  const editContent = !isEditing ? (\n    <div css={floatingRowCss}>\n      <FloatingLink.EditButton css={plateButtonCss}>\n        Edit link\n      </FloatingLink.EditButton>\n\n      <FloatingVerticalDivider />\n\n      <FloatingLink.OpenLinkButton css={floatingButtonCss}>\n        <LaunchIcon width={18} />\n      </FloatingLink.OpenLinkButton>\n\n      <FloatingVerticalDivider />\n\n      <FloatingLink.UnlinkButton css={floatingButtonCss}>\n        <LinkOffIcon width={18} />\n      </FloatingLink.UnlinkButton>\n    </div>\n  ) : (\n    input\n  );\n\n  return (\n    <>\n      <FloatingLink.InsertRoot css={floatingRootCss}>\n        {input}\n      </FloatingLink.InsertRoot>\n\n      <FloatingLink.EditRoot css={floatingRootCss}>\n        {editContent}\n      </FloatingLink.EditRoot>\n    </>\n  );\n};\n","import { Value } from '@udecode/plate-core';\nimport { TLinkElement } from '@udecode/plate-link';\nimport {\n  createStyles,\n  StyledElementProps,\n} from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\n\nexport const getLinkElementStyles = <V extends Value>(\n  props: StyledElementProps<V, TLinkElement>\n) =>\n  createStyles(\n    { prefixClassNames: 'LinkElement', ...props },\n    {\n      root: css`\n        color: #0078d4;\n        text-decoration: initial;\n\n        :hover,\n        :visited:hover {\n          color: #004578;\n          text-decoration: underline;\n        }\n\n        :visited {\n          color: #0078d4;\n        }\n      `,\n    }\n  );\n","import React from 'react';\nimport { Value } from '@udecode/plate-core';\nimport { Link, TLinkElement } from '@udecode/plate-link';\nimport { StyledElementProps } from '@udecode/plate-styled-components';\nimport { getLinkElementStyles } from './LinkElement.styles';\n\nexport const LinkElement = (props: StyledElementProps<Value, TLinkElement>) => {\n  const { as, ...rootProps } = props;\n\n  const { root } = getLinkElementStyles(props);\n\n  return <Link.Root {...rootProps} css={root.css} />;\n};\n","import React from 'react';\nimport {\n  getPluginType,\n  someNode,\n  useEventPlateId,\n  usePlateEditorState,\n} from '@udecode/plate-core';\nimport { ELEMENT_LINK, triggerFloatingLink } from '@udecode/plate-link';\nimport { ToolbarButton, ToolbarButtonProps } from '@udecode/plate-ui-toolbar';\n\nexport interface LinkToolbarButtonProps extends ToolbarButtonProps {\n  /**\n   * Default onClick is getting the link url by calling this promise before inserting the image.\n   */\n  getLinkUrl?: (prevUrl: string | null) => Promise<string | null>;\n}\n\nexport const LinkToolbarButton = ({\n  id,\n  getLinkUrl,\n  ...props\n}: LinkToolbarButtonProps) => {\n  const editor = usePlateEditorState(useEventPlateId(id));\n\n  const type = getPluginType(editor, ELEMENT_LINK);\n  const isLink = !!editor?.selection && someNode(editor, { match: { type } });\n\n  return (\n    <ToolbarButton\n      tooltip={{ content: 'Link' }}\n      active={isLink}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        triggerFloatingLink(editor, { focused: true });\n      }}\n      {...props}\n    />\n  );\n};\n"],"names":["PlateFloatingLink","readOnly","isEditing","useFloatingLinkSelectors","input","editContent","floatingInputCss","floatingRowCss","plateButtonCss","floatingButtonCss","floatingRootCss","getLinkElementStyles","props","createStyles","prefixClassNames","root","css","LinkElement","as","rootProps","LinkToolbarButton","id","getLinkUrl","editor","usePlateEditorState","useEventPlateId","type","getPluginType","ELEMENT_LINK","isLink","selection","someNode","match","content","e","preventDefault","stopPropagation","triggerFloatingLink","focused"],"mappings":"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"}