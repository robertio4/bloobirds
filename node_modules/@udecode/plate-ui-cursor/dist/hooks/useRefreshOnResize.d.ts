import { MutableRefObject } from 'react';
import { Range } from 'slate';
import { CursorOverlayProps } from '../components/index';
import { SelectionRect } from '../types';
export interface UseRefreshOnResizeOptions extends Pick<CursorOverlayProps, 'refreshOnResize' | 'containerRef'> {
    selectionRectCache: MutableRefObject<WeakMap<Range, SelectionRect[]>>;
}
export declare const useRefreshOnResize: ({ containerRef, refreshOnResize, selectionRectCache, }: UseRefreshOnResizeOptions) => {
    refresh: (sync?: any) => void;
};
//# sourceMappingURL=useRefreshOnResize.d.ts.map