/// <reference types="react" />
import { RenderFunction, UnknownObject } from '@udecode/plate-core';
import { StyledProps } from '@udecode/plate-styled-components';
import { CSSProp } from 'styled-components';
import { CursorData, CursorOverlayState, SelectionRect } from '../types';
export interface CursorProps<TCursorData extends UnknownObject = UnknownObject> extends CursorOverlayState<TCursorData>, StyledProps<{
    caret: CSSProp;
    selectionRect: CSSProp;
}> {
    /**
     * Whether to disable the caret.
     */
    disableCaret?: boolean;
    /**
     * Whether to disable the selection rects.
     */
    disableSelection?: boolean;
    /**
     * Custom caret component.
     * For example, you could display a label next to the caret.
     * @default styled div
     */
    onRenderCaret?: RenderFunction<Pick<CursorProps<TCursorData>, 'data' | 'caretPosition'>>;
    /**
     * Overrides `Caret` component
     */
    onRenderSelectionRect?: RenderFunction<Pick<CursorProps<TCursorData>, 'data'> & {
        selectionRect: SelectionRect;
    }>;
}
export declare const Cursor: ({ data, selectionRects, caretPosition, disableCaret, disableSelection, onRenderCaret: Caret, onRenderSelectionRect: Rect, ...props }: CursorProps<CursorData>) => JSX.Element | null;
//# sourceMappingURL=Cursor.d.ts.map