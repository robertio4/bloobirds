import React from 'react';
import { KEY_ALIGN, setAlign } from '@udecode/plate-alignment';
import { usePlateEditorState, useEventPlateId, isCollapsed, someNode, focusEditor } from '@udecode/plate-core';
import { ToolbarButton } from '@udecode/plate-ui-toolbar';

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return _extends.apply(this, arguments);
}

const AlignToolbarButton = ({
  id,
  value,
  pluginKey = KEY_ALIGN,
  ...props
}) => {
  const editor = usePlateEditorState(useEventPlateId(id));
  const active = isCollapsed(editor === null || editor === void 0 ? void 0 : editor.selection) && someNode(editor, {
    match: {
      [pluginKey]: value
    }
  });
  return /*#__PURE__*/React.createElement(ToolbarButton, _extends({
    active: active,
    onClick: e => {
      e.preventDefault();
      e.stopPropagation();
      setAlign(editor, {
        value,
        key: pluginKey
      });
      focusEditor(editor);
    }
  }, props));
};

export { AlignToolbarButton };
//# sourceMappingURL=index.es.js.map
