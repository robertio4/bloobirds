import { PlateEditor, Value } from '@udecode/plate-core';
import { Location } from 'slate';
/**
 * If at (default = selection) is in table>tr>td|th,
 * return table, row, and cell node entries.
 */
export declare const getTableEntries: <V extends Value>(editor: PlateEditor<V>, { at }?: {
    at?: Location | null | undefined;
}) => {
    table: import("@udecode/plate-core").TNodeEntry<import("@udecode/plate-core").AncestorOf<import("@udecode/plate-core").TEditor<V>>>;
    row: import("@udecode/plate-core").TNodeEntry<import("@udecode/plate-core").AncestorOf<import("@udecode/plate-core").TEditor<V>>>;
    cell: import("@udecode/plate-core").TNodeEntry<import("@udecode/plate-core").ENode<V>>;
} | undefined;
//# sourceMappingURL=getTableEntries.d.ts.map