{"version":3,"file":"index.js","sources":["../src/PlateAvatar.tsx","../src/PlateCommentMenuButton.tsx","../src/PlateCommentResolveButton.tsx","../src/PlateCommentNewTextarea.tsx","../src/PlateCommentValue.tsx","../src/PlateComment.tsx","../src/PlateCommentHeader.tsx","../src/PlateCommentLeaf.tsx","../src/PlateCommentNewSubmitButton.tsx","../src/PlateCommentNewForm.tsx","../src/PlateCommentReplies.tsx","../src/PlateCommentToolbarButton.tsx","../src/PlateCommentsResolved.tsx","../src/PlateCommentsShowResolvedButton.tsx","../src/PlateFloatingCommentsContent.tsx","../src/PlateFloatingComments.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  AccountCircleIcon,\n  AvatarImage,\n  useUserById,\n} from '@udecode/plate-comments';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const avatarRootCss = css`\n  ${tw`font-normal text-left text-black text-sm cursor-default whitespace-nowrap w-8 h-8 object-cover left-0 block relative rounded-full`};\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  user-select: text;\n  aspect-ratio: auto 32 / 32;\n`;\n\nexport const avatarImageCss = css`\n  ${tw`rounded-full font-normal text-left text-black text-sm cursor-default whitespace-nowrap h-8 w-8`}\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  user-select: text;\n`;\n\nexport const avatarAccountCircleCss = css`\n  ${tw`font-normal text-left text-gray-500 text-sm cursor-default whitespace-nowrap h-8 w-8`};\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  user-select: text;\n`;\n\nexport const PlateAvatar = ({ userId }: { userId: string | null }) => {\n  const user = useUserById(userId);\n  if (!user) return null;\n\n  return (\n    <div css={avatarRootCss}>\n      {user.avatarUrl ? (\n        <AvatarImage css={avatarImageCss} userId={userId!} />\n      ) : (\n        <AccountCircleIcon css={avatarAccountCircleCss} viewBox=\"0 0 24 24\" />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  CommentDeleteButton,\n  CommentEditButton,\n  MoreVertIcon,\n  useCommentActions,\n  useCommentSelectors,\n} from '@udecode/plate-comments';\nimport { PlateButton, plateButtonCss } from '@udecode/plate-ui-button';\nimport { floatingRootCss, ToolbarDropdown } from '@udecode/plate-ui-toolbar';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const PlateCommentMenuButton = () => {\n  const isMenuOpen = useCommentSelectors().isMenuOpen();\n  const setIsMenuOpen = useCommentActions().isMenuOpen();\n\n  return (\n    <div>\n      <ToolbarDropdown\n        control={\n          <PlateButton css={tw`p-1`}>\n            <MoreVertIcon tw=\"w-6 h-6 text-gray-500\" />\n          </PlateButton>\n        }\n        open={isMenuOpen}\n        onOpen={() => setIsMenuOpen(true)}\n        onClose={() => setIsMenuOpen(false)}\n      >\n        <div\n          tw=\"flex flex-col relative\"\n          css={[\n            floatingRootCss,\n            css`\n              width: 150px;\n            `,\n          ]}\n        >\n          <CommentEditButton\n            css={[plateButtonCss, tw`justify-start px-4 py-2`]}\n          >\n            Edit comment\n          </CommentEditButton>\n\n          <CommentDeleteButton\n            css={[plateButtonCss, tw`justify-start px-4 py-2`]}\n          >\n            Delete comment\n          </CommentDeleteButton>\n        </div>\n      </ToolbarDropdown>\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  CheckIcon,\n  CommentResolveButton,\n  RefreshIcon,\n  useComment,\n} from '@udecode/plate-comments';\nimport { plateButtonCss } from '@udecode/plate-ui-button';\nimport tw from 'twin.macro';\n\nexport const PlateCommentResolveButton = () => {\n  const comment = useComment()!;\n\n  return (\n    <CommentResolveButton css={[plateButtonCss, tw`p-1`]}>\n      {comment.isResolved ? (\n        <RefreshIcon tw=\"w-6 h-6 text-gray-500\" />\n      ) : (\n        <CheckIcon tw=\"w-6 h-6 text-gray-500\" />\n      )}\n    </CommentResolveButton>\n  );\n};\n","import React, { forwardRef } from 'react';\nimport {\n  CommentEditTextarea,\n  CommentEditTextareaProps,\n  CommentNewTextarea,\n  CommentNewTextareaProps,\n} from '@udecode/plate-comments';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const commentTextareaCss = css`\n  ${tw`text-gray-800 leading-5 h-10 rounded box-border text-sm p-2 block m-0 overflow-x-hidden overflow-y-hidden resize-none w-full cursor-text`};\n  border: 1px solid #dadce0;\n  min-height: 36px;\n  outline-width: 0;\n  text-align: start;\n  word-wrap: break-word;\n`;\n\nexport const PlateCommentNewTextarea = forwardRef<\n  HTMLTextAreaElement,\n  CommentNewTextareaProps\n>((props: CommentNewTextareaProps, ref) => {\n  return <CommentNewTextarea {...props} ref={ref} css={commentTextareaCss} />;\n});\n\nexport const PlateCommentEditTextarea = forwardRef<\n  HTMLTextAreaElement,\n  CommentEditTextareaProps\n>((props: CommentEditTextareaProps, ref) => {\n  return <CommentEditTextarea {...props} ref={ref} css={commentTextareaCss} />;\n});\n","import React, { useEffect, useRef } from 'react';\nimport { CommentEditActions } from '@udecode/plate-comments';\nimport { plateButtonCss, primaryButtonCss } from '@udecode/plate-ui-button';\nimport tw from 'twin.macro';\nimport { PlateCommentEditTextarea } from './PlateCommentNewTextarea';\n\nexport const PlateCommentValue = () => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    const textarea = textareaRef.current!;\n    textarea.focus();\n\n    const { length } = textarea.value;\n    textarea.setSelectionRange(length, length);\n  }, [textareaRef]);\n\n  return (\n    <div css={tw`flex flex-col space-y-2`}>\n      <PlateCommentEditTextarea ref={textareaRef} />\n\n      <div css={[tw`flex space-x-2`]}>\n        <CommentEditActions.SaveButton css={[primaryButtonCss]}>\n          Save\n        </CommentEditActions.SaveButton>\n\n        <CommentEditActions.CancelButton css={[plateButtonCss]}>\n          Cancel\n        </CommentEditActions.CancelButton>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  CommentProvider,\n  useComment,\n  useCommentById,\n  useCommentSelectors,\n  useCommentsSelectors,\n  useCommentText,\n  useCommentUser,\n} from '@udecode/plate-comments';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { PlateAvatar } from './PlateAvatar';\nimport { PlateCommentMenuButton } from './PlateCommentMenuButton';\nimport { PlateCommentResolveButton } from './PlateCommentResolveButton';\nimport { PlateCommentValue } from './PlateCommentValue';\n\ntype PlateCommentProps = {\n  commentId: string;\n};\n\nexport const commentsHeaderCss = css`\n  ${tw`box-content cursor-default flex items-center h-10 text-sm m-0 text-left text-black whitespace-nowrap`};\n  font-weight: normal;\n`;\n\nexport const commentHeaderInfoCss = css`\n  ${tw`cursor-pointer flex flex-col ml-2 justify-center flex-grow text-sm text-left text-black truncate`};\n  font-weight: normal;\n  align-items: start;\n`;\n\nexport const commentHeaderUserNameCss = css`\n  ${tw`cursor-default self-stretch font-medium h-4 text-sm leading-5 text-left tracking-wide truncate`};\n  color: rgba(60, 64, 67, 1);\n`;\n\nexport const commentHeaderCreatedDateCss = css`\n  ${tw`text-xs leading-4 tracking-wide`};\n  color: rgba(60, 64, 67, 1);\n`;\n\nexport const commentTextCss = css`\n  ${tw`whitespace-pre-wrap`};\n`;\n\nconst PlateCommentContent = () => {\n  const comment = useComment()!;\n  const isReplyComment = !!comment.parentId;\n  const commentText = useCommentText();\n  const user = useCommentUser();\n  const myUserId = useCommentsSelectors().myUserId();\n  const editingValue = useCommentSelectors().editingValue();\n\n  const isMyComment = myUserId === comment.userId;\n\n  return (\n    <div>\n      <div css={commentsHeaderCss}>\n        <PlateAvatar userId={comment.userId} />\n\n        <div css={commentHeaderInfoCss}>\n          <div css={commentHeaderUserNameCss}>{user?.name}</div>\n\n          <div css={commentHeaderCreatedDateCss}>\n            {new Date(comment.createdAt).toLocaleString()}\n          </div>\n        </div>\n\n        {isMyComment && (\n          <div tw=\"flex space-x-1\">\n            {!isReplyComment ? <PlateCommentResolveButton /> : null}\n\n            <PlateCommentMenuButton />\n          </div>\n        )}\n      </div>\n\n      <div tw=\"pl-10\">\n        {editingValue ? (\n          <PlateCommentValue />\n        ) : (\n          <div css={commentTextCss}>{commentText}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const PlateComment = ({ commentId }: PlateCommentProps) => {\n  const comment = useCommentById(commentId);\n  if (!comment) return null;\n\n  return (\n    <CommentProvider key={commentId} id={commentId}>\n      <PlateCommentContent />\n    </CommentProvider>\n  );\n};\n","import React from 'react';\nimport {\n  CommentUserName,\n  useComment,\n  useCommentsSelectors,\n} from '@udecode/plate-comments';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { PlateAvatar } from './PlateAvatar';\nimport { PlateCommentResolveButton } from './PlateCommentResolveButton';\n\nexport const userHeaderRootCss = css`\n  ${tw`flex flex-row items-center p-3 rounded-t-lg`};\n  border-bottom: 1px solid rgb(218, 220, 224);\n`;\n\nexport const userHeaderAvatarContainerCss = css`\n  ${tw`mr-2 bg-white w-8 h-8 flex-none rounded-full`};\n`;\n\nexport const userHeaderAssignedToContainerCss = css`\n  ${tw`flex-auto`}\n`;\n\nexport const userHeaderAssignedToTextCss = css`\n  ${tw`text-xs`};\n`;\n\nexport const commentUserCss = css`\n  ${tw`text-sm leading-5 font-medium`};\n`;\n\nexport const userHeaderActionsCss = css`\n  ${tw`flex-none`};\n`;\n\nexport const PlateCommentHeader = () => {\n  const comment = useComment()!;\n\n  const myUserId = useCommentsSelectors().myUserId();\n  const isMyUser = myUserId === comment.userId;\n\n  return (\n    <div\n      css={[\n        userHeaderRootCss,\n        css`\n          color: ${isMyUser ? 'white' : 'rgb(60, 64, 67)'};\n          background-color: ${isMyUser ? '#1a73e8' : '#e8f0fe'};\n        `,\n      ]}\n    >\n      <div css={userHeaderAvatarContainerCss}>\n        <PlateAvatar userId={comment.userId} />\n      </div>\n\n      <div css={userHeaderAssignedToContainerCss}>\n        <div css={userHeaderAssignedToTextCss}>Author</div>\n\n        <CommentUserName css={commentUserCss} />\n      </div>\n\n      <div css={userHeaderActionsCss}>\n        <PlateCommentResolveButton />\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  getCommentKeyId,\n  isCommentKey,\n  TCommentText,\n  useCommentsActions,\n  useCommentsSelectors,\n} from '@udecode/plate-comments';\nimport { Value } from '@udecode/plate-core';\nimport { StyledLeaf, StyledLeafProps } from '@udecode/plate-styled-components';\n\nexport const PlateCommentLeaf = <V extends Value = Value>(\n  props: StyledLeafProps<V, TCommentText>\n) => {\n  const { children, nodeProps, leaf } = props;\n\n  const [commentIds, setCommentIds] = useState<string[]>([]);\n  const activeCommentId = useCommentsSelectors().activeCommentId();\n  const setActiveCommentId = useCommentsActions().activeCommentId();\n  const comments = useCommentsSelectors().comments();\n  const [commentCount, setCommentCount] = useState(1);\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    const ids: string[] = [];\n    let count = 0;\n\n    let _isActive = false;\n\n    Object.keys(leaf).forEach((key) => {\n      if (!isCommentKey(key)) return;\n\n      const id = getCommentKeyId(key);\n\n      if (comments[id]?.isResolved) return;\n\n      if (id === activeCommentId) {\n        _isActive = true;\n        setIsActive(true);\n      }\n\n      ids.push(getCommentKeyId(key));\n      count++;\n    });\n\n    if (!_isActive && isActive) {\n      setIsActive(false);\n    }\n\n    setCommentCount(count);\n    setCommentIds(ids);\n  }, [activeCommentId, comments, isActive, leaf]);\n\n  const lastCommentId = commentIds[commentIds.length - 1];\n\n  let aboveChildren = <>{children}</>;\n\n  const backgroundColor = isActive\n    ? 'rgb(255, 212, 0)'\n    : 'rgba(255, 212, 0, 0.14)';\n\n  if (!isActive) {\n    for (let i = 1; i < commentCount; i++) {\n      aboveChildren = (\n        <span\n          style={{\n            backgroundColor: 'rgba(255, 212, 0, 0.14)',\n          }}\n        >\n          {aboveChildren}\n        </span>\n      );\n    }\n  }\n\n  // hide resolved comments\n  if (!commentCount) return <>{children}</>;\n\n  return (\n    <StyledLeaf\n      {...props}\n      nodeProps={{\n        onMouseDown: (e: MouseEvent) => {\n          e.stopPropagation();\n          setActiveCommentId(lastCommentId);\n        },\n        style: {\n          backgroundColor,\n          borderBottom: '2px solid rgb(255, 212, 0)',\n        },\n        ...nodeProps,\n      }}\n    >\n      {aboveChildren}\n    </StyledLeaf>\n  );\n};\n","import React from 'react';\nimport { CommentNewSubmitButton } from '@udecode/plate-comments';\nimport { primaryButtonCss } from '@udecode/plate-ui-button';\n\nexport const PlateCommentNewSubmitButton = () => {\n  return <CommentNewSubmitButton css={primaryButtonCss} />;\n};\n","import React, { useRef } from 'react';\nimport { useCommentsSelectors } from '@udecode/plate-comments';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { PlateAvatar } from './PlateAvatar';\nimport { PlateCommentNewSubmitButton } from './PlateCommentNewSubmitButton';\nimport { PlateCommentNewTextarea } from './PlateCommentNewTextarea';\n\nexport const commentActionsCss = css`\n  ${tw`font-normal text-black whitespace-normal text-sm text-left block`};\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  user-select: text;\n  zoom: 1;\n`;\n\nexport const commentFormCss = css`\n  ${tw`bg-white cursor-default block text-sm relative text-left text-black whitespace-normal`};\n  font-weight: normal;\n  outline: none;\n`;\n\nexport const PlateCommentNewForm = () => {\n  const myUserId = useCommentsSelectors().myUserId();\n\n  const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n\n  return (\n    <div css={[commentFormCss]}>\n      <div tw=\"flex space-x-2 w-full\">\n        <PlateAvatar userId={myUserId} />\n\n        <div tw=\"flex flex-col flex-grow space-y-2\">\n          <PlateCommentNewTextarea ref={textareaRef} />\n\n          <div css={commentActionsCss}>\n            <PlateCommentNewSubmitButton />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  SCOPE_ACTIVE_COMMENT,\n  useCommentReplies,\n} from '@udecode/plate-comments';\nimport { PlateComment } from './PlateComment';\n\nexport const PlateCommentReplies = () => {\n  const commentReplies = useCommentReplies(SCOPE_ACTIVE_COMMENT);\n\n  return (\n    <>\n      {Object.keys(commentReplies).map((id) => (\n        <PlateComment key={id} commentId={id} />\n      ))}\n    </>\n  );\n};\n","import React from 'react';\nimport { useCommentAddButton } from '@udecode/plate-comments';\nimport { ToolbarButton, ToolbarButtonProps } from '@udecode/plate-ui-toolbar';\n\nexport const PlateCommentToolbarButton = (props: ToolbarButtonProps) => {\n  const buttonProps = useCommentAddButton(props as any);\n\n  return <ToolbarButton {...(buttonProps as any)} />;\n};\n","import React from 'react';\nimport { useCommentsResolved } from '@udecode/plate-comments';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { PlateComment } from './PlateComment';\n\nexport const resolvedCommentsRootCss = css`\n  ${tw`w-[500px]`}\n`;\n\nexport const resolvedCommentsHeaderCss = css`\n  ${tw`p-4 flex-none font-medium text-base mt-0 mb-0`};\n  border-bottom: 1px solid rgb(218, 220, 224);\n`;\n\nexport const resolvedCommentsBodyCss = css`\n  ${tw`p-4 overflow-y-auto flex-auto`};\n\n  & > * {\n    ${tw`mb-4`};\n  }\n\n  & > *:last-child {\n    ${tw`mb-0`};\n  }\n`;\n\nexport const PlateCommentsResolved = () => {\n  const resolvedComments = useCommentsResolved();\n\n  return (\n    <div css={resolvedCommentsRootCss}>\n      <h2 css={resolvedCommentsHeaderCss}>Resolved comments</h2>\n      <div css={resolvedCommentsBodyCss}>\n        {resolvedComments.map((comment) => (\n          <PlateComment key={comment.id} commentId={comment.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  focusEditor,\n  useEventPlateId,\n  usePlateEditorRef,\n} from '@udecode/plate-core';\nimport { ToolbarButton, ToolbarButtonProps } from '@udecode/plate-ui-toolbar';\n\ntype PlateCommentsShowResolvedButtonProps = ToolbarButtonProps & {\n  fetchContacts: () => Promise<void>;\n  renderContainer: (props: any) => JSX.Element;\n  retrieveUser: () => Promise<void>;\n};\n\nexport const PlateCommentsShowResolvedButton = (\n  props: PlateCommentsShowResolvedButtonProps\n) => {\n  const {\n    id,\n    fetchContacts,\n    renderContainer,\n    retrieveUser,\n    ...otherProps\n  } = props;\n\n  const editor = usePlateEditorRef(useEventPlateId(id));\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n  const isActive = Boolean(anchorEl);\n\n  return (\n    <div>\n      <ToolbarButton\n        aria-label=\"Show resolved comments\"\n        active={isActive}\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n\n          setAnchorEl(e.currentTarget);\n\n          focusEditor(editor);\n        }}\n        {...otherProps}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  CommentProvider,\n  SCOPE_ACTIVE_COMMENT,\n  useFloatingCommentsContentState,\n} from '@udecode/plate-comments';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { PlateComment } from './PlateComment';\nimport { PlateCommentNewForm } from './PlateCommentNewForm';\nimport { PlateCommentReplies } from './PlateCommentReplies';\n\nexport type PlateFloatingCommentsContentProps = {\n  disableForm?: boolean;\n};\n\nexport const commentsRootCss = css`\n  ${tw`rounded-lg bg-white p-3 flex flex-col space-y-2`};\n  box-shadow: 0 2px 6px 2px rgb(60 64 67 / 15%);\n  border: 1px solid white;\n`;\n\nexport const PlateFloatingCommentsContent = (\n  props: PlateFloatingCommentsContentProps\n) => {\n  const { disableForm } = props;\n\n  const {\n    ref,\n    activeCommentId,\n    hasNoComment,\n    myUserId,\n  } = useFloatingCommentsContentState();\n\n  return (\n    <CommentProvider\n      key={activeCommentId}\n      id={activeCommentId}\n      scope={SCOPE_ACTIVE_COMMENT}\n    >\n      <div css={commentsRootCss} ref={ref}>\n        {!hasNoComment && (\n          <>\n            <PlateComment key={activeCommentId} commentId={activeCommentId} />\n\n            <PlateCommentReplies />\n          </>\n        )}\n\n        {!!myUserId && !disableForm && <PlateCommentNewForm />}\n      </div>\n    </CommentProvider>\n  );\n};\n","import React from 'react';\nimport {\n  CommentsPositioner,\n  useFloatingCommentsState,\n} from '@udecode/plate-comments';\nimport { PortalBody } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { PlateFloatingCommentsContent } from './PlateFloatingCommentsContent';\n\nexport const floatingCommentsRootCss = css`\n  ${tw`absolute z-10 pb-4 w-[418px]`}\n`;\n\nexport const PlateFloatingComments = () => {\n  const { loaded, activeCommentId } = useFloatingCommentsState();\n\n  if (!loaded || !activeCommentId) return null;\n\n  return (\n    <PortalBody>\n      <CommentsPositioner css={floatingCommentsRootCss}>\n        <PlateFloatingCommentsContent />\n      </CommentsPositioner>\n    </PortalBody>\n  );\n};\n"],"names":["avatarRootCss","css","avatarImageCss","avatarAccountCircleCss","PlateAvatar","userId","user","useUserById","React","avatarUrl","PlateCommentMenuButton","isMenuOpen","useCommentSelectors","setIsMenuOpen","useCommentActions","ToolbarDropdown","_StyledDiv","floatingRootCss","plateButtonCss","PlateCommentResolveButton","comment","useComment","isResolved","commentTextareaCss","PlateCommentNewTextarea","forwardRef","props","ref","PlateCommentEditTextarea","PlateCommentValue","textareaRef","useRef","useEffect","textarea","current","focus","length","value","setSelectionRange","_StyledDiv2","primaryButtonCss","commentsHeaderCss","commentHeaderInfoCss","commentHeaderUserNameCss","commentHeaderCreatedDateCss","commentTextCss","PlateCommentContent","isReplyComment","parentId","commentText","useCommentText","useCommentUser","myUserId","useCommentsSelectors","editingValue","isMyComment","_StyledDiv3","name","Date","createdAt","toLocaleString","PlateComment","commentId","useCommentById","CommentProvider","userHeaderRootCss","userHeaderAvatarContainerCss","userHeaderAssignedToContainerCss","userHeaderAssignedToTextCss","commentUserCss","userHeaderActionsCss","PlateCommentHeader","isMyUser","_StyledDiv4","PlateCommentLeaf","children","nodeProps","leaf","commentIds","setCommentIds","useState","activeCommentId","setActiveCommentId","useCommentsActions","comments","commentCount","setCommentCount","isActive","setIsActive","ids","count","_isActive","Object","keys","forEach","key","isCommentKey","id","getCommentKeyId","push","lastCommentId","aboveChildren","backgroundColor","i","StyledLeaf","onMouseDown","e","stopPropagation","style","borderBottom","PlateCommentNewSubmitButton","commentActionsCss","commentFormCss","PlateCommentNewForm","PlateCommentReplies","commentReplies","useCommentReplies","SCOPE_ACTIVE_COMMENT","map","PlateCommentToolbarButton","buttonProps","useCommentAddButton","ToolbarButton","resolvedCommentsRootCss","resolvedCommentsHeaderCss","resolvedCommentsBodyCss","PlateCommentsResolved","resolvedComments","useCommentsResolved","PlateCommentsShowResolvedButton","fetchContacts","renderContainer","retrieveUser","otherProps","editor","usePlateEditorRef","useEventPlateId","anchorEl","setAnchorEl","Boolean","preventDefault","currentTarget","focusEditor","commentsRootCss","PlateFloatingCommentsContent","disableForm","hasNoComment","useFloatingCommentsContentState","floatingCommentsRootCss","PlateFloatingComments","loaded","useFloatingCommentsState","PortalBody"],"mappings":"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"}