{"version":3,"file":"index.es.js","sources":["../src/constants.ts","../src/stores/comments/CommentsProvider.tsx","../src/stores/comment/CommentProvider.tsx","../src/queries/findCommentNode.ts","../src/utils/getCommentKey.ts","../src/queries/findCommentNodeById.ts","../src/utils/isCommentKey.ts","../src/utils/getCommentCount.ts","../src/utils/getCommentKeyId.ts","../src/utils/getCommentKeys.ts","../src/utils/getCommentUrl.ts","../src/utils/getElementAbsolutePosition.tsx","../src/utils/isCommentNodeById.ts","../src/utils/isCommentText.ts","../src/utils/unsetCommentNodesById.ts","../src/queries/getCommentNodeEntries.ts","../src/queries/getCommentNodesById.ts","../../../node_modules/lodash/_baseClamp.js","../../../node_modules/lodash/_trimmedEndIndex.js","../../../node_modules/lodash/_baseTrim.js","../../../node_modules/lodash/isObject.js","../../../node_modules/lodash/_freeGlobal.js","../../../node_modules/lodash/_root.js","../../../node_modules/lodash/_Symbol.js","../../../node_modules/lodash/_getRawTag.js","../../../node_modules/lodash/_objectToString.js","../../../node_modules/lodash/_baseGetTag.js","../../../node_modules/lodash/isObjectLike.js","../../../node_modules/lodash/isSymbol.js","../../../node_modules/lodash/toNumber.js","../../../node_modules/lodash/clamp.js","../src/queries/getCommentPosition.ts","../src/stores/comments/useActiveCommentNode.ts","../src/stores/comments/useAddCommentMark.ts","../src/stores/comments/useCommentsResolved.ts","../src/useHooksComments.ts","../src/transforms/removeCommentMark.ts","../src/withComments.ts","../src/createCommentsPlugin.ts","../src/components/AvatarImage.tsx","../src/components/CommentDeleteButton.tsx","../src/components/CommentEditCancelButton.tsx","../src/components/CommentEditSaveButton.tsx","../src/components/CommentEditActions.tsx","../src/components/CommentEditButton.tsx","../src/components/CommentEditTextarea.tsx","../src/components/CommentLinkButton.ts","../src/components/CommentLinkDialogCloseButton.tsx","../src/components/CommentLinkDialogCopyLink.tsx","../src/components/CommentLinkDialogInput.tsx","../src/components/CommentLinkDialog.tsx","../src/components/CommentNewSubmitButton.tsx","../src/components/CommentNewTextarea.tsx","../src/components/CommentResolveButton.tsx","../src/components/CommentUserName.tsx","../src/components/CommentsPositioner.tsx","../src/components/useCommentAddButton.ts","../src/components/useFloatingCommentsContentState.ts","../src/components/useFloatingCommentsState.ts","../src/components/icons/AccountCircleIcon.tsx","../src/components/icons/CheckIcon.tsx","../src/components/icons/MoreVertIcon.tsx","../src/components/icons/RefreshIcon.tsx"],"sourcesContent":["export const MARK_COMMENT = 'comment';\n","import React, { ReactNode } from 'react';\nimport {\n  createAtomStore,\n  getJotaiProviderInitialValues,\n  getNodeString,\n  JotaiProvider,\n  nanoid,\n  Value,\n  WithPartial,\n} from '@udecode/plate-core';\nimport { CommentUser, TComment } from '../../types';\n\nexport const SCOPE_COMMENTS = Symbol('comments');\n\nexport interface CommentsStoreState {\n  /**\n   * Id of the current user.\n   */\n  myUserId: string | null;\n\n  /**\n   * Users data.\n   */\n  users: Record<string, CommentUser>;\n\n  /**\n   * Comments data.\n   */\n  comments: Record<string, TComment>;\n\n  /**\n   * Id of the active comment. If null, no comment is active.\n   */\n  activeCommentId: string | null;\n\n  addingCommentId: string | null;\n\n  newValue: Value;\n\n  focusTextarea: boolean;\n\n  onCommentAdd: ((value: Partial<TComment>) => void) | null;\n  onCommentUpdate:\n    | ((value: Pick<TComment, 'id'> & Partial<Omit<TComment, 'id'>>) => void)\n    | null;\n  onCommentDelete: ((id: string) => void) | null;\n}\n\nexport const { commentsStore, useCommentsStore } = createAtomStore(\n  {\n    /**\n     * Id of the current user.\n     */\n    myUserId: null,\n\n    /**\n     * Users data.\n     */\n    users: {},\n\n    /**\n     * Comments data.\n     */\n    comments: {},\n\n    /**\n     * Id of the active comment. If null, no comment is active.\n     */\n    activeCommentId: null,\n\n    addingCommentId: null,\n\n    newValue: [{ type: 'p', children: [{ text: '' }] }],\n\n    focusTextarea: false,\n\n    onCommentAdd: null,\n    onCommentUpdate: null,\n    onCommentDelete: null,\n  } as CommentsStoreState,\n  {\n    name: 'comments',\n    scope: SCOPE_COMMENTS,\n  }\n);\n\nexport const CommentsProvider = ({\n  children,\n  ...props\n}: Partial<CommentsStoreState> & { children: ReactNode }) => {\n  return (\n    <JotaiProvider\n      initialValues={getJotaiProviderInitialValues(commentsStore, props)}\n      scope={SCOPE_COMMENTS}\n    >\n      {children}\n    </JotaiProvider>\n  );\n};\n\nexport const useCommentsStates = () => useCommentsStore().use;\nexport const useCommentsSelectors = () => useCommentsStore().get;\nexport const useCommentsActions = () => useCommentsStore().set;\n\nexport const useCommentById = (id?: string | null): TComment | null => {\n  const comments = useCommentsSelectors().comments();\n  if (!id) return null;\n\n  return comments[id];\n};\n\nexport const useUserById = (id: string | null): CommentUser | null => {\n  const users = useCommentsSelectors().users();\n  if (!id) return null;\n\n  return users[id];\n};\n\nexport const useMyUser = (): CommentUser | null => {\n  const users = useCommentsSelectors().users();\n  const myUserId = useCommentsSelectors().myUserId();\n  if (!myUserId) return null;\n\n  return users[myUserId];\n};\n\nexport const useNewCommentText = () => {\n  const editingValue = useCommentsSelectors().newValue();\n\n  return getNodeString(editingValue?.[0]);\n};\n\nexport const useResetNewCommentValue = () => {\n  const setNewValue = useCommentsActions().newValue();\n\n  return () => {\n    setNewValue([{ type: 'p', children: [{ text: '' }] }]);\n  };\n};\n\nexport const useUpdateComment = (id?: string | null) => {\n  const comment = useCommentById(id);\n\n  const [comments, setComments] = useCommentsStates().comments();\n\n  return (value: Partial<TComment>) => {\n    if (!id) return;\n\n    setComments({\n      ...comments,\n      [id]: { ...comment, ...value } as any,\n    });\n  };\n};\n\nexport const useAddRawComment = () => {\n  const [comments, setComments] = useCommentsStates().comments();\n  const myUserId = useCommentsSelectors().myUserId();\n\n  return (id: string) => {\n    if (!myUserId) return;\n\n    setComments({\n      ...comments,\n      [id]: {\n        id,\n        userId: myUserId,\n      },\n    } as any);\n  };\n};\n\nexport const useAddComment = () => {\n  const [comments, setComments] = useCommentsStates().comments();\n  const myUserId = useCommentsSelectors().myUserId();\n\n  return (value: WithPartial<TComment, 'id' | 'userId' | 'createdAt'>) => {\n    if (!myUserId) return;\n\n    const id = value.id ?? nanoid();\n\n    setComments({\n      ...comments,\n      [id]: {\n        id,\n        userId: myUserId,\n        createdAt: Date.now(),\n        ...value,\n      },\n    });\n  };\n};\n\nexport const useRemoveComment = () => {\n  const [comments, setComments] = useCommentsStates().comments();\n\n  return (id: string | null) => {\n    if (!id) return;\n\n    delete comments[id];\n\n    setComments({\n      ...comments,\n    });\n  };\n};\n","import React, { ReactNode } from 'react';\nimport {\n  createAtomStore,\n  getJotaiProviderInitialValues,\n  getNodeString,\n  JotaiProvider,\n  Scope,\n  Value,\n} from '@udecode/plate-core';\nimport { CommentUser, TComment } from '../../types';\nimport {\n  useCommentById,\n  useCommentsSelectors,\n} from '../comments/CommentsProvider';\n\nexport const SCOPE_COMMENT = Symbol('comment');\nexport const SCOPE_ACTIVE_COMMENT = Symbol('activeComment');\n\nexport interface CommentStoreState {\n  id: string;\n  isMenuOpen: boolean;\n  editingValue: Value | null;\n}\n\nexport const { commentStore, useCommentStore } = createAtomStore(\n  {\n    id: '',\n    isMenuOpen: false,\n    editingValue: null,\n  } as CommentStoreState,\n  {\n    name: 'comment',\n    scope: SCOPE_COMMENT,\n  }\n);\n\nexport const useCommentStates = () => useCommentStore().use;\nexport const useCommentSelectors = () => useCommentStore().get;\nexport const useCommentActions = () => useCommentStore().set;\n\nexport const CommentProvider = ({\n  children,\n  scope,\n  ...props\n}: Partial<CommentStoreState> & { children: ReactNode; scope?: Scope }) => {\n  return (\n    <JotaiProvider\n      initialValues={getJotaiProviderInitialValues(commentStore, props)}\n      scope={scope ?? SCOPE_COMMENT}\n    >\n      {children}\n    </JotaiProvider>\n  );\n};\n\nexport const useCommentUser = (scope?: Scope): CommentUser | null => {\n  const commentId = useCommentSelectors().id(scope);\n  const users = useCommentsSelectors().users();\n  const comment = useCommentById(commentId);\n  if (!comment) return null;\n\n  return users[comment.userId];\n};\n\nexport const useCommentReplies = (scope?: Scope) => {\n  const commentId = useCommentSelectors().id(scope);\n  const comments = useCommentsSelectors().comments();\n\n  const replies: Record<string, TComment> = {};\n\n  Object.keys(comments).forEach((id) => {\n    const comment = comments[id];\n    if (!comment) return null;\n\n    if (comment.parentId === commentId) {\n      replies[id] = comment;\n    }\n  });\n\n  return replies;\n};\n\nexport const useComment = (scope?: Scope) => {\n  const commentId = useCommentSelectors().id(scope);\n\n  return useCommentById(commentId);\n};\n\nexport const useCommentText = (scope?: Scope) => {\n  const comment = useComment(scope);\n  if (!comment) return null;\n\n  return getNodeString(comment.value?.[0]);\n};\n\nexport const useEditingCommentText = () => {\n  const editingValue = useCommentSelectors().editingValue();\n  if (!editingValue) return null;\n\n  return getNodeString(editingValue?.[0]);\n};\n","import {\n  findNode,\n  FindNodeOptions,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-core';\nimport { MARK_COMMENT } from '../constants';\nimport { TCommentText } from '../types';\n\nexport const findCommentNode = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: FindNodeOptions\n) => {\n  return findNode<TCommentText>(editor, {\n    match: (n) => n[MARK_COMMENT],\n    ...options,\n  });\n};\n","import { MARK_COMMENT } from '../constants';\n\nexport const getCommentKey = (id: string) => `${MARK_COMMENT}_${id}`;\n","import { findNode, PlateEditor, Value } from '@udecode/plate-core';\nimport { TCommentText } from '../types';\nimport { getCommentKey } from '../utils/getCommentKey';\n\nexport const findCommentNodeById = <V extends Value>(\n  editor: PlateEditor<V>,\n  id: string\n) => {\n  return findNode<TCommentText>(editor, {\n    at: [],\n    match: (n) => n[getCommentKey(id)],\n  });\n};\n","import { MARK_COMMENT } from '../constants';\n\nexport const isCommentKey = (key: string) => key.startsWith(`${MARK_COMMENT}_`);\n","import { TCommentText } from '../types';\nimport { isCommentKey } from './isCommentKey';\n\nexport const getCommentCount = (node: TCommentText) => {\n  let commentCount = 0;\n  Object.keys(node).forEach((key) => {\n    if (isCommentKey(key)) commentCount++;\n  });\n  return commentCount;\n};\n","import { MARK_COMMENT } from '../constants';\n\nexport const getCommentKeyId = (key: string) =>\n  key.replace(`${MARK_COMMENT}_`, '');\n","import { TCommentText } from '../types';\nimport { isCommentKey } from './isCommentKey';\n\nexport const getCommentKeys = (node: TCommentText) => {\n  const keys: string[] = [];\n\n  Object.keys(node).forEach((key) => {\n    if (isCommentKey(key)) keys.push(key);\n  });\n\n  return keys;\n};\n","export const getCommentUrl = (commentId: string) => {\n  const url = new URL(window.location.href);\n  url.searchParams.set('comment', commentId);\n\n  return url.toString();\n};\n","export const getElementAbsolutePosition = (element: HTMLElement) => {\n  let left = 0;\n  let top = 0;\n  let currentElement: HTMLElement | null = element;\n\n  do {\n    left += (currentElement.offsetLeft || 0) - currentElement.scrollLeft;\n    top += (currentElement.offsetTop || 0) - currentElement.scrollTop;\n    currentElement = currentElement.offsetParent as HTMLElement;\n  } while (currentElement);\n\n  return {\n    left,\n    top,\n  };\n};\n","import { TNode } from '@udecode/plate-core';\nimport { getCommentKey } from './getCommentKey';\n\n/**\n * Whether the node has a comment id.\n */\nexport const isCommentNodeById = (node: TNode, id: string) =>\n  !!node[getCommentKey(id)];\n","import { TNode } from '@udecode/plate-core';\nimport { MARK_COMMENT } from '../constants';\nimport { TCommentText } from '../types';\n\nexport const isCommentText = (node: TNode): node is TCommentText => {\n  return !!node[MARK_COMMENT];\n};\n","import { PlateEditor, unsetNodes, Value } from '@udecode/plate-core';\nimport { TCommentText } from '../types';\nimport { getCommentKey } from './getCommentKey';\nimport { isCommentNodeById } from './isCommentNodeById';\n\nexport const unsetCommentNodesById = <V extends Value>(\n  editor: PlateEditor<V>,\n  { id }: { id: string }\n) => {\n  unsetNodes<TCommentText>(editor, getCommentKey(id), {\n    at: [],\n    match: (n) => isCommentNodeById(n, id),\n  });\n};\n","import { getNodeEntries, PlateEditor, Value } from '@udecode/plate-core';\nimport { TCommentText } from '../types';\nimport { isCommentText } from '../utils/index';\n\nexport const getCommentNodeEntries = <V extends Value>(\n  editor: PlateEditor<V>\n) => {\n  return [\n    ...getNodeEntries<TCommentText>(editor, {\n      at: [],\n      match: (n) => isCommentText(n),\n    }),\n  ];\n};\n","import { getNodeEntries, PlateEditor, Value } from '@udecode/plate-core';\nimport { isCommentNodeById } from '../utils/isCommentNodeById';\n\nexport const getCommentNodesById = <V extends Value>(\n  editor: PlateEditor<V>,\n  id: string\n) => {\n  return Array.from(\n    getNodeEntries(editor, {\n      at: [],\n      match: (n) => isCommentNodeById(n, id),\n    })\n  );\n};\n","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nmodule.exports = baseClamp;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseClamp = require('./_baseClamp'),\n    toNumber = require('./toNumber');\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nmodule.exports = clamp;\n","import { PlateEditor, toDOMNode, Value } from '@udecode/plate-core';\nimport { clamp } from 'lodash';\nimport { TCommentText } from '../types';\nimport { getElementAbsolutePosition } from '../utils/getElementAbsolutePosition';\n\nexport const getCommentPosition = <V extends Value>(\n  editor: PlateEditor<V>,\n  node: TCommentText\n) => {\n  const DOMNode = toDOMNode(editor, node);\n  if (!DOMNode) return;\n\n  const DOMNodePosition = getElementAbsolutePosition(DOMNode);\n\n  const editorDOMNode = toDOMNode(editor, editor);\n  if (!editorDOMNode) return;\n\n  const {\n    x: editorX,\n    width: editorWidth,\n  } = editorDOMNode.getBoundingClientRect();\n\n  const sidebarWidth = 418;\n  const padding = 16;\n\n  return {\n    left: clamp(\n      editorX + editorWidth + 16,\n      window.innerWidth - (sidebarWidth + padding)\n    ),\n    top: DOMNodePosition.top,\n  };\n};\n","import { usePlateEditorRef } from '@udecode/plate-core';\nimport { findCommentNodeById } from '../../queries/index';\nimport { useCommentsSelectors } from './CommentsProvider';\n\nexport const useActiveCommentNode = () => {\n  const editor = usePlateEditorRef();\n\n  const id = useCommentsSelectors().activeCommentId();\n  if (!id) return null;\n\n  return findCommentNodeById(editor, id);\n};\n","import {\n  deselectEditor,\n  isExpanded,\n  isText,\n  nanoid,\n  setNodes,\n  usePlateEditorRef,\n} from '@udecode/plate-core';\nimport { MARK_COMMENT } from '../../constants';\nimport { getCommentKey } from '../../utils/index';\nimport { useCommentsActions } from './CommentsProvider';\n\nexport const useAddCommentMark = () => {\n  const editor = usePlateEditorRef();\n  const setActiveCommentId = useCommentsActions().activeCommentId();\n\n  return () => {\n    const { selection } = editor;\n    if (!isExpanded(selection)) return;\n\n    const id = nanoid();\n\n    // add comment prop to inline elements\n    // const entries = getNodes(editor, {\n    //   // TODO\n    // });\n    //\n    // Array.from(entries).forEach(([, path]) => {\n    //   setNodes(\n    //     editor,\n    //     {\n    //       [key]: comment,\n    //     },\n    //     { at: path }\n    //   );\n    // });\n\n    setNodes(\n      editor,\n      { [MARK_COMMENT]: true, [getCommentKey(id)]: true },\n      { match: isText, split: true }\n    );\n\n    try {\n      deselectEditor(editor);\n    } catch (err) {}\n\n    setTimeout(() => {\n      setActiveCommentId(id);\n    }, 0);\n  };\n};\n","import { TComment } from '../../types';\nimport { useCommentsSelectors } from './CommentsProvider';\n\nexport const useCommentsResolved = () => {\n  const comments = useCommentsSelectors().comments();\n\n  const res: TComment[] = [];\n\n  Object.keys(comments).forEach((key) => {\n    const comment = comments[key];\n    if (comment?.isResolved) {\n      res.push(comment);\n    }\n  });\n\n  return res;\n};\n","import {\n  isExpanded,\n  PlateEditor,\n  useHotkeys,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-core';\nimport { useAddCommentMark, useCommentsActions } from './stores/index';\nimport { CommentsPlugin } from './types';\n\nexport const useHooksComments = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E,\n  { options }: WithPlatePlugin<CommentsPlugin>\n) => {\n  const { hotkey } = options;\n\n  const addCommentMark = useAddCommentMark();\n  const setFocusTextarea = useCommentsActions().focusTextarea();\n\n  useHotkeys(\n    hotkey!,\n    (e) => {\n      if (!editor.selection) return;\n\n      e.preventDefault();\n\n      // block comments\n\n      if (!isExpanded(editor.selection)) return;\n\n      addCommentMark();\n      setFocusTextarea(true);\n    },\n    {\n      enableOnContentEditable: true,\n    }\n  );\n};\n","import { PlateEditor, Value, withoutNormalizing } from '@udecode/plate-core';\nimport { MARK_COMMENT } from '../constants';\nimport { findCommentNode } from '../queries/index';\nimport { getCommentKeys } from '../utils/index';\n\nexport const removeCommentMark = <V extends Value>(editor: PlateEditor<V>) => {\n  const nodeEntry = findCommentNode(editor);\n  if (!nodeEntry) return;\n\n  const keys = getCommentKeys(nodeEntry[0]);\n\n  withoutNormalizing(editor, () => {\n    keys.forEach((key) => {\n      editor.removeMark(key);\n    });\n\n    editor.removeMark(MARK_COMMENT);\n  });\n};\n","import {\n  PlateEditor,\n  unsetNodes,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-core';\nimport { removeCommentMark } from './transforms/removeCommentMark';\nimport { getCommentCount } from './utils/getCommentCount';\nimport { MARK_COMMENT } from './constants';\nimport { CommentsPlugin } from './types';\n\nexport const withComments = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  plugin: WithPlatePlugin<CommentsPlugin, V, E>\n) => {\n  const { normalizeNode, insertBreak } = editor;\n\n  editor.insertBreak = () => {\n    removeCommentMark(editor);\n\n    insertBreak();\n  };\n\n  editor.normalizeNode = (entry) => {\n    const [node, path] = entry;\n\n    // Unset MARK_COMMENT prop when there is no comments\n    if (node[MARK_COMMENT]) {\n      if (getCommentCount(node as any) < 1) {\n        unsetNodes(editor, MARK_COMMENT, { at: path });\n        return;\n      }\n    }\n\n    normalizeNode(entry);\n  };\n\n  return editor;\n};\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { MARK_COMMENT } from './constants';\nimport { CommentsPlugin } from './types';\nimport { useHooksComments } from './useHooksComments';\nimport { withComments } from './withComments';\n\nexport const createCommentsPlugin = createPluginFactory<CommentsPlugin>({\n  key: MARK_COMMENT,\n  isLeaf: true,\n  withOverrides: withComments,\n  useHooks: useHooksComments,\n  options: {\n    hotkey: ['meta+shift+m', 'ctrl+shift+m'],\n  },\n});\n","import {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n} from '@udecode/plate-core';\nimport { useUserById } from '../stores/comments/CommentsProvider';\n\nexport type AvatarImageProps = { userId: string } & HTMLPropsAs<'img'>;\n\nexport const useAvatarImage = ({\n  userId,\n  ...props\n}: AvatarImageProps): HTMLPropsAs<'img'> => {\n  const user = useUserById(userId);\n  const src = user?.avatarUrl;\n  const alt = `Avatar of ${user?.name}`;\n\n  return { src, alt, ...props };\n};\n\nexport const AvatarImage = createComponentAs<AvatarImageProps>((props) => {\n  const htmlProps = useAvatarImage(props);\n  return createElementAs('img', htmlProps);\n});\n","import React from 'react';\nimport { Button, ButtonProps } from '@udecode/plate-button';\nimport { usePlateEditorRef } from '@udecode/plate-core';\nimport { useCommentSelectors } from '../stores/comment/CommentProvider';\nimport {\n  useCommentsActions,\n  useCommentsSelectors,\n  useRemoveComment,\n} from '../stores/comments/CommentsProvider';\nimport { unsetCommentNodesById } from '../utils/index';\n\nexport const useCommentDeleteButton = (props: ButtonProps): ButtonProps => {\n  const activeCommentId = useCommentsSelectors().activeCommentId();\n  const onCommentDelete = useCommentsSelectors().onCommentDelete();\n  const id = useCommentSelectors().id();\n  const setActiveCommentId = useCommentsActions().activeCommentId();\n  const removeComment = useRemoveComment();\n  const editor = usePlateEditorRef();\n\n  return {\n    onClick: () => {\n      if (activeCommentId === id) {\n        unsetCommentNodesById(editor, { id });\n        setActiveCommentId(null);\n      } else {\n        removeComment(id);\n      }\n\n      onCommentDelete?.(id);\n    },\n    ...props,\n  };\n};\n\nexport const CommentDeleteButton = (props: ButtonProps) => {\n  const htmlProps = useCommentDeleteButton(props);\n\n  return <Button {...htmlProps} />;\n};\n","import React from 'react';\nimport { Button, ButtonProps } from '@udecode/plate-button';\nimport { useCommentActions } from '../stores/comment/CommentProvider';\n\nexport const useCommentEditCancelButton = (props: ButtonProps): ButtonProps => {\n  const setEditingValue = useCommentActions().editingValue();\n\n  return {\n    onClick: () => {\n      setEditingValue(null);\n    },\n    ...props,\n  };\n};\n\nexport const CommentEditCancelButton = (props: ButtonProps) => {\n  const htmlProps = useCommentEditCancelButton(props);\n\n  return <Button {...htmlProps} />;\n};\n","import React, { useCallback } from 'react';\nimport { Button, ButtonProps } from '@udecode/plate-button';\nimport {\n  useCommentActions,\n  useCommentSelectors,\n  useCommentText,\n} from '../stores/comment/CommentProvider';\nimport {\n  useCommentsSelectors,\n  useUpdateComment,\n} from '../stores/comments/CommentsProvider';\n\nexport const useCommentEditSaveButton = ({ ...props }: ButtonProps) => {\n  const onCommentUpdate = useCommentsSelectors().onCommentUpdate();\n  const editingValue = useCommentSelectors().editingValue();\n  const setEditingValue = useCommentActions().editingValue();\n  const id = useCommentSelectors().id();\n  const updateComment = useUpdateComment(id);\n  const value = useCommentText();\n\n  const onClick = useCallback(() => {\n    if (!editingValue) return;\n\n    updateComment({\n      value: editingValue,\n    });\n\n    setEditingValue(null);\n\n    onCommentUpdate?.({ id, value: editingValue });\n  }, [editingValue, id, onCommentUpdate, setEditingValue, updateComment]);\n\n  return {\n    onClick,\n    disabled: value?.trim().length === 0,\n    ...props,\n  };\n};\n\nexport const CommentEditSaveButton = (props: ButtonProps) => {\n  const htmlProps = useCommentEditSaveButton(props);\n\n  return <Button {...htmlProps} />;\n};\n","import { CommentEditCancelButton } from './CommentEditCancelButton';\nimport { CommentEditSaveButton } from './CommentEditSaveButton';\n\nexport const CommentEditActions = {\n  SaveButton: CommentEditSaveButton,\n  CancelButton: CommentEditCancelButton,\n};\n","import React from 'react';\nimport { Button, ButtonProps } from '@udecode/plate-button';\nimport {\n  useComment,\n  useCommentActions,\n} from '../stores/comment/CommentProvider';\n\nexport const useCommentEditButton = (props: ButtonProps): ButtonProps => {\n  const setIsMenuOpen = useCommentActions().isMenuOpen();\n  const comment = useComment()!;\n  const editingValue = useCommentActions().editingValue();\n\n  return {\n    onClick: () => {\n      setIsMenuOpen(false);\n      editingValue(comment.value);\n    },\n    ...props,\n  };\n};\n\nexport const CommentEditButton = (props: ButtonProps) => {\n  const htmlProps = useCommentEditButton(props);\n\n  return <Button {...htmlProps} />;\n};\n","import { useEffect, useRef } from 'react';\nimport {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n  useComposedRef,\n} from '@udecode/plate-core';\nimport {\n  useCommentActions,\n  useEditingCommentText,\n} from '../stores/comment/CommentProvider';\n\nexport type CommentEditTextareaProps = {} & HTMLPropsAs<'textarea'>;\n\nexport const useCommentEditTextarea = ({\n  ref: _ref,\n  ...props\n}: CommentEditTextareaProps): HTMLPropsAs<'textarea'> => {\n  const setEditingValue = useCommentActions().editingValue();\n  const value = useEditingCommentText();\n\n  const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n  const ref = useComposedRef(textareaRef, _ref);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const textarea = textareaRef.current;\n      if (textarea) {\n        textarea.focus();\n      }\n    }, 0);\n  }, [textareaRef]);\n\n  return {\n    placeholder: 'Add a comment...',\n    rows: 1,\n    ref,\n    value: value ?? undefined,\n    onChange: (event) => {\n      setEditingValue([\n        { type: 'p', children: [{ text: event.target.value }] },\n      ]);\n    },\n    ...props,\n  };\n};\n\nexport const CommentEditTextarea = createComponentAs<CommentEditTextareaProps>(\n  (props) => {\n    const htmlProps = useCommentEditTextarea(props);\n    return createElementAs('textarea', htmlProps);\n  }\n);\n","import {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n} from '@udecode/plate-core';\n\nexport type CommentLinkButtonProps = {} & HTMLPropsAs<'div'>;\n\nexport const useCommentLinkButton = (\n  props: CommentLinkButtonProps\n): HTMLPropsAs<'div'> => {\n  return { onClick: () => {}, ...props };\n};\n\nexport const CommentLinkButton = createComponentAs<CommentLinkButtonProps>(\n  (props) => {\n    const htmlProps = useCommentLinkButton(props);\n    return createElementAs('div', htmlProps);\n  }\n);\n","import {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n} from '@udecode/plate-core';\n\nexport type CommentLinkDialogCloseButtonProps = {} & HTMLPropsAs<'div'>;\n\nexport const useCommentLinkDialogCloseButton = ({\n  ...props\n}: CommentLinkDialogCloseButtonProps): HTMLPropsAs<'div'> => {\n  return {\n    onClick: () => {\n      // onClose?.();\n    },\n    ...props,\n  };\n};\n\nexport const CommentLinkDialogCloseButton = createComponentAs<CommentLinkDialogCloseButtonProps>(\n  (props) => {\n    const htmlProps = useCommentLinkDialogCloseButton(props);\n    return createElementAs('div', htmlProps);\n  }\n);\n","import {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n} from '@udecode/plate-core';\nimport { useCommentSelectors } from '../stores/comment/CommentProvider';\nimport { getCommentUrl } from '../utils/getCommentUrl';\n\nexport type CommentLinkDialogCopyLinkProps = {} & HTMLPropsAs<'div'>;\n\nexport const useCommentLinkDialogCopyLink = ({\n  ...props\n}: CommentLinkDialogCopyLinkProps): HTMLPropsAs<'div'> => {\n  const id = useCommentSelectors().id();\n\n  return {\n    onClick: () => {\n      navigator.clipboard.writeText(getCommentUrl(id));\n    },\n    ...props,\n  };\n};\n\nexport const CommentLinkDialogCopyLink = createComponentAs<CommentLinkDialogCopyLinkProps>(\n  (props) => {\n    const htmlProps = useCommentLinkDialogCopyLink(props);\n    return createElementAs('div', htmlProps);\n  }\n);\n","import {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n} from '@udecode/plate-core';\nimport { useCommentSelectors } from '../stores/comment/CommentProvider';\nimport { getCommentUrl } from '../utils/getCommentUrl';\n\nexport type CommentLinkDialogInputProps = {} & HTMLPropsAs<'input'>;\n\nexport const useCommentLinkDialogInput = ({\n  ...props\n}: CommentLinkDialogInputProps): HTMLPropsAs<'input'> => {\n  return {\n    defaultValue: getCommentUrl(useCommentSelectors().id()),\n    readOnly: true,\n    ...props,\n  };\n};\n\nexport const CommentLinkDialogInput = createComponentAs<CommentLinkDialogInputProps>(\n  (props) => {\n    const htmlProps = useCommentLinkDialogInput(props);\n    return createElementAs('input', htmlProps);\n  }\n);\n","import { CommentLinkDialogCloseButton } from './CommentLinkDialogCloseButton';\nimport { CommentLinkDialogCopyLink } from './CommentLinkDialogCopyLink';\nimport { CommentLinkDialogInput } from './CommentLinkDialogInput';\n\nexport const CommentLinkDialog = {\n  CloseButton: CommentLinkDialogCloseButton,\n  CopyLink: CommentLinkDialogCopyLink,\n  Input: CommentLinkDialogInput,\n};\n","import React from 'react';\nimport { Button, ButtonProps } from '@udecode/plate-button';\nimport { nanoid } from '@udecode/plate-core';\nimport {\n  SCOPE_ACTIVE_COMMENT,\n  useComment,\n} from '../stores/comment/CommentProvider';\nimport {\n  useAddComment,\n  useCommentsSelectors,\n  useNewCommentText,\n  useResetNewCommentValue,\n} from '../stores/comments/CommentsProvider';\n\nexport const useCommentNewSubmitButton = ({\n  ...props\n}: ButtonProps): ButtonProps => {\n  const onCommentAdd = useCommentsSelectors().onCommentAdd();\n  const activeCommentId = useCommentsSelectors().activeCommentId()!;\n  const comment = useComment(SCOPE_ACTIVE_COMMENT)!;\n  const newValue = useCommentsSelectors().newValue();\n\n  const editingCommentText = useNewCommentText();\n  const resetNewCommentValue = useResetNewCommentValue();\n  const addComment = useAddComment();\n\n  const isReplyComment = !!comment;\n\n  const submitButtonText = isReplyComment ? 'Reply' : 'Comment';\n\n  return {\n    type: 'submit',\n    disabled: !editingCommentText?.trim().length,\n    children: submitButtonText,\n    onClick: () => {\n      const newComment = isReplyComment\n        ? {\n            id: nanoid(),\n            parentId: comment.id,\n            value: newValue,\n          }\n        : {\n            id: activeCommentId,\n            value: newValue,\n          };\n\n      addComment(newComment);\n      onCommentAdd?.(newComment);\n\n      resetNewCommentValue();\n    },\n    ...props,\n  };\n};\n\nexport const CommentNewSubmitButton = (props: ButtonProps) => {\n  const htmlProps = useCommentNewSubmitButton(props);\n\n  return <Button {...htmlProps} />;\n};\n","import { useEffect, useRef } from 'react';\nimport {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n  useComposedRef,\n} from '@udecode/plate-core';\nimport {\n  useCommentById,\n  useCommentsActions,\n  useCommentsSelectors,\n  useNewCommentText,\n} from '../stores/comments/CommentsProvider';\n\nexport type CommentNewTextareaProps = {} & HTMLPropsAs<'textarea'>;\n\nexport const useCommentNewTextarea = ({\n  ref: _ref,\n  ...props\n}: CommentNewTextareaProps): HTMLPropsAs<'textarea'> => {\n  const setNewValue = useCommentsActions().newValue();\n  const activeComment = useCommentById(\n    useCommentsSelectors().activeCommentId()\n  );\n  const value = useNewCommentText();\n  const focusTextarea = useCommentsSelectors().focusTextarea();\n  const setFocusTextarea = useCommentsActions().focusTextarea();\n\n  const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n  const ref = useComposedRef(textareaRef, _ref);\n\n  useEffect(() => {\n    if (focusTextarea) {\n      textareaRef.current?.focus();\n      setFocusTextarea(false);\n    }\n  }, [focusTextarea, setFocusTextarea, textareaRef]);\n\n  const placeholder = `${activeComment ? 'Reply...' : 'Add a comment...'}`;\n\n  return {\n    placeholder,\n    rows: 1,\n    ref,\n    value: value ?? undefined,\n    onChange: (event) => {\n      setNewValue([{ type: 'p', children: [{ text: event.target.value }] }]);\n    },\n    ...props,\n  };\n};\n\nexport const CommentNewTextarea = createComponentAs<CommentNewTextareaProps>(\n  (props) => {\n    const htmlProps = useCommentNewTextarea(props);\n    return createElementAs('textarea', htmlProps);\n  }\n);\n","import React from 'react';\nimport { Button, ButtonProps } from '@udecode/plate-button';\nimport { useComment } from '../stores/comment/CommentProvider';\nimport {\n  useCommentsActions,\n  useCommentsSelectors,\n  useUpdateComment,\n} from '../stores/comments/CommentsProvider';\n\nexport const useCommentResolveButton = ({\n  ...props\n}: ButtonProps): ButtonProps => {\n  const onCommentUpdate = useCommentsSelectors().onCommentUpdate();\n  const activeCommentId = useCommentsSelectors().activeCommentId();\n  const setActiveCommentId = useCommentsActions().activeCommentId();\n  const updateComment = useUpdateComment(activeCommentId);\n\n  const comment = useComment()!;\n\n  return {\n    onClick: () => {\n      const isResolved = !comment.isResolved;\n\n      const value = {\n        isResolved,\n      };\n\n      updateComment(value);\n\n      onCommentUpdate?.({\n        id: activeCommentId!,\n        ...value,\n      });\n\n      if (isResolved) {\n        setActiveCommentId(null);\n      }\n    },\n    ...props,\n  };\n};\n\nexport const CommentResolveButton = (props: ButtonProps) => {\n  const htmlProps = useCommentResolveButton(props);\n\n  return <Button {...htmlProps} />;\n};\n","import {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n} from '@udecode/plate-core';\nimport { useCommentUser } from '../stores/comment/CommentProvider';\n\nexport type CommentUserNameProps = {} & HTMLPropsAs<'div'>;\n\nexport const useCommentUserName = (\n  props: CommentUserNameProps\n): HTMLPropsAs<'div'> => {\n  const user = useCommentUser();\n\n  return { ...props, children: user?.name ?? 'Anonymous' };\n};\n\nexport const CommentUserName = createComponentAs<CommentUserNameProps>(\n  (props) => {\n    const htmlProps = useCommentUserName(props);\n    return createElementAs('div', htmlProps);\n  }\n);\n","import { useEffect, useState } from 'react';\nimport {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n  toDOMNode,\n  usePlateEditorRef,\n} from '@udecode/plate-core';\nimport { getCommentPosition } from '../queries/index';\nimport { useCommentsSelectors } from '../stores/comments/CommentsProvider';\nimport { useActiveCommentNode } from '../stores/comments/useActiveCommentNode';\n\nexport interface CommentsPositionerProps extends HTMLPropsAs<'div'> {}\n\nexport const useCommentsPositioner = (props: CommentsPositionerProps = {}) => {\n  const editor = usePlateEditorRef();\n  const activeCommentId = useCommentsSelectors().activeCommentId();\n\n  const [position, setPosition] = useState<{ top: number; left: number }>({\n    left: 0,\n    top: 0,\n  });\n\n  const [node] = useActiveCommentNode() ?? [];\n\n  useEffect(() => {\n    if (!node) return;\n\n    const domNode = toDOMNode(editor, node);\n    if (!domNode) return;\n\n    const newPosition = getCommentPosition(editor, node);\n    if (!newPosition) return;\n\n    setPosition(newPosition);\n  }, [editor, node]);\n\n  return {\n    display: !activeCommentId ? 'none' : undefined,\n    ...props,\n    style: {\n      ...props.style,\n      ...position,\n    },\n  };\n};\n\nexport const CommentsPositioner = createComponentAs<CommentsPositionerProps>(\n  (props) => {\n    const htmlProps = useCommentsPositioner(props);\n\n    if (htmlProps.display === 'none') return null;\n\n    return createElementAs('div', htmlProps);\n  }\n);\n","import { MouseEventHandler, useCallback } from 'react';\nimport { HTMLPropsAs } from '@udecode/plate-core';\nimport { useAddCommentMark, useCommentsActions } from '../stores/index';\n\nexport const useCommentAddButton = (\n  props: HTMLPropsAs<'span'>\n): HTMLPropsAs<'span'> => {\n  const addCommentMark = useAddCommentMark();\n  const setFocusTextarea = useCommentsActions().focusTextarea();\n\n  const onClick = useCallback<MouseEventHandler<HTMLSpanElement>>(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      addCommentMark();\n      setFocusTextarea(true);\n    },\n    [addCommentMark, setFocusTextarea]\n  );\n\n  return { onClick, ...props };\n};\n","import { useRef } from 'react';\nimport { useOnClickOutside, usePlateEditorRef } from '@udecode/plate-core';\nimport {\n  useCommentById,\n  useCommentsActions,\n  useCommentsSelectors,\n} from '../stores/index';\nimport { unsetCommentNodesById } from '../utils/index';\n\nexport const useFloatingCommentsContentState = () => {\n  const activeCommentId = useCommentsSelectors().activeCommentId()!;\n  const activeComment = useCommentById(activeCommentId);\n  const setActiveCommentId = useCommentsActions().activeCommentId();\n  const editor = usePlateEditorRef();\n  const myUserId = useCommentsSelectors().myUserId();\n\n  const ref = useRef(null);\n\n  const refs: any[] = [ref];\n\n  useOnClickOutside(\n    () => {\n      if (!activeComment) {\n        unsetCommentNodesById(editor, { id: activeCommentId });\n      }\n\n      setActiveCommentId(null);\n    },\n    { refs }\n  );\n\n  return {\n    ref,\n    activeCommentId,\n    myUserId,\n    hasNoComment: !activeComment,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useCommentsSelectors, useResetNewCommentValue } from '../stores/index';\n\nexport const useFloatingCommentsState = () => {\n  const activeCommentId = useCommentsSelectors().activeCommentId();\n  const resetNewCommentValue = useResetNewCommentValue();\n\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    setLoaded(true);\n  }, []);\n\n  // reset comment editing value when active comment id changes\n  useEffect(() => {\n    if (activeCommentId) {\n      resetNewCommentValue();\n    }\n  }, [activeCommentId, resetNewCommentValue]);\n\n  return {\n    loaded,\n    activeCommentId,\n  };\n};\n","import React, { SVGProps } from 'react';\n\nexport const AccountCircleIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2a7.2 7.2 0 01-6-3.22c.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08a7.2 7.2 0 01-6 3.22z\" />\n  </svg>\n);\n","import React, { SVGProps } from 'react';\n\nexport const CheckIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n    <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n  </svg>\n);\n","import React, { SVGProps } from 'react';\n\nexport const MoreVertIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n    <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n  </svg>\n);\n","import React, { SVGProps } from 'react';\n\nexport const RefreshIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n    <path d=\"M17.65 6.35A7.958 7.958 0 0012 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0112 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\n  </svg>\n);\n"],"names":["MARK_COMMENT","SCOPE_COMMENTS","Symbol","commentsStore","useCommentsStore","createAtomStore","myUserId","users","comments","activeCommentId","addingCommentId","newValue","type","children","text","focusTextarea","onCommentAdd","onCommentUpdate","onCommentDelete","name","scope","CommentsProvider","props","getJotaiProviderInitialValues","useCommentsStates","use","useCommentsSelectors","get","useCommentsActions","set","useCommentById","id","useUserById","useMyUser","useNewCommentText","editingValue","getNodeString","useResetNewCommentValue","setNewValue","useUpdateComment","comment","setComments","value","useAddRawComment","userId","useAddComment","nanoid","createdAt","Date","now","useRemoveComment","SCOPE_COMMENT","SCOPE_ACTIVE_COMMENT","commentStore","useCommentStore","isMenuOpen","useCommentStates","useCommentSelectors","useCommentActions","CommentProvider","useCommentUser","commentId","useCommentReplies","replies","Object","keys","forEach","parentId","useComment","useCommentText","useEditingCommentText","findCommentNode","editor","options","findNode","match","n","getCommentKey","findCommentNodeById","at","isCommentKey","key","startsWith","getCommentCount","node","commentCount","getCommentKeyId","replace","getCommentKeys","push","getCommentUrl","url","URL","window","location","href","searchParams","toString","getElementAbsolutePosition","element","left","top","currentElement","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","isCommentNodeById","isCommentText","unsetCommentNodesById","unsetNodes","getCommentNodeEntries","getNodeEntries","getCommentNodesById","Array","from","trimmedEndIndex","global","freeGlobal","root","objectProto","nativeObjectToString","symToStringTag","getRawTag","objectToString","isObjectLike","baseGetTag","isSymbol","isObject","baseTrim","toNumber","baseClamp","getCommentPosition","DOMNode","toDOMNode","DOMNodePosition","editorDOMNode","x","editorX","width","editorWidth","getBoundingClientRect","sidebarWidth","padding","_clamp","innerWidth","useActiveCommentNode","usePlateEditorRef","useAddCommentMark","setActiveCommentId","selection","isExpanded","setNodes","isText","split","deselectEditor","err","setTimeout","useCommentsResolved","res","isResolved","useHooksComments","hotkey","addCommentMark","setFocusTextarea","useHotkeys","e","preventDefault","enableOnContentEditable","removeCommentMark","nodeEntry","withoutNormalizing","removeMark","withComments","plugin","normalizeNode","insertBreak","entry","path","createCommentsPlugin","createPluginFactory","isLeaf","withOverrides","useHooks","useAvatarImage","user","src","avatarUrl","alt","AvatarImage","createComponentAs","htmlProps","createElementAs","useCommentDeleteButton","removeComment","onClick","CommentDeleteButton","useCommentEditCancelButton","setEditingValue","CommentEditCancelButton","useCommentEditSaveButton","updateComment","useCallback","disabled","trim","length","CommentEditSaveButton","CommentEditActions","SaveButton","CancelButton","useCommentEditButton","setIsMenuOpen","CommentEditButton","useCommentEditTextarea","ref","_ref","textareaRef","useRef","useComposedRef","useEffect","textarea","current","focus","placeholder","rows","undefined","onChange","event","target","CommentEditTextarea","useCommentLinkButton","CommentLinkButton","useCommentLinkDialogCloseButton","CommentLinkDialogCloseButton","useCommentLinkDialogCopyLink","navigator","clipboard","writeText","CommentLinkDialogCopyLink","useCommentLinkDialogInput","defaultValue","readOnly","CommentLinkDialogInput","CommentLinkDialog","CloseButton","CopyLink","Input","useCommentNewSubmitButton","editingCommentText","resetNewCommentValue","addComment","isReplyComment","submitButtonText","newComment","CommentNewSubmitButton","useCommentNewTextarea","activeComment","CommentNewTextarea","useCommentResolveButton","CommentResolveButton","useCommentUserName","CommentUserName","useCommentsPositioner","position","setPosition","useState","domNode","newPosition","display","style","CommentsPositioner","useCommentAddButton","stopPropagation","useFloatingCommentsContentState","refs","useOnClickOutside","hasNoComment","useFloatingCommentsState","loaded","setLoaded","AccountCircleIcon","CheckIcon","MoreVertIcon","RefreshIcon"],"mappings":"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"}