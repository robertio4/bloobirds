import { TElement } from '@udecode/plate-core';
import { GetSiblingIndentListOptions } from './queries/getSiblingIndentList';
import { ListStyleType } from './types';
export declare const KEY_LIST_STYLE_TYPE = "listStyleType";
export declare const KEY_LIST_START = "listStart";
export declare const KEY_LIST_RESTART = "listRestart";
export interface IndentListPlugin {
    getSiblingIndentListOptions?: GetSiblingIndentListOptions<TElement>;
    /**
     * Map html element to list style type.
     */
    getListStyleType?: (element: HTMLElement) => ListStyleType;
}
export declare const createIndentListPlugin: <OP = IndentListPlugin, OV extends import("@udecode/plate-core").Value = import("@udecode/plate-core").Value, OE extends import("@udecode/plate-core").PlateEditor<OV> = import("@udecode/plate-core").PlateEditor<OV>>(override?: Partial<import("@udecode/plate-core").PlatePlugin<import("@udecode/plate-core").NoInfer<OP>, OV, OE>> | undefined, overrideByKey?: import("@udecode/plate-core").OverrideByKey<OV, OE> | undefined) => import("@udecode/plate-core").PlatePlugin<import("@udecode/plate-core").NoInfer<OP>, OV, OE>;
//# sourceMappingURL=createIndentListPlugin.d.ts.map