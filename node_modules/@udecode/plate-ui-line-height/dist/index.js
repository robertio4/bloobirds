'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var plateCore = require('@udecode/plate-core');
var plateLineHeight = require('@udecode/plate-line-height');
var plateUiToolbar = require('@udecode/plate-ui-toolbar');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return _extends.apply(this, arguments);
}

const LineHeightToolbarDropdown = ({
  id,
  ...props
}) => {
  const editor = plateCore.usePlateEditorState(plateCore.useEventPlateId(id));
  const [open, setOpen] = React__default["default"].useState(false);
  const {
    validNodeValues
  } = plateCore.getPluginInjectProps(editor, plateLineHeight.KEY_LINE_HEIGHT);
  const onToggle = React.useCallback(() => {
    setOpen(!open);
  }, [open, setOpen]);
  const selectHandler = React.useCallback(lineHeight => {
    if (editor) {
      plateCore.focusEditor(editor);
      plateLineHeight.setLineHeight(editor, {
        value: lineHeight
      });
    }
  }, [editor]);
  return /*#__PURE__*/React__default["default"].createElement(plateUiToolbar.ToolbarDropdown, {
    control: /*#__PURE__*/React__default["default"].createElement(plateUiToolbar.ToolbarButton, _extends({
      active: plateCore.isCollapsed(editor === null || editor === void 0 ? void 0 : editor.selection) && plateCore.someNode(editor, {
        match: n => n[plateLineHeight.KEY_LINE_HEIGHT] !== undefined
      })
    }, props)),
    open: open,
    onOpen: onToggle,
    onClose: onToggle
  }, validNodeValues && validNodeValues.map(lineHeight => /*#__PURE__*/React__default["default"].createElement("div", {
    style: {
      cursor: 'pointer'
    },
    key: lineHeight,
    onClick: () => selectHandler(lineHeight)
  }, lineHeight)));
};

exports.LineHeightToolbarDropdown = LineHeightToolbarDropdown;
//# sourceMappingURL=index.js.map
