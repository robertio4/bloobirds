{"version":3,"file":"index.es.js","sources":["../src/LineHeightToolbarButton/LineHeightToolbarDropdown.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport {\n  focusEditor,\n  getPluginInjectProps,\n  isCollapsed,\n  someNode,\n  useEventPlateId,\n  usePlateEditorState,\n} from '@udecode/plate-core';\nimport { KEY_LINE_HEIGHT, setLineHeight } from '@udecode/plate-line-height';\nimport {\n  ToolbarButton,\n  ToolbarButtonProps,\n  ToolbarDropdown,\n} from '@udecode/plate-ui-toolbar';\n\nexport const LineHeightToolbarDropdown = ({\n  id,\n  ...props\n}: ToolbarButtonProps) => {\n  const editor = usePlateEditorState(useEventPlateId(id));\n\n  const [open, setOpen] = React.useState(false);\n\n  const { validNodeValues } = getPluginInjectProps(editor, KEY_LINE_HEIGHT);\n\n  const onToggle = useCallback(() => {\n    setOpen(!open);\n  }, [open, setOpen]);\n\n  const selectHandler = useCallback(\n    (lineHeight) => {\n      if (editor) {\n        focusEditor(editor);\n\n        setLineHeight(editor, {\n          value: lineHeight,\n        });\n      }\n    },\n    [editor]\n  );\n\n  return (\n    <ToolbarDropdown\n      control={\n        <ToolbarButton\n          active={\n            isCollapsed(editor?.selection) &&\n            someNode(editor!, {\n              match: (n) => n[KEY_LINE_HEIGHT] !== undefined,\n            })\n          }\n          {...props}\n        />\n      }\n      open={open}\n      onOpen={onToggle}\n      onClose={onToggle}\n    >\n      {validNodeValues &&\n        validNodeValues.map((lineHeight) => (\n          <div\n            style={{ cursor: 'pointer' }}\n            key={lineHeight}\n            onClick={() => selectHandler(lineHeight)}\n          >\n            {lineHeight}\n          </div>\n        ))}\n    </ToolbarDropdown>\n  );\n};\n"],"names":["LineHeightToolbarDropdown","id","props","editor","usePlateEditorState","useEventPlateId","open","setOpen","React","useState","validNodeValues","getPluginInjectProps","KEY_LINE_HEIGHT","onToggle","useCallback","selectHandler","lineHeight","focusEditor","setLineHeight","value","isCollapsed","selection","someNode","match","n","undefined","map","cursor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAgBO,MAAMA,yBAAyB,GAAG,CAAC;EACxCC,EADwC;EAExC,GAAGC,KAAAA;AAFqC,CAAD,KAGf;EACxB,MAAMC,MAAM,GAAGC,mBAAmB,CAACC,eAAe,CAACJ,EAAD,CAAhB,CAAlC,CAAA;EAEA,MAAM,CAACK,IAAD,EAAOC,OAAP,CAAA,GAAkBC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB,CAAA;EAEA,MAAM;AAAEC,IAAAA,eAAAA;AAAF,GAAA,GAAsBC,oBAAoB,CAACR,MAAD,EAASS,eAAT,CAAhD,CAAA;AAEA,EAAA,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;IACjCP,OAAO,CAAC,CAACD,IAAF,CAAP,CAAA;AACD,GAF2B,EAEzB,CAACA,IAAD,EAAOC,OAAP,CAFyB,CAA5B,CAAA;AAIA,EAAA,MAAMQ,aAAa,GAAGD,WAAW,CAC9BE,UAAD,IAAgB;AACd,IAAA,IAAIb,MAAJ,EAAY;MACVc,WAAW,CAACd,MAAD,CAAX,CAAA;MAEAe,aAAa,CAACf,MAAD,EAAS;AACpBgB,QAAAA,KAAK,EAAEH,UAAAA;AADa,OAAT,CAAb,CAAA;AAGD,KAAA;AACF,GAT8B,EAU/B,CAACb,MAAD,CAV+B,CAAjC,CAAA;AAaA,EAAA,oBACE,oBAAC,eAAD,EAAA;IACE,OAAO,eACL,oBAAC,aAAD,EAAA,QAAA,CAAA;AACE,MAAA,MAAM,EACJiB,WAAW,CAACjB,MAAD,aAACA,MAAD,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAACA,MAAM,CAAEkB,SAAT,CAAX,IACAC,QAAQ,CAACnB,MAAD,EAAU;AAChBoB,QAAAA,KAAK,EAAGC,CAAD,IAAOA,CAAC,CAACZ,eAAD,CAAD,KAAuBa,SAAAA;OAD/B,CAAA;AAHZ,KAAA,EAOMvB,KAPN,CAFJ,CAAA;AAYE,IAAA,IAAI,EAAEI,IAZR;AAaE,IAAA,MAAM,EAAEO,QAbV;AAcE,IAAA,OAAO,EAAEA,QAAAA;AAdX,GAAA,EAgBGH,eAAe,IACdA,eAAe,CAACgB,GAAhB,CAAqBV,UAAD,iBAClB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,KAAK,EAAE;AAAEW,MAAAA,MAAM,EAAE,SAAA;KADnB;AAEE,IAAA,GAAG,EAAEX,UAFP;AAGE,IAAA,OAAO,EAAE,MAAMD,aAAa,CAACC,UAAD,CAAA;GAE3BA,EAAAA,UALH,CADF,CAjBJ,CADF,CAAA;AA6BD;;;;"}