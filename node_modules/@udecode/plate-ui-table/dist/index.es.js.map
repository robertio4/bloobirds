{"version":3,"file":"index.es.js","sources":["../src/table.atoms.ts","../src/TableCellElement/TableCellElement.styles.ts","../../../../../node_modules/clsx/dist/clsx.m.js","../src/hooks/useIsCellSelected.ts","../src/TableCellElement/TableCellElement.tsx","../src/TableElement/TableElement.styles.ts","../src/hooks/useSelectedCells.ts","../src/hooks/useTableColSizes.ts","../src/TablePopover/TablePopover.tsx","../src/TableElement/TableElement.tsx","../src/TableRowElement/TableRowElement.styles.ts","../src/TableRowElement/TableRowElement.tsx","../src/TableToolbarButton/TableToolbarButton.tsx"],"sourcesContent":["import { createAtomStore, TElement } from '@udecode/plate-core';\nimport { ELEMENT_TABLE } from '@udecode/plate-table';\n\nexport const { tableStore, useTableStore } = createAtomStore(\n  {\n    hoveredColIndex: null as number | null,\n    resizingCol: null as { index: number; width: number } | null,\n    selectedCells: null as TElement[] | null,\n  },\n  { name: 'table' as const, scope: ELEMENT_TABLE }\n);\n","import { Value } from '@udecode/plate-core';\nimport { createStyles } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { TableCellElementStyleProps } from './TableCellElement.types';\n\nexport const getTableCellElementStyles = <V extends Value>(\n  props: TableCellElementStyleProps<V>\n) => {\n  const { hovered, selected, hideBorder, readOnly } = props;\n\n  return createStyles(\n    { prefixClassNames: 'TableCellElement', ...props },\n    {\n      root: [\n        tw`relative p-0 overflow-visible bg-white`,\n        hideBorder\n          ? tw`border-none`\n          : tw`border-t border-l border-b-0 border-r-0 border-gray-300`,\n        selected && tw`border border-blue-500`,\n        css`\n          min-width: 48px;\n        `,\n      ],\n      content: tw`relative px-3 py-2 z-10 h-full box-border`,\n      resizableWrapper: [\n        tw`absolute w-full h-full top-0`,\n        selected && tw`hidden`,\n      ],\n      selectedCell: [\n        !selected && tw`hidden`,\n        tw`absolute top-0 left-0 w-full h-full pointer-events-none`,\n        selected &&\n          css`\n            z-index: 12;\n            background-color: rgb(179, 212, 255);\n            opacity: 0.3;\n          `,\n      ],\n      handle: [\n        tw`absolute`,\n        !readOnly && hovered && tw`bg-blue-500`,\n        css`\n          top: -12px;\n          right: -2px;\n\n          width: 4px;\n          height: calc(100% + 12px);\n\n          z-index: 10;\n        `,\n      ],\n    }\n  );\n};\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import { useMemo } from 'react';\nimport { TElement } from '@udecode/plate-core';\nimport { useTableStore } from '../table.atoms';\n\nexport const useIsCellSelected = (element: TElement) => {\n  const selectedCells = useTableStore().get.selectedCells();\n\n  return useMemo(() => selectedCells?.includes(element), [\n    element,\n    selectedCells,\n  ]);\n};\n","import React, { useEffect } from 'react';\nimport { findNodePath, Value } from '@udecode/plate-core';\nimport { getRootProps } from '@udecode/plate-styled-components';\nimport { getTableColumnIndex, setTableColSize } from '@udecode/plate-table';\nimport clsx from 'clsx';\nimport { HandleStyles, Resizable, ResizableProps } from 're-resizable';\nimport { useReadOnly } from 'slate-react';\nimport { useIsCellSelected } from '../hooks/useIsCellSelected';\nimport { useTableStore } from '../table.atoms';\nimport { getTableCellElementStyles } from './TableCellElement.styles';\nimport { TableCellElementProps } from './TableCellElement.types';\n\nexport const TableCellElement = <V extends Value>(\n  props: TableCellElementProps<V>\n) => {\n  const {\n    attributes,\n    children,\n    nodeProps,\n    element,\n    resizableProps,\n    editor,\n    ignoreReadOnly = false,\n  } = props;\n\n  const rootProps = getRootProps(props);\n  const readOnly = useReadOnly();\n\n  const [\n    hoveredColIndex,\n    setHoveredColIndex,\n  ] = useTableStore().use.hoveredColIndex();\n  const setResizingCol = useTableStore().set.resizingCol();\n\n  useEffect(() => {\n    setHoveredColIndex(null);\n  }, [element, setHoveredColIndex]);\n\n  const isCellSelected = useIsCellSelected(element);\n\n  const handleResize: HandleStyles | undefined =\n    ignoreReadOnly || !readOnly\n      ? {\n          right: {\n            top: -12,\n            height: 'calc(100% + 12px)',\n            zIndex: 20,\n          },\n        }\n      : undefined;\n\n  const colIndex = getTableColumnIndex(editor, { node: element });\n\n  const {\n    root,\n    content,\n    resizableWrapper,\n    resizable,\n    selectedCell,\n    handle,\n  } = getTableCellElementStyles({\n    ...props,\n    selected: isCellSelected,\n    hovered: hoveredColIndex === colIndex,\n    readOnly: !ignoreReadOnly && readOnly,\n  });\n\n  const onResize: ResizableProps['onResize'] = (e, direction, ref) => {\n    setResizingCol({\n      index: colIndex,\n      width: ref.offsetWidth,\n    });\n  };\n\n  const onResizeStop: ResizableProps['onResizeStop'] = (e, direction, ref) => {\n    setTableColSize(\n      editor,\n      { colIndex, width: ref.offsetWidth },\n      { at: findNodePath(editor, element)! }\n    );\n\n    setResizingCol(null);\n    setHoveredColIndex(null);\n  };\n\n  return (\n    <td\n      {...attributes}\n      css={root.css}\n      className={root.className}\n      {...rootProps}\n      {...nodeProps}\n    >\n      <div css={content?.css} className={content?.className}>\n        {children}\n      </div>\n\n      <div\n        css={resizableWrapper?.css}\n        className={clsx(resizableWrapper?.className, 'group')}\n        contentEditable={false}\n        onMouseOver={() => setHoveredColIndex(colIndex)}\n        onFocus={() => setHoveredColIndex(colIndex)}\n        onMouseOut={() => setHoveredColIndex(null)}\n        onBlur={() => setHoveredColIndex(null)}\n      >\n        <Resizable\n          // @ts-ignore\n          css={resizable?.css}\n          className={resizable?.className}\n          size={{ width: '100%', height: '100%' }}\n          enable={{ right: ignoreReadOnly || !readOnly }}\n          handleStyles={handleResize}\n          onResize={onResize}\n          onResizeStop={onResizeStop}\n          {...resizableProps}\n        />\n\n        <div css={handle?.css} className={handle?.className} />\n      </div>\n\n      <div\n        css={selectedCell?.css}\n        className={selectedCell?.className}\n        contentEditable={false}\n      />\n    </td>\n  );\n};\n","import { Value } from '@udecode/plate-core';\nimport { createStyles } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { TableElementStyleProps } from './TableElement.types';\n\nexport const getTableElementStyles = <V extends Value>(\n  props: TableElementStyleProps<V>\n) =>\n  createStyles(\n    { prefixClassNames: 'TableElement', ...props },\n    {\n      root: [\n        tw`table table-fixed h-px w-full my-4 mx-0 border-collapse border border-solid border-gray-300`,\n        props.isSelectingCell &&\n          css`\n            *::selection {\n              background: none;\n            }\n          `,\n      ],\n      tbody: tw`min-w-full`,\n    }\n  );\n","import { useEffect } from 'react';\nimport { useEditorRef } from '@udecode/plate-core';\nimport { getTableGridAbove } from '@udecode/plate-table';\nimport { useReadOnly, useSelected } from 'slate-react';\nimport { useTableStore } from '../table.atoms';\n\n/**\n * Many grid cells above and diff -> set\n * No many grid cells above and diff -> unset\n * No selection -> unset\n */\nexport const useSelectedCells = () => {\n  const readOnly = useReadOnly();\n  const selected = useSelected();\n  const editor = useEditorRef();\n\n  const [selectedCells, setSelectedCells] = useTableStore().use.selectedCells();\n\n  useEffect(() => {\n    if (!selected || readOnly) setSelectedCells(null);\n  }, [selected, editor, setSelectedCells, readOnly]);\n\n  useEffect(() => {\n    if (readOnly) return;\n\n    const cellEntries = getTableGridAbove(editor, { format: 'cell' });\n    if (cellEntries.length > 1) {\n      const cells = cellEntries.map((entry) => entry[0]);\n\n      if (JSON.stringify(cells) !== JSON.stringify(selectedCells)) {\n        setSelectedCells(cells);\n      }\n    } else if (selectedCells) {\n      setSelectedCells(null);\n    }\n  }, [editor, editor.selection, readOnly, selectedCells, setSelectedCells]);\n};\n","import { useEffect } from 'react';\nimport {\n  findNodePath,\n  getPluginOptions,\n  unsetNodes,\n  useEditorRef,\n} from '@udecode/plate-core';\nimport {\n  ELEMENT_TABLE,\n  getTableColumnCount,\n  TablePlugin,\n  TTableElement,\n} from '@udecode/plate-table';\nimport { useTableStore } from '../table.atoms';\n\n/**\n * Returns node.colSizes if it exists, otherwise returns a 0-filled array.\n * Unset node.colSizes if `colCount` updates to 1.\n */\nexport const useTableColSizes = (tableNode: TTableElement): number[] => {\n  const editor = useEditorRef();\n  const resizingCol = useTableStore().get.resizingCol();\n\n  const { disableUnsetSingleColSize } = getPluginOptions<TablePlugin>(\n    editor,\n    ELEMENT_TABLE\n  );\n\n  const colCount = getTableColumnCount(tableNode);\n\n  const colSizes = tableNode.colSizes\n    ? [...tableNode.colSizes]\n    : Array(colCount);\n\n  if (resizingCol) {\n    colSizes[resizingCol.index ?? 0] = resizingCol.width;\n  }\n\n  useEffect(() => {\n    if (\n      !disableUnsetSingleColSize &&\n      colCount < 2 &&\n      tableNode.colSizes?.length\n    ) {\n      unsetNodes(editor, 'colSizes', {\n        at: findNodePath(editor, tableNode),\n      });\n    }\n  }, [colCount, disableUnsetSingleColSize, editor, tableNode]);\n\n  return colSizes;\n};\n","import React from 'react';\nimport { useElement } from '@udecode/plate-core';\nimport { ElementPopover, PopoverProps } from '@udecode/plate-floating';\nimport { RemoveNodeButton } from '@udecode/plate-ui-button';\nimport { floatingButtonCss, floatingRootCss } from '@udecode/plate-ui-toolbar';\n\nexport const TablePopover = ({ children, ...props }: PopoverProps) => {\n  const element = useElement();\n\n  return (\n    <ElementPopover\n      content={\n        <RemoveNodeButton\n          element={element}\n          css={floatingButtonCss}\n          contentEditable={false}\n        />\n      }\n      css={floatingRootCss}\n      {...props}\n    >\n      {children}\n    </ElementPopover>\n  );\n};\n","import React from 'react';\nimport { Value } from '@udecode/plate-core';\nimport { getRootProps } from '@udecode/plate-styled-components';\nimport { useSelectedCells } from '../hooks/useSelectedCells';\nimport { useTableColSizes } from '../hooks/useTableColSizes';\nimport { useTableStore } from '../table.atoms';\nimport { TablePopover } from '../TablePopover/TablePopover';\nimport { getTableElementStyles } from './TableElement.styles';\nimport { TableElementProps } from './TableElement.types';\n\nexport const TableElement = <V extends Value>({\n  transformColSizes,\n  popoverProps,\n  ...props\n}: TableElementProps<V>) => {\n  const { attributes, children, nodeProps, element } = props;\n\n  const rootProps = getRootProps(props);\n\n  const selectedCells = useTableStore().get.selectedCells();\n\n  const { root, tbody } = getTableElementStyles({\n    ...props,\n    isSelectingCell: !!selectedCells,\n  });\n\n  let colSizes = useTableColSizes(element);\n\n  if (transformColSizes) {\n    colSizes = transformColSizes(colSizes);\n  }\n\n  useSelectedCells();\n\n  return (\n    <table\n      {...attributes}\n      css={root.css}\n      className={root.className}\n      {...rootProps}\n      {...nodeProps}\n    >\n      <colgroup contentEditable={false}>\n        {colSizes.map((width, index) => (\n          <col key={index} style={width ? { width } : undefined} />\n        ))}\n      </colgroup>\n\n      <TablePopover {...popoverProps}>\n        <tbody css={tbody?.css} className={tbody?.className}>\n          {children}\n        </tbody>\n      </TablePopover>\n    </table>\n  );\n};\n","import { Value } from '@udecode/plate-core';\nimport { createStyles } from '@udecode/plate-styled-components';\nimport tw from 'twin.macro';\nimport { TableRowElementStyleProps } from './TableRowElement.types';\n\nexport const getTableRowElementStyles = <V extends Value>(\n  props: TableRowElementStyleProps<V>\n) =>\n  createStyles(\n    { prefixClassNames: 'TableRowElement', ...props },\n    {\n      root: [props.hideBorder && tw`border-none`],\n    }\n  );\n","import React from 'react';\nimport { Value } from '@udecode/plate-core';\nimport { getRootProps } from '@udecode/plate-styled-components';\nimport { getTableRowElementStyles } from './TableRowElement.styles';\nimport { TableRowElementProps } from './TableRowElement.types';\n\nexport const TableRowElement = <V extends Value>(\n  props: TableRowElementProps<V>\n) => {\n  const { attributes, children, nodeProps } = props;\n\n  const rootProps = getRootProps(props);\n  const { root } = getTableRowElementStyles(props);\n\n  return (\n    <tr\n      {...attributes}\n      css={root.css}\n      className={root.className}\n      {...rootProps}\n      {...nodeProps}\n    >\n      {children}\n    </tr>\n  );\n};\n","import React from 'react';\nimport {\n  focusEditor,\n  getPluginType,\n  someNode,\n  useEventPlateId,\n  usePlateEditorState,\n  Value,\n} from '@udecode/plate-core';\nimport { ELEMENT_TABLE } from '@udecode/plate-table';\nimport { ToolbarButton } from '@udecode/plate-ui-toolbar';\nimport { TableToolbarButtonProps } from './TableToolbarButton.types';\n\nexport const TableToolbarButton = <V extends Value>({\n  id,\n  transform,\n  header,\n  ...props\n}: TableToolbarButtonProps<V>) => {\n  const editor = usePlateEditorState<V>(useEventPlateId(id));\n  const type = getPluginType(editor, ELEMENT_TABLE);\n  const active = !!editor?.selection && someNode(editor, { match: { type } });\n\n  return (\n    <ToolbarButton\n      active={active}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        transform(editor, { header });\n\n        focusEditor(editor);\n      }}\n      {...props}\n    />\n  );\n};\n"],"names":["tableStore","useTableStore","createAtomStore","hoveredColIndex","resizingCol","selectedCells","name","scope","ELEMENT_TABLE","getTableCellElementStyles","props","hovered","selected","hideBorder","readOnly","createStyles","prefixClassNames","root","css","content","resizableWrapper","selectedCell","handle","useIsCellSelected","element","get","useMemo","includes","TableCellElement","attributes","children","nodeProps","resizableProps","editor","ignoreReadOnly","rootProps","getRootProps","useReadOnly","setHoveredColIndex","use","setResizingCol","set","useEffect","isCellSelected","handleResize","right","top","height","zIndex","undefined","colIndex","getTableColumnIndex","node","resizable","onResize","e","direction","ref","index","width","offsetWidth","onResizeStop","setTableColSize","at","findNodePath","className","clsx","getTableElementStyles","isSelectingCell","tbody","useSelectedCells","useSelected","useEditorRef","setSelectedCells","cellEntries","getTableGridAbove","format","length","cells","map","entry","JSON","stringify","selection","useTableColSizes","tableNode","disableUnsetSingleColSize","getPluginOptions","colCount","getTableColumnCount","colSizes","Array","unsetNodes","TablePopover","useElement","floatingButtonCss","floatingRootCss","TableElement","transformColSizes","popoverProps","getTableRowElementStyles","TableRowElement","TableToolbarButton","id","transform","header","usePlateEditorState","useEventPlateId","type","getPluginType","active","someNode","match","preventDefault","stopPropagation","focusEditor"],"mappings":"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"}