import { TElement } from '@udecode/plate-core';
export declare const tableStore: {
    atom: {
        hoveredColIndex: import("jotai").Atom<number | null>;
        resizingCol: import("jotai").Atom<{
            index: number;
            width: number;
        } | null>;
        selectedCells: import("jotai").Atom<TElement[] | null>;
    };
    scope?: import("@udecode/plate-core").Scope | undefined;
    extend: <ET, EN>(extendedState: ET, options?: Omit<import("@udecode/plate-core").CreateAtomStoreOptions<{}, EN extends string ? EN : "table">, "initialStore"> | undefined) => import("@udecode/plate-core").AtomStoreApi<{
        hoveredColIndex: number | null;
        resizingCol: {
            index: number;
            width: number;
        } | null;
        selectedCells: TElement[] | null;
    } & ET, EN extends string ? EN : "table">;
}, useTableStore: (scope?: import("@udecode/plate-core").Scope | undefined) => {
    get: import("@udecode/plate-core").GetRecord<{
        hoveredColIndex: number | null;
        resizingCol: {
            index: number;
            width: number;
        } | null;
        selectedCells: TElement[] | null;
    }>;
    set: import("@udecode/plate-core").SetRecord<{
        hoveredColIndex: number | null;
        resizingCol: {
            index: number;
            width: number;
        } | null;
        selectedCells: TElement[] | null;
    }>;
    use: import("@udecode/plate-core").UseRecord<{
        hoveredColIndex: number | null;
        resizingCol: {
            index: number;
            width: number;
        } | null;
        selectedCells: TElement[] | null;
    }>;
};
//# sourceMappingURL=table.atoms.d.ts.map