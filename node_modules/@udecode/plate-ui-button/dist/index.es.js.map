{"version":3,"file":"index.es.js","sources":["../src/Button/PlateButton.tsx","../src/Icon/StyledIcon.tsx","../src/Icon/DeleteIcon.tsx","../src/Button/RemoveNodeButton.tsx","../src/Icon/ChevronDownIcon.tsx"],"sourcesContent":["import React from 'react';\nimport { Button } from '@udecode/plate-button';\nimport { HTMLPropsAs } from '@udecode/plate-core';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\n\nexport interface PlateButtonProps extends HTMLPropsAs<'button'> {\n  size?: number | string;\n  px?: number | string;\n  py?: number | string;\n}\n\nexport const plateButtonCss = [\n  tw`relative inline-flex justify-center items-center text-center max-w-full p-0`,\n  tw`border-0 font-medium cursor-pointer`,\n  tw`bg-white hover:bg-gray-100 active:bg-gray-200`,\n  tw`px-2.5 py-1`,\n  css`\n    font-family: inherit;\n    font-size: 14px;\n    border-radius: 3px;\n\n    color: inherit;\n\n    :active {\n      color: inherit;\n    }\n\n    :visited {\n      color: inherit;\n    }\n  `,\n];\n\nexport const primaryButtonCss = [\n  plateButtonCss,\n  tw`bg-blue-500 text-white hover:bg-blue-600 active:bg-blue-700 active:text-white`,\n];\n\nexport const PlateButton = ({\n  size,\n  px,\n  py,\n  css: _css,\n  ...props\n}: PlateButtonProps) => <Button css={plateButtonCss} {...props} />;\n","import React, { forwardRef, PropsWithRef, SVGProps } from 'react';\nimport styled from 'styled-components';\n\nexport interface StyledIconProps extends PropsWithRef<SVGProps<SVGSVGElement>> {\n  size?: number | string;\n  title?: string | null;\n  iconVerticalAlign?: string;\n}\n\nconst Icon = forwardRef((props: StyledIconProps, ref: any) => {\n  const { children, iconVerticalAlign, size, title, ...otherProps } = props;\n\n  const iconProps: SVGProps<SVGSVGElement> = {\n    height: props.height !== undefined ? props.height : size,\n    width: props.width !== undefined ? props.width : size,\n    'aria-hidden': title == null ? 'true' : undefined,\n    focusable: 'false',\n    role: title != null ? 'img' : undefined,\n    ...otherProps,\n  };\n\n  return (\n    <svg {...iconProps} ref={ref}>\n      {title && <title key=\"icon-title\">{title}</title>}\n      {children}\n    </svg>\n  );\n});\n\nexport const StyledIcon = styled(Icon)`\n  display: inline-block;\n  vertical-align: ${(props) => props.iconVerticalAlign};\n  overflow: hidden;\n  height: 100%;\n`;\n","import React from 'react';\nimport { StyledIcon, StyledIconProps } from './StyledIcon';\n\nexport const DeleteIcon = (props: StyledIconProps) => (\n  <StyledIcon viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n  </StyledIcon>\n);\n","import React from 'react';\nimport {\n  findNodePath,\n  focusEditor,\n  removeNodes,\n  TElement,\n  useEditorRef,\n} from '@udecode/plate-core';\nimport { DeleteIcon } from '../Icon/DeleteIcon';\nimport { PlateButton, PlateButtonProps } from './PlateButton';\n\nexport const RemoveNodeButton = ({\n  element,\n  ...props\n}: PlateButtonProps & { element: TElement }) => {\n  const editor = useEditorRef();\n\n  return (\n    <PlateButton\n      tw=\"py-1 px-0\"\n      css={`\n        width: 24px;\n        height: 24px;\n      `}\n      onClick={() => {\n        const path = findNodePath(editor, element);\n\n        removeNodes(editor, { at: path });\n\n        focusEditor(editor, editor.selection!);\n      }}\n      {...props}\n    >\n      <DeleteIcon />\n    </PlateButton>\n  );\n};\n","import React from 'react';\nimport { StyledIcon, StyledIconProps } from './StyledIcon';\n\nexport const ChevronDownIcon = (props: StyledIconProps) => (\n  <StyledIcon\n    viewBox=\"0 0 24 24\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    tw=\"inline text-center select-none overflow-hidden pointer-events-none max-w-full max-h-full h-full align-middle\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n    />\n  </StyledIcon>\n);\n"],"names":["plateButtonCss","css","primaryButtonCss","PlateButton","size","px","py","_css","props","Icon","forwardRef","ref","children","iconVerticalAlign","title","otherProps","iconProps","height","undefined","width","focusable","role","StyledIcon","styled","DeleteIcon","RemoveNodeButton","element","editor","useEditorRef","path","findNodePath","removeNodes","at","focusEditor","selection","ChevronDownIcon"],"mappings":"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"}