{"version":3,"file":"index.es.js","sources":["../src/caption/captionGlobalStore.ts","../../../node_modules/is-hotkey/lib/index.js","../src/caption/getOnKeyDownCaption.ts","../src/caption/getWithSelectionCaption.ts","../src/resizable/resizableStore.ts","../src/caption/hooks/useCaptionString.ts","../src/caption/components/TextareaAutosize.tsx","../src/caption/components/CaptionTextarea.tsx","../src/caption/components/Caption.tsx","../src/image/transforms/insertImage.ts","../src/image/utils/isImageUrl.ts","../src/image/withImageEmbed.ts","../src/image/withImageUpload.ts","../src/image/withImage.ts","../src/image/createImagePlugin.ts","../src/image/components/Image.tsx","../src/twitter/parseTwitterUrl.ts","../src/twitter/components/MediaEmbedTweet.tsx","../src/twitter/components/Tweet.tsx","../src/video/parseVideoUrl.ts","../src/video/components/MediaEmbedVideo.tsx","../src/media-embed/parseIframeUrl.ts","../src/media-embed/createMediaEmbedPlugin.ts","../src/media/mediaStore.ts","../src/media-embed/components/MediaEmbed.tsx","../src/media-embed/transforms/insertMediaEmbed.ts","../src/resizable/Resizable.tsx","../src/media/parseMediaUrl.ts","../src/media/Media.tsx","../src/media/types.ts","../src/media/FloatingMedia/floatingMediaStore.ts","../src/media/FloatingMedia/FloatingMediaEditButton.tsx","../src/media/FloatingMedia/submitFloatingMedia.ts","../src/media/FloatingMedia/FloatingMediaUrlInput.tsx","../src/media/FloatingMedia/FloatingMedia.tsx"],"sourcesContent":["import { createStore, TPath } from '@udecode/plate-core';\n\nexport const captionGlobalStore = createStore('caption')({\n  /**\n   * When defined, focus end of caption textarea with the same path.\n   */\n  focusEndCaptionPath: null as TPath | null,\n\n  /**\n   * When defined, focus start of caption textarea with the same path.\n   */\n  focusStartCaptionPath: null as TPath | null,\n});\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\n// We make this a function so it can be tested in describe block mocks with Jest.\nvar IS_MAC = () => typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\n// We make this a function so it can be tested in describe block mocks with Jest.\nvar ALIASES = () => ({\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC() ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n});\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES()[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;","import {\n  getBlockAbove,\n  getPluginType,\n  KeyboardHandler,\n} from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\nimport { captionGlobalStore } from './captionGlobalStore';\n\nexport const getOnKeyDownCaption = (pluginKey: string): KeyboardHandler => (\n  editor\n) => (e) => {\n  // focus caption from image\n  if (isHotkey('down', e)) {\n    const entry = getBlockAbove(editor, {\n      match: { type: getPluginType(editor, pluginKey) },\n    });\n    if (!entry) return;\n\n    captionGlobalStore.set.focusEndCaptionPath(entry[1]);\n  }\n};\n","import {\n  getAboveNode,\n  getNodeString,\n  getPluginType,\n  isCollapsed,\n  PlateEditor,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\nimport { Range } from 'slate';\nimport { ImagePlugin } from '../image/index';\nimport { TMediaElement } from '../media/index';\nimport { captionGlobalStore } from './captionGlobalStore';\n\n/**\n * TODO: tests\n * https://github.com/udecode/editor-protocol/issues/79\n */\n\n/**\n * Selection table:\n * - If anchor is in table, focus in a block before: set focus to start of table\n * - If anchor is in table, focus in a block after: set focus to end of table\n * - If focus is in table, anchor in a block before: set focus to end of table\n * - If focus is in table, anchor in a block after: set focus to the point before start of table\n */\nexport const getWithSelectionCaption = (pluginKey: string) => <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  plugin: WithPlatePlugin<ImagePlugin, V, E>\n) => {\n  const { apply } = editor;\n\n  editor.apply = (operation) => {\n    if (operation.type === 'set_selection') {\n      const newSelection = {\n        ...editor.selection,\n        ...operation.newProperties,\n      } as Range | null;\n\n      if (\n        editor.currentKeyboardEvent &&\n        isHotkey('up', editor.currentKeyboardEvent)\n      ) {\n        if (newSelection && isCollapsed(newSelection)) {\n          const entry = getAboveNode<TMediaElement>(editor, {\n            at: newSelection,\n            match: { type: getPluginType(editor, pluginKey) },\n          });\n\n          if (entry) {\n            const [node] = entry;\n\n            if (\n              node.caption &&\n              getNodeString({ children: node.caption } as any).length\n            ) {\n              setTimeout(() => {\n                captionGlobalStore.set.focusEndCaptionPath(entry[1]);\n              }, 0);\n            }\n          }\n        }\n      }\n    }\n\n    apply(operation);\n  };\n\n  return editor;\n};\n","import { CSSProperties } from 'react';\nimport { createAtomStore, SCOPE_ELEMENT } from '@udecode/plate-core';\n\nexport const { resizableStore, useResizableStore } = createAtomStore(\n  {\n    width: 0 as CSSProperties['width'],\n  },\n  { name: 'resizable', scope: SCOPE_ELEMENT }\n);\n","import { useMemo } from 'react';\nimport { getNodeString, useElement } from '@udecode/plate-core';\nimport { TCaptionElement } from '../types/TCaptionElement';\n\nexport const useCaptionString = () => {\n  const {\n    caption: nodeCaption = [{ children: [{ text: '' }] }],\n  } = useElement<TCaptionElement>();\n\n  return useMemo(() => {\n    return getNodeString(nodeCaption[0] as any) || '';\n  }, [nodeCaption]);\n};\n","import React, { forwardRef, useLayoutEffect, useState } from 'react';\nimport ReactTextareaAutosize, {\n  TextareaAutosizeProps,\n} from 'react-textarea-autosize';\n\n/**\n * `<textarea />` component for React which grows with content.\n * @see https://github.com/Andarist/react-textarea-autosize\n * @see https://github.com/Andarist/react-textarea-autosize/issues/337\n */\nexport const TextareaAutosize = forwardRef<\n  HTMLTextAreaElement,\n  TextareaAutosizeProps\n>((props, ref) => {\n  const [isRerendered, setIsRerendered] = useState(false);\n\n  useLayoutEffect(() => setIsRerendered(true), []);\n\n  return isRerendered ? <ReactTextareaAutosize {...props} ref={ref} /> : null;\n});\n","import React, {\n  RefAttributes,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { TextareaAutosizeProps } from 'react-textarea-autosize';\nimport {\n  AsProps,\n  createComponentAs,\n  findNodePath,\n  focusEditor,\n  getNodeString,\n  getPointAfter,\n  setNodes,\n  TElement,\n  useComposedRef,\n  useEditorRef,\n  useElement,\n} from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\nimport { Path } from 'slate';\nimport { useReadOnly } from 'slate-react';\nimport { captionGlobalStore } from '../captionGlobalStore';\nimport { TCaptionElement } from '../types/TCaptionElement';\nimport { TextareaAutosize } from './TextareaAutosize';\n\nexport interface CaptionTextareaProps\n  extends TextareaAutosizeProps,\n    RefAttributes<HTMLTextAreaElement>,\n    AsProps<'textarea'> {}\n\n/**\n * Focus textareaRef when focusCaptionPath is set to the image path.\n */\nexport const useCaptionTextareaFocus = (\n  textareaRef: RefObject<HTMLTextAreaElement>\n) => {\n  const editor = useEditorRef();\n  const element = useElement<TCaptionElement>();\n\n  const focusCaptionPath = captionGlobalStore.use.focusEndCaptionPath();\n\n  useEffect(() => {\n    if (focusCaptionPath && textareaRef.current) {\n      const path = findNodePath(editor, element);\n      if (path && Path.equals(path, focusCaptionPath)) {\n        textareaRef.current.focus();\n        captionGlobalStore.set.focusEndCaptionPath(null);\n      }\n    }\n  }, [editor, element, focusCaptionPath, textareaRef]);\n};\n\nexport const useCaptionTextarea = (\n  props: CaptionTextareaProps\n): TextareaAutosizeProps & RefAttributes<HTMLTextAreaElement> => {\n  const element = useElement<TCaptionElement>();\n\n  const {\n    caption: nodeCaption = [{ children: [{ text: '' }] }] as [TElement],\n  } = element;\n\n  const [captionValue, setCaptionValue] = useState<\n    TextareaAutosizeProps['value']\n  >(getNodeString(nodeCaption[0]));\n\n  const editor = useEditorRef();\n  const readOnly = useReadOnly();\n\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const ref = useComposedRef(textareaRef, props.ref);\n\n  useCaptionTextareaFocus(textareaRef);\n\n  const onChange: TextareaAutosizeProps['onChange'] = useCallback(\n    (e) => {\n      const newValue = e.target.value;\n\n      // local state\n      setCaptionValue(newValue);\n\n      const path = findNodePath(editor, element);\n      if (!path) return;\n\n      // saved state\n      setNodes<TCaptionElement>(\n        editor,\n        { caption: [{ text: newValue }] },\n        { at: path }\n      );\n    },\n    [editor, element]\n  );\n\n  const onKeyDown: TextareaAutosizeProps['onKeyDown'] = (e) => {\n    // select image\n    if (isHotkey('up', e)) {\n      const path = findNodePath(editor, element);\n      if (!path) return;\n\n      e.preventDefault();\n\n      focusEditor(editor, path);\n    }\n\n    // select next block\n    if (isHotkey('down', e)) {\n      const path = findNodePath(editor, element);\n      if (!path) return;\n\n      const nextNodePath = getPointAfter(editor, path);\n      if (!nextNodePath) return;\n\n      e.preventDefault();\n\n      focusEditor(editor, nextNodePath);\n    }\n  };\n\n  return {\n    value: captionValue,\n    readOnly,\n    onChange,\n    onKeyDown,\n    ...props,\n    ref,\n  };\n};\n\nexport const CaptionTextarea = createComponentAs<CaptionTextareaProps>(\n  ({ as, ...props }) => {\n    const htmlProps = useCaptionTextarea({ as: as as any, ...props });\n\n    return <TextareaAutosize {...htmlProps} />;\n  }\n);\n","import {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n} from '@udecode/plate-core';\nimport { useReadOnly, useSelected } from 'slate-react';\nimport { useResizableStore } from '../../resizable/resizableStore';\nimport { useCaptionString } from '../hooks/useCaptionString';\nimport { CaptionTextarea } from './CaptionTextarea';\n\nexport interface CaptionProps extends HTMLPropsAs<'figcaption'> {\n  readOnly?: boolean;\n}\n\nexport const useCaption = ({\n  readOnly,\n  ...props\n}: CaptionProps = {}): HTMLPropsAs<'figcaption'> => {\n  const width = useResizableStore().get.width();\n\n  return {\n    style: { width },\n    ...props,\n  };\n};\n\nexport const useCaptionState = (props: CaptionProps) => {\n  const captionString = useCaptionString();\n\n  const selected = useSelected();\n  const _readOnly = useReadOnly();\n  const readOnly = props.readOnly || _readOnly;\n\n  return {\n    captionString,\n    selected,\n    readOnly,\n  };\n};\n\nexport const CaptionRoot = createComponentAs<CaptionProps>((props) => {\n  const htmlProps = useCaption(props);\n  const { captionString, selected, readOnly } = useCaptionState(props);\n\n  if (!captionString.length && (readOnly || !selected)) {\n    return null;\n  }\n\n  return createElementAs('figcaption', htmlProps);\n});\n\nexport const Caption = {\n  Root: CaptionRoot,\n  Textarea: CaptionTextarea,\n};\n","import {\n  getPluginType,\n  insertNodes,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-core';\nimport { ELEMENT_IMAGE } from '../createImagePlugin';\nimport { TImageElement } from '../types';\n\nexport const insertImage = <V extends Value>(\n  editor: PlateEditor<V>,\n  url: string | ArrayBuffer\n) => {\n  const text = { text: '' };\n  const image: TImageElement = {\n    type: getPluginType(editor, ELEMENT_IMAGE),\n    url: url as any,\n    children: [text],\n  };\n  insertNodes<TImageElement>(editor, image);\n};\n","import { isUrl } from '@udecode/plate-core';\n\nconst imageExtensions = [\n  'ase',\n  'art',\n  'bmp',\n  'blp',\n  'cd5',\n  'cit',\n  'cpt',\n  'cr2',\n  'cut',\n  'dds',\n  'dib',\n  'djvu',\n  'egt',\n  'exif',\n  'gif',\n  'gpl',\n  'grf',\n  'icns',\n  'ico',\n  'iff',\n  'jng',\n  'jpeg',\n  'jpg',\n  'jfif',\n  'jp2',\n  'jps',\n  'lbm',\n  'max',\n  'miff',\n  'mng',\n  'msp',\n  'nitf',\n  'ota',\n  'pbm',\n  'pc1',\n  'pc2',\n  'pc3',\n  'pcf',\n  'pcx',\n  'pdn',\n  'pgm',\n  'PI1',\n  'PI2',\n  'PI3',\n  'pict',\n  'pct',\n  'pnm',\n  'pns',\n  'ppm',\n  'psb',\n  'psd',\n  'pdd',\n  'psp',\n  'px',\n  'pxm',\n  'pxr',\n  'qfx',\n  'raw',\n  'rle',\n  'sct',\n  'sgi',\n  'rgb',\n  'int',\n  'bw',\n  'tga',\n  'tiff',\n  'tif',\n  'vtf',\n  'xbm',\n  'xcf',\n  'xpm',\n  '3dv',\n  'amf',\n  'ai',\n  'awg',\n  'cgm',\n  'cdr',\n  'cmx',\n  'dxf',\n  'e2d',\n  'egt',\n  'eps',\n  'fs',\n  'gbr',\n  'odg',\n  'svg',\n  'stl',\n  'vrml',\n  'x3d',\n  'sxd',\n  'v2d',\n  'vnd',\n  'wmf',\n  'emf',\n  'art',\n  'xar',\n  'png',\n  'webp',\n  'jxr',\n  'hdp',\n  'wdp',\n  'cur',\n  'ecw',\n  'iff',\n  'lbm',\n  'liff',\n  'nrrd',\n  'pam',\n  'pcx',\n  'pgf',\n  'sgi',\n  'rgb',\n  'rgba',\n  'bw',\n  'int',\n  'inta',\n  'sid',\n  'ras',\n  'sun',\n  'tga',\n];\n\nexport const isImageUrl = (url: string) => {\n  if (!isUrl(url)) return false;\n\n  const ext = new URL(url).pathname.split('.').pop() as string;\n\n  return imageExtensions.includes(ext);\n};\n","import { PlateEditor, Value, WithPlatePlugin } from '@udecode/plate-core';\nimport { insertImage } from './transforms/insertImage';\nimport { isImageUrl } from './utils/isImageUrl';\nimport { ImagePlugin } from './types';\n\n/**\n * If inserted text is image url, insert image instead.\n */\nexport const withImageEmbed = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  plugin: WithPlatePlugin<ImagePlugin, V, E>\n) => {\n  const { insertData } = editor;\n\n  editor.insertData = (dataTransfer: DataTransfer) => {\n    const text = dataTransfer.getData('text/plain');\n\n    if (isImageUrl(text)) {\n      insertImage(editor, text);\n      return;\n    }\n\n    insertData(dataTransfer);\n  };\n\n  return editor;\n};\n","import {\n  getInjectedPlugins,\n  pipeInsertDataQuery,\n  PlateEditor,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-core';\nimport { insertImage } from './transforms/insertImage';\nimport { ImagePlugin } from './types';\n\n/**\n * Allows for pasting images from clipboard.\n * Not yet: dragging and dropping images, selecting them through a file system dialog.\n */\nexport const withImageUpload = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E,\n  plugin: WithPlatePlugin<ImagePlugin, V, E>\n) => {\n  const {\n    options: { uploadImage },\n  } = plugin;\n  const { insertData } = editor;\n\n  editor.insertData = (dataTransfer: DataTransfer) => {\n    const text = dataTransfer.getData('text/plain');\n    const { files } = dataTransfer;\n\n    if (files && files.length > 0) {\n      const injectedPlugins = getInjectedPlugins<{}, V, E>(editor, plugin);\n      if (\n        !pipeInsertDataQuery<{}, V, E>(injectedPlugins, {\n          data: text,\n          dataTransfer,\n        })\n      ) {\n        return insertData(dataTransfer);\n      }\n\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split('/');\n\n        if (mime === 'image') {\n          reader.addEventListener('load', async () => {\n            if (!reader.result) {\n              return;\n            }\n            const uploadedUrl = uploadImage\n              ? await uploadImage(reader.result)\n              : reader.result;\n\n            insertImage(editor, uploadedUrl);\n          });\n\n          reader.readAsDataURL(file);\n        }\n      }\n    } else {\n      insertData(dataTransfer);\n    }\n  };\n\n  return editor;\n};\n","import { PlateEditor, Value, WithPlatePlugin } from '@udecode/plate-core';\nimport { getWithSelectionCaption } from '../caption/getWithSelectionCaption';\nimport { ELEMENT_IMAGE } from './createImagePlugin';\nimport { ImagePlugin } from './types';\nimport { withImageEmbed } from './withImageEmbed';\nimport { withImageUpload } from './withImageUpload';\n\n/**\n * @see withImageUpload\n * @see withImageEmbed\n */\nexport const withImage = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E,\n  plugin: WithPlatePlugin<ImagePlugin, V, E>\n) => {\n  const {\n    options: { disableUploadInsert, disableEmbedInsert, disableCaption },\n  } = plugin;\n\n  if (!disableUploadInsert) {\n    editor = withImageUpload(editor, plugin);\n  }\n\n  if (!disableEmbedInsert) {\n    editor = withImageEmbed(editor, plugin);\n  }\n\n  if (!disableCaption) {\n    editor = getWithSelectionCaption(ELEMENT_IMAGE)(editor, plugin);\n  }\n\n  return editor;\n};\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { getOnKeyDownCaption } from '../caption/getOnKeyDownCaption';\nimport { ImagePlugin } from './types';\nimport { withImage } from './withImage';\n\nexport const ELEMENT_IMAGE = 'img';\n\n/**\n * Enables support for images.\n */\nexport const createImagePlugin = createPluginFactory<ImagePlugin>({\n  key: ELEMENT_IMAGE,\n  isElement: true,\n  isVoid: true,\n  withOverrides: withImage,\n  handlers: {\n    onKeyDown: getOnKeyDownCaption(ELEMENT_IMAGE),\n  },\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      rules: [\n        {\n          validNodeName: 'IMG',\n        },\n      ],\n      getNode: (el) => ({\n        type,\n        url: el.getAttribute('src'),\n      }),\n    },\n  }),\n});\n","import {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n  useElement,\n} from '@udecode/plate-core';\nimport { useCaptionString } from '../../caption/index';\nimport { TMediaElement } from '../../media/index';\n\nexport const useImage = (props?: HTMLPropsAs<'img'>): HTMLPropsAs<'img'> => {\n  const { url } = useElement<TMediaElement>();\n\n  const captionString = useCaptionString();\n\n  return {\n    src: url,\n    alt: captionString,\n    draggable: true,\n    ...props,\n  };\n};\n\nexport const Image = createComponentAs((props) => {\n  const htmlProps = useImage(props);\n\n  return createElementAs('img', htmlProps);\n});\n","import { EmbedUrlData } from '../media/parseMediaUrl';\n\nconst twitterRegex = /^https?:\\/\\/twitter\\.com\\/(?:#!\\/)?(\\w+)\\/status(es)?\\/(?<id>\\d+)/;\n\nexport const parseTwitterUrl = (url: string): EmbedUrlData | undefined => {\n  if (url.match(twitterRegex)) {\n    return {\n      provider: 'twitter',\n      id: twitterRegex.exec(url)?.groups?.id,\n      url,\n    };\n  }\n};\n","import React from 'react';\nimport { EmbedUrlData } from '../../media/index';\nimport { Tweet, TweetProps } from '../index';\n\nexport const useMediaEmbedTweet = ({\n  id,\n  ...props\n}: EmbedUrlData): TweetProps => {\n  return {\n    tweetId: id!,\n    ...props,\n  };\n};\n\nexport const MediaEmbedTweet = (props: EmbedUrlData) => {\n  const htmlProps = useMediaEmbedTweet(props);\n\n  return <Tweet {...htmlProps} />;\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nconst WIDGET_SCRIPT_URL = 'https://platform.twitter.com/widgets.js';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\nexport type TweetProps = Readonly<{\n  loadingComponent?: JSX.Element | string;\n  onError?: (error: string) => void;\n  onLoad?: () => void;\n  tweetId: string;\n}>;\n\nexport const Tweet = ({\n  tweetId,\n  onError,\n  onLoad,\n  loadingComponent,\n}: TweetProps) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const containerRef = useRef(null);\n  const previousTweetIDRef = useRef('');\n\n  const createTweet = useCallback(async () => {\n    try {\n      await window.twttr.widgets.createTweet(tweetId, containerRef.current);\n\n      setIsLoading(false);\n\n      if (onLoad) {\n        onLoad();\n      }\n    } catch (error) {\n      if (onError) {\n        onError(String(error));\n      }\n    }\n  }, [onError, onLoad, tweetId]);\n\n  useEffect(() => {\n    if (tweetId !== previousTweetIDRef.current) {\n      let isComponentMounted = true;\n      const script = require('scriptjs');\n      script(WIDGET_SCRIPT_URL, 'twitter-embed', () => {\n        if (!window.twttr) {\n          return console.error('Failure to load window.twttr.');\n        }\n\n        if (isComponentMounted) createTweet();\n      });\n\n      if (previousTweetIDRef) {\n        previousTweetIDRef.current = tweetId;\n      }\n\n      return () => {\n        isComponentMounted = false;\n      };\n    }\n  }, [createTweet, onError, onLoad, tweetId]);\n\n  return (\n    <>\n      {isLoading ? loadingComponent : null}\n      <div key={tweetId} ref={containerRef} />\n    </>\n  );\n};\n","import videoParser from 'js-video-url-parser';\nimport { EmbedUrlData } from '../media/parseMediaUrl';\n\nconst YOUTUBE_PREFIX = 'https://www.youtube.com/embed/';\nconst VIMEO_PREFIX = 'https://player.vimeo.com/video/';\nconst DAILYMOTION_PREFIX = 'https://www.dailymotion.com/embed/video/';\nconst YOUKU_PREFIX = 'https://player.youku.com/embed/';\nconst COUB_PREFIX = 'https://coub.com/embed/';\n\nexport const parseVideoUrl = (url: string): EmbedUrlData | undefined => {\n  const videoData = videoParser.parse(url);\n  if (videoData?.provider && videoData.id) {\n    const { id, provider } = videoData;\n\n    const providerUrls: Record<string, string> = {\n      youtube: `${YOUTUBE_PREFIX}${id}`,\n      vimeo: `${VIMEO_PREFIX}${id}`,\n      dailymotion: `${DAILYMOTION_PREFIX}${id}`,\n      youku: `${YOUKU_PREFIX}${id}`,\n      coub: `${COUB_PREFIX}${id}`,\n    };\n\n    return {\n      id,\n      provider,\n      url: providerUrls[provider],\n    };\n  }\n};\n","import { createElementAs, HTMLPropsAs } from '@udecode/plate-core';\nimport { EmbedUrlData, useMediaStore } from '../../media/index';\n\nexport const useMediaEmbedVideo = ({\n  ...props\n}: EmbedUrlData): HTMLPropsAs<'iframe'> => {\n  const { url } = useMediaStore().get.urlData();\n\n  return {\n    title: 'embed',\n    frameBorder: '0',\n    allowFullScreen: true,\n    src: url,\n    ...props,\n  };\n};\n\nexport const MediaEmbedVideo = (props: EmbedUrlData) => {\n  const htmlProps = useMediaEmbedVideo(props);\n\n  return createElementAs('iframe', htmlProps);\n};\n","export const parseIframeUrl = (url: string) => {\n  // if not starting with http, assume pasting of full iframe embed code\n  if (url.substring(0, 4) !== 'http') {\n    const regexMatchSrc = /src=\".*?\"/;\n    const regexGroupQuotes = /\"([^\"]*)\"/;\n\n    const src = url.match(regexMatchSrc)?.[0];\n    const returnString = src?.match(regexGroupQuotes)?.[1];\n\n    if (returnString) {\n      url = returnString;\n    }\n  }\n  return url;\n};\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { getOnKeyDownCaption } from '../caption/getOnKeyDownCaption';\nimport { getWithSelectionCaption } from '../caption/getWithSelectionCaption';\nimport { MediaPlugin } from '../media/index';\nimport { MediaEmbedTweet, parseTwitterUrl } from '../twitter/index';\nimport { MediaEmbedVideo, parseVideoUrl } from '../video/index';\nimport { parseIframeUrl } from './parseIframeUrl';\n\nexport const ELEMENT_MEDIA_EMBED = 'media_embed';\n\n/**\n * Enables support for embeddable media such as YouTube\n * or Vimeo videos, Instagram posts and tweets or Google Maps.\n */\nexport const createMediaEmbedPlugin = createPluginFactory<MediaPlugin>({\n  key: ELEMENT_MEDIA_EMBED,\n  isElement: true,\n  isVoid: true,\n  handlers: {\n    onKeyDown: getOnKeyDownCaption(ELEMENT_MEDIA_EMBED),\n  },\n  withOverrides: (editor, plugin) => {\n    const {\n      options: { disableCaption },\n    } = plugin;\n\n    if (!disableCaption) {\n      editor = getWithSelectionCaption(ELEMENT_MEDIA_EMBED)(editor, plugin);\n    }\n\n    return editor;\n  },\n  options: {\n    transformUrl: parseIframeUrl,\n    rules: [\n      {\n        parser: parseTwitterUrl,\n        component: MediaEmbedTweet,\n      },\n      {\n        parser: parseVideoUrl,\n        component: MediaEmbedVideo,\n      },\n    ],\n  },\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      rules: [\n        {\n          validNodeName: 'IFRAME',\n        },\n      ],\n      getNode: (el: HTMLElement) => {\n        const url = el.getAttribute('src');\n        if (url) {\n          return {\n            type,\n            url,\n          };\n        }\n      },\n    },\n  }),\n});\n","import { createAtomStore, SCOPE_ELEMENT } from '@udecode/plate-core';\nimport { EmbedUrlData } from './parseMediaUrl';\n\nexport const { mediaStore, useMediaStore } = createAtomStore(\n  {\n    urlData: {} as EmbedUrlData,\n  },\n  { name: 'media' as const, scope: SCOPE_ELEMENT }\n);\n","import React from 'react';\nimport { HTMLPropsAs } from '@udecode/plate-core';\nimport { useMediaStore } from '../../media/mediaStore';\n\nexport const MediaEmbed = (props: HTMLPropsAs<'iframe'>) => {\n  const { component: Component, ...embedData } = useMediaStore().get.urlData();\n\n  if (!Component) return null;\n\n  return <Component {...embedData} {...props} />;\n};\n","import {\n  getParentNode,\n  insertNodes,\n  PlateEditor,\n  PlatePluginKey,\n  Value,\n} from '@udecode/plate-core';\nimport { ELEMENT_MEDIA_EMBED } from '../createMediaEmbedPlugin';\nimport { TMediaEmbedElement } from '../types';\n\nexport const insertMediaEmbed = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    url = '',\n    key = ELEMENT_MEDIA_EMBED,\n  }: Partial<TMediaEmbedElement> & PlatePluginKey\n): void => {\n  if (!editor.selection) return;\n  const selectionParentEntry = getParentNode(editor, editor.selection);\n  if (!selectionParentEntry) return;\n  const [, path] = selectionParentEntry;\n  insertNodes<TMediaEmbedElement>(\n    editor,\n    {\n      type: key,\n      url,\n      children: [{ text: '' }],\n    },\n    { at: path }\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport {\n  AsProps,\n  createComponentAs,\n  findNodePath,\n  isDefined,\n  select,\n  setNodes,\n  useEditorRef,\n  useElement,\n} from '@udecode/plate-core';\nimport {\n  Resizable as ReResizable,\n  ResizableProps as ReResizableProps,\n} from 're-resizable';\nimport { useReadOnly } from 'slate-react';\nimport { TMediaElement } from '../media/types';\nimport { useResizableStore } from './resizableStore';\nimport { TResizableElement } from './TResizableElement';\n\nexport interface ResizableProps\n  extends Omit<ReResizableProps, 'as'>,\n    AsProps<'div'> {\n  /**\n   * Node alignment.\n   */\n  align?: 'left' | 'center' | 'right';\n\n  readOnly?: boolean;\n}\n\nexport const useResizable = ({\n  align = 'center',\n  readOnly,\n  ...props\n}: ResizableProps): ReResizableProps => {\n  const element = useElement<TMediaElement>();\n  const editor = useEditorRef();\n  const _readOnly = useReadOnly();\n  readOnly = isDefined(readOnly) ? readOnly : _readOnly;\n\n  const nodeWidth = element?.width ?? '100%';\n\n  const [width, setWidth] = useResizableStore().use.width();\n\n  const setNodeWidth = useCallback(\n    (w: number) => {\n      const path = findNodePath(editor, element!);\n      if (!path) return;\n\n      if (w === nodeWidth) {\n        // Focus the node if not resized\n        select(editor, path);\n      } else {\n        setNodes<TResizableElement>(editor, { width: w }, { at: path });\n      }\n    },\n    [editor, element, nodeWidth]\n  );\n\n  useEffect(() => {\n    setWidth(nodeWidth);\n  }, [nodeWidth, setWidth]);\n\n  const defaultProps: ReResizableProps = {\n    minWidth: 92,\n    size: { width: width!, height: '100%' },\n    maxWidth: '100%',\n    lockAspectRatio: true,\n    resizeRatio: align === 'center' ? 2 : 1,\n    enable: {\n      left: ['center', 'left'].includes(align),\n      right: ['center', 'right'].includes(align),\n    },\n    handleStyles: {\n      left: { left: 0 },\n      right: { right: 0 },\n    },\n    onResize: (e, direction, ref) => {\n      setWidth(ref.offsetWidth);\n    },\n    onResizeStop: (e, direction, ref) => setNodeWidth(ref.offsetWidth),\n  };\n\n  if (readOnly) {\n    return {\n      ...defaultProps,\n      ...props,\n      enable: {\n        left: false,\n        right: false,\n        top: false,\n        bottom: false,\n        topLeft: false,\n        bottomLeft: false,\n        topRight: false,\n        bottomRight: false,\n      },\n    };\n  }\n\n  return { ...defaultProps, ...props };\n};\n\nexport const Resizable = createComponentAs<ResizableProps>((props) => {\n  const resizableProps = useResizable(props);\n\n  return <ReResizable {...resizableProps} />;\n});\n","import {\n  getPluginOptions,\n  PlateEditor,\n  RenderFunction,\n  Value,\n} from '@udecode/plate-core';\nimport { MediaPlugin } from './types';\n\nexport type EmbedUrlData = {\n  url?: string;\n  provider?: string;\n  id?: string;\n  component?: RenderFunction<EmbedUrlData>;\n};\n\nexport const parseMediaUrl = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    pluginKey,\n    url,\n  }: {\n    pluginKey: string;\n    url?: string;\n  }\n): EmbedUrlData | undefined => {\n  if (!url) return;\n\n  const { rules } = getPluginOptions<MediaPlugin, V>(editor, pluginKey);\n  if (!rules) return;\n\n  for (const { parser, component } of rules) {\n    const parsed = parser(url);\n    if (parsed) {\n      return { ...parsed, component };\n    }\n  }\n};\n","import { useEffect } from 'react';\nimport {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n  PlateRenderElementProps,\n  useEditorRef,\n  useElement,\n  useElementProps,\n  Value,\n} from '@udecode/plate-core';\nimport { ELEMENT_MEDIA_EMBED } from '../media-embed/index';\nimport { Resizable } from '../resizable/Resizable';\nimport { useMediaStore } from './mediaStore';\nimport { parseMediaUrl } from './parseMediaUrl';\nimport { TMediaElement } from './types';\n\nexport type MediaRootProps = PlateRenderElementProps<Value, TMediaElement> &\n  HTMLPropsAs<'div'> & {\n    pluginKey?: string;\n  };\n\nexport const useMedia = ({\n  pluginKey = ELEMENT_MEDIA_EMBED,\n  ...props\n}: MediaRootProps): HTMLPropsAs<'iframe'> => {\n  const editor = useEditorRef();\n  const element = useElement<TMediaElement>();\n  const setUrlData = useMediaStore().set.urlData();\n  const { url: elementUrl } = element;\n\n  useEffect(() => {\n    const parsed = parseMediaUrl(editor, {\n      pluginKey,\n      url: elementUrl,\n    });\n\n    if (parsed) {\n      setUrlData(parsed);\n    }\n  }, [editor, elementUrl, pluginKey, setUrlData]);\n\n  return useElementProps(props as any);\n};\n\nexport const MediaRoot = createComponentAs<\n  PlateRenderElementProps<Value, TMediaElement> & HTMLPropsAs<'div'>\n>((props) => {\n  const htmlProps = useMedia(props);\n\n  return createElementAs('div', htmlProps);\n});\n\nexport const Media = {\n  Root: MediaRoot,\n  Resizable,\n};\n","import { RenderFunction } from '@udecode/plate-core';\nimport { TCaptionElement } from '../caption/index';\nimport { TResizableElement } from '../resizable/index';\nimport { EmbedUrlData } from './parseMediaUrl';\n\nexport interface TMediaElement extends TCaptionElement, TResizableElement {\n  url: string;\n}\n\nexport type MediaUrlParser = (url: string) => EmbedUrlData | undefined;\n\nexport type MediaPluginRule = {\n  parser: MediaUrlParser;\n  component?: RenderFunction<EmbedUrlData>;\n};\n\nexport interface MediaPlugin {\n  isUrl?: (text: string) => boolean;\n\n  /**\n   * Transforms the url.\n   */\n  transformUrl?: (url: string) => string;\n\n  /**\n   * List of rules. The first rule that matches the url will be used,\n   * i.e. its component will be used to render the media. Used by `MediaEmbed`.\n   */\n  rules?: MediaPluginRule[];\n\n  disableCaption?: boolean;\n}\n\nexport const ELEMENT_MEDIA = 'media';\n","import { createStore } from '@udecode/plate-core';\n\nexport const floatingMediaStore = createStore('floatingMedia')({\n  url: '',\n  isEditing: false,\n}).extendActions((set) => ({\n  reset: () => {\n    set.url('');\n    set.isEditing(false);\n  },\n}));\n\nexport const floatingMediaActions = floatingMediaStore.set;\nexport const floatingMediaSelectors = floatingMediaStore.get;\nexport const useFloatingMediaSelectors = () => floatingMediaStore.use;\n","import { useCallback } from 'react';\nimport {\n  AsProps,\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n  useElement,\n} from '@udecode/plate-core';\nimport { TMediaElement } from '../types';\nimport { floatingMediaActions } from './floatingMediaStore';\n\nexport const useFloatingMediaEditButton = (\n  props: HTMLPropsAs<'button'>\n): HTMLPropsAs<'button'> => {\n  const element = useElement<TMediaElement>();\n\n  return {\n    onClick: useCallback(() => {\n      floatingMediaActions.url(element.url);\n      floatingMediaActions.isEditing(true);\n    }, [element.url]),\n    ...props,\n  };\n};\n\nexport const FloatingMediaEditButton = createComponentAs<AsProps<'button'>>(\n  (props) => {\n    const htmlProps = useFloatingMediaEditButton(props);\n\n    return createElementAs('button', htmlProps);\n  }\n);\n","import {\n  focusEditor,\n  getPluginOptions,\n  isUrl,\n  PlateEditor,\n  setNodes,\n  Value,\n} from '@udecode/plate-core';\nimport { ELEMENT_MEDIA, MediaPlugin, TMediaElement } from '../types';\nimport {\n  floatingMediaActions,\n  floatingMediaSelectors,\n} from './floatingMediaStore';\n\nexport const submitFloatingMedia = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    element,\n    pluginKey = ELEMENT_MEDIA,\n  }: {\n    element: TMediaElement;\n    pluginKey?: string;\n  }\n) => {\n  let url = floatingMediaSelectors.url();\n\n  if (url === element.url) {\n    floatingMediaActions.reset();\n    return true;\n  }\n\n  const { isUrl: _isUrl = isUrl, transformUrl } = getPluginOptions<\n    MediaPlugin,\n    V\n  >(editor, pluginKey);\n  const isValid = _isUrl(url);\n  if (!isValid) return;\n\n  if (transformUrl) {\n    url = transformUrl(url);\n  }\n\n  setNodes<TMediaElement>(editor, {\n    url,\n  });\n\n  floatingMediaActions.reset();\n\n  focusEditor(editor, editor.selection!);\n\n  return true;\n};\n","import { ChangeEventHandler, useCallback, useEffect } from 'react';\nimport {\n  createComponentAs,\n  createElementAs,\n  focusEditor,\n  HTMLPropsAs,\n  mergeProps,\n  useEditorRef,\n  useElement,\n  useHotkeys,\n} from '@udecode/plate-core';\nimport { TMediaElement } from '../types';\nimport {\n  floatingMediaActions,\n  floatingMediaSelectors,\n} from './floatingMediaStore';\nimport { submitFloatingMedia } from './submitFloatingMedia';\n\nexport type FloatingMediaUrlInputProps = HTMLPropsAs<'input'> & {\n  pluginKey?: string;\n};\n\nexport const useFloatingMediaUrlInput = ({\n  pluginKey,\n  ...props\n}: FloatingMediaUrlInputProps): HTMLPropsAs<'input'> => {\n  const editor = useEditorRef();\n  const element = useElement<TMediaElement>();\n\n  useEffect(() => {\n    return () => {\n      floatingMediaActions.isEditing(false);\n    };\n  }, []);\n\n  useHotkeys(\n    'enter',\n    (e) => {\n      if (submitFloatingMedia(editor, { element, pluginKey })) {\n        e.preventDefault();\n      }\n    },\n    {\n      enableOnFormTags: ['INPUT'],\n    },\n    []\n  );\n\n  useHotkeys(\n    'escape',\n    () => {\n      if (floatingMediaSelectors.isEditing()) {\n        floatingMediaActions.reset();\n        focusEditor(editor, editor.selection!);\n      }\n    },\n    {\n      enableOnFormTags: ['INPUT'],\n      enableOnContentEditable: true,\n    },\n    []\n  );\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((e) => {\n    floatingMediaActions.url(e.target.value);\n  }, []);\n\n  return mergeProps(\n    {\n      onChange,\n      autoFocus: true,\n      defaultValue: floatingMediaSelectors.url(),\n    },\n    props\n  );\n};\n\nexport const FloatingMediaUrlInput = createComponentAs<FloatingMediaUrlInputProps>(\n  (props) => {\n    const htmlProps = useFloatingMediaUrlInput(props);\n\n    return createElementAs('input', htmlProps);\n  }\n);\n","import { FloatingMediaEditButton } from './FloatingMediaEditButton';\nimport { FloatingMediaUrlInput } from './FloatingMediaUrlInput';\n\nexport const FloatingMedia = {\n  EditButton: FloatingMediaEditButton,\n  UrlInput: FloatingMediaUrlInput,\n};\n"],"names":["captionGlobalStore","createStore","focusEndCaptionPath","focusStartCaptionPath","getOnKeyDownCaption","pluginKey","editor","e","isHotkey","entry","getBlockAbove","match","type","getPluginType","set","getWithSelectionCaption","plugin","apply","operation","newSelection","selection","newProperties","currentKeyboardEvent","isCollapsed","getAboveNode","at","node","caption","getNodeString","children","length","setTimeout","resizableStore","useResizableStore","createAtomStore","width","name","scope","SCOPE_ELEMENT","useCaptionString","nodeCaption","text","useElement","useMemo","TextareaAutosize","forwardRef","props","ref","isRerendered","setIsRerendered","useState","useLayoutEffect","useCaptionTextareaFocus","textareaRef","useEditorRef","element","focusCaptionPath","use","useEffect","current","path","findNodePath","Path","equals","focus","useCaptionTextarea","captionValue","setCaptionValue","readOnly","useReadOnly","useRef","useComposedRef","onChange","useCallback","newValue","target","value","setNodes","onKeyDown","preventDefault","focusEditor","nextNodePath","getPointAfter","CaptionTextarea","createComponentAs","as","htmlProps","useCaption","get","style","useCaptionState","captionString","selected","useSelected","_readOnly","CaptionRoot","createElementAs","Caption","Root","Textarea","insertImage","url","image","ELEMENT_IMAGE","insertNodes","imageExtensions","isImageUrl","isUrl","ext","URL","pathname","split","pop","includes","withImageEmbed","insertData","dataTransfer","getData","withImageUpload","options","uploadImage","files","injectedPlugins","getInjectedPlugins","pipeInsertDataQuery","data","file","reader","FileReader","mime","addEventListener","result","uploadedUrl","readAsDataURL","withImage","disableUploadInsert","disableEmbedInsert","disableCaption","createImagePlugin","createPluginFactory","key","isElement","isVoid","withOverrides","handlers","then","deserializeHtml","rules","validNodeName","getNode","el","getAttribute","useImage","src","alt","draggable","Image","twitterRegex","parseTwitterUrl","provider","id","exec","groups","useMediaEmbedTweet","tweetId","MediaEmbedTweet","WIDGET_SCRIPT_URL","Tweet","onError","onLoad","loadingComponent","isLoading","setIsLoading","containerRef","previousTweetIDRef","createTweet","window","twttr","widgets","error","String","isComponentMounted","script","require","console","YOUTUBE_PREFIX","VIMEO_PREFIX","DAILYMOTION_PREFIX","YOUKU_PREFIX","COUB_PREFIX","parseVideoUrl","videoData","videoParser","parse","providerUrls","youtube","vimeo","dailymotion","youku","coub","useMediaEmbedVideo","useMediaStore","urlData","title","frameBorder","allowFullScreen","MediaEmbedVideo","parseIframeUrl","substring","regexMatchSrc","regexGroupQuotes","returnString","ELEMENT_MEDIA_EMBED","createMediaEmbedPlugin","transformUrl","parser","component","mediaStore","MediaEmbed","Component","embedData","insertMediaEmbed","selectionParentEntry","getParentNode","useResizable","align","isDefined","nodeWidth","setWidth","setNodeWidth","w","select","defaultProps","minWidth","size","height","maxWidth","lockAspectRatio","resizeRatio","enable","left","right","handleStyles","onResize","direction","offsetWidth","onResizeStop","top","bottom","topLeft","bottomLeft","topRight","bottomRight","Resizable","resizableProps","ReResizable","parseMediaUrl","getPluginOptions","parsed","useMedia","setUrlData","elementUrl","useElementProps","MediaRoot","Media","ELEMENT_MEDIA","floatingMediaStore","isEditing","extendActions","reset","floatingMediaActions","floatingMediaSelectors","useFloatingMediaSelectors","useFloatingMediaEditButton","onClick","FloatingMediaEditButton","submitFloatingMedia","_isUrl","isValid","useFloatingMediaUrlInput","useHotkeys","enableOnFormTags","enableOnContentEditable","mergeProps","autoFocus","defaultValue","FloatingMediaUrlInput","FloatingMedia","EditButton","UrlInput"],"mappings":"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"}