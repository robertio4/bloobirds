export declare enum JSONSchemaType {
    Null = "null",
    Boolean = "boolean",
    Integer = "integer",
    Number = "number",
    String = "string",
    Object = "object",
    Array = "array"
}
export declare type JSONSchemaTypeStr = 'null' | 'boolean' | 'integer' | 'number' | 'string' | 'object' | 'array';
export declare type JSONSchema = {
    type?: JSONSchemaTypeStr | JSONSchemaTypeStr[];
    items?: JSONSchema;
    maxItems?: number;
    properties?: Record<string, JSONSchema>;
    required?: string[];
    anyOf?: Array<JSONSchema>;
    examples?: any[];
    title?: string;
    enum?: any[];
    format?: string;
    $ref?: string;
};
export declare type SchemaComparisonOptions = {
    ignoreRequired: boolean;
};
export declare function schemaDiff(first: JSONSchema, second: JSONSchema): JSONSchema;
export declare function isScalar(schema: any): boolean;
export declare function schemaTypeFromValue(value: any): "object" | "string" | "number" | "null" | "boolean" | "array";
export declare function getDefaultsFromSchema(schema: any): any;
export declare function valueToSchema(value: any, schema: any, field?: string): any;
