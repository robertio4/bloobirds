"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataLinkTableInstanceAccessor = exports.DataLinkTableInstancesAccessor = exports.DataLinkTableAccessor = exports.DataLinkTablesAccessor = void 0;
const tslib_1 = require("tslib");
const query_string_1 = tslib_1.__importDefault(require("query-string"));
const accessors_1 = require("../accessors");
class DataLinkTablesAccessor extends accessors_1.ElementListAccessor {
    constructor(client) {
        super(client, 'data-link-tables');
    }
}
exports.DataLinkTablesAccessor = DataLinkTablesAccessor;
class DataLinkTableAccessor extends accessors_1.ElementAccessor {
    constructor(client, idOrKey) {
        super({
            client,
            path: 'data-link-tables',
            idOrKey,
        });
    }
}
exports.DataLinkTableAccessor = DataLinkTableAccessor;
class DataLinkTableInstancesAccessor extends accessors_1.ElementInstanceListAccessor {
    constructor(client) {
        super(client, 'data-link-table-instances');
    }
}
exports.DataLinkTableInstancesAccessor = DataLinkTableInstancesAccessor;
class DataLinkTableInstanceAccessor extends accessors_1.ElementInstanceAccessor {
    constructor(client, selector) {
        super({
            client,
            instancePath: 'data-link-table-instance',
            selector,
        });
        this.client = client;
    }
    async findLinks(query) {
        const id = await this.getId();
        return this.client.get('/data-links?' +
            query_string_1.default.stringify({
                ...query,
                dataLinkTableInstanceId: id,
            }));
    }
    async addLink(selector) {
        const id = await this.getId();
        return this.client.post('/data-links?' +
            query_string_1.default.stringify({
                ...selector,
                dataLinkTableInstanceId: id,
            }));
    }
    async removeLink(selector) {
        const id = await this.getId();
        return this.client.delete('/data-links?' +
            query_string_1.default.stringify({
                ...selector,
                dataLinkTableInstanceId: id,
            }));
    }
}
exports.DataLinkTableInstanceAccessor = DataLinkTableInstanceAccessor;
//# sourceMappingURL=accessors.js.map