import { IntegrationAppClient } from '..';
import { DataLink, DataLinkTable, DataLinkTableInstance } from '.';
import { CreateDataLinkTableRequest, DataLinkInTableSelector, DataLinkTableInstanceSelector, FindDataLinksInTableQuery, FindDataLinksResponse, FindDataLinkTableInstancesQuery, FindDataLinkTablesQuery, IDataLinkTableInstanceUpdate, UpdateDataLinkTableRequest } from './api';
import { ElementAccessor, ElementInstanceAccessor, ElementInstanceListAccessor, ElementListAccessor } from '../accessors';
export declare class DataLinkTablesAccessor extends ElementListAccessor<DataLinkTable, FindDataLinkTablesQuery, CreateDataLinkTableRequest> {
    constructor(client: IntegrationAppClient);
}
export declare class DataLinkTableAccessor extends ElementAccessor<DataLinkTable, CreateDataLinkTableRequest, UpdateDataLinkTableRequest> {
    constructor(client: IntegrationAppClient, idOrKey: string);
}
export declare class DataLinkTableInstancesAccessor extends ElementInstanceListAccessor<DataLinkTableInstance, FindDataLinkTableInstancesQuery> {
    constructor(client: IntegrationAppClient);
}
export declare class DataLinkTableInstanceAccessor extends ElementInstanceAccessor<DataLinkTableInstance, DataLinkTableInstanceSelector, IDataLinkTableInstanceUpdate, IDataLinkTableInstanceUpdate> {
    private client;
    constructor(client: IntegrationAppClient, selector: string | DataLinkTableInstanceSelector);
    findLinks(query: FindDataLinksInTableQuery): Promise<FindDataLinksResponse>;
    addLink(selector: DataLinkInTableSelector): Promise<DataLink>;
    removeLink(selector: DataLinkInTableSelector): Promise<DataLink>;
}
