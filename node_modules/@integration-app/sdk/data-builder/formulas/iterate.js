"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataBuilderFormulaIterate = void 0;
const _1 = require(".");
const base_1 = require("./base");
const locators_1 = require("../locators");
const __1 = require("..");
class DataBuilderFormulaIterate extends base_1.DataBuilderFormulaBase {
    constructor(args) {
        super(_1.DataBuilderFormulaType.ITERATE, args);
        this.args = args;
    }
    getValue(context) {
        var _a, _b;
        if (!((_a = this.args) === null || _a === void 0 ? void 0 : _a.locator) || !((_b = this.args) === null || _b === void 0 ? void 0 : _b.items)) {
            return undefined;
        }
        const list = (0, base_1.getValueByLocator)(context, (0, locators_1.locatorToSteps)(this.args.locator));
        if (!Array.isArray(list)) {
            return undefined;
        }
        const result = [];
        for (const item of list) {
            context.setCurrentArrayItem(this.args.locator, item);
            const value = (0, _1.processValue)(this.args.items, context);
            result.push(value);
        }
        context.unsetCurrentArrayItem(this.args.locator);
        return result;
    }
    getSchema(variablesSchema) {
        var _a;
        return {
            type: 'array',
            items: (0, __1.buildDataSchema)((_a = this.args) === null || _a === void 0 ? void 0 : _a.items, variablesSchema),
        };
    }
}
exports.DataBuilderFormulaIterate = DataBuilderFormulaIterate;
//# sourceMappingURL=iterate.js.map