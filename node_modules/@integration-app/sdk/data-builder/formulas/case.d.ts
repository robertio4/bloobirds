import { DataFilter } from '../../data-filter';
import { DataBuilderContext } from '../context';
import { DataBuilderFormulaBase } from './base';
export interface CaseFormulaValueItem {
    filter?: DataFilter;
    value?: any;
}
export declare type CaseFormulaValue = {
    cases: CaseFormulaValueItem[];
    default?: any;
};
export declare class DataBuilderFormulaCase extends DataBuilderFormulaBase {
    value: CaseFormulaValue;
    constructor(value: CaseFormulaValueItem[] | CaseFormulaValue);
    getValue(context: DataBuilderContext): any;
    getSchema(variablesSchema: any): any;
    isValueValid(): boolean;
}
