import { AppDataSchema, AppDataSchemaInstance } from '.';
import { IntegrationAppClient } from '..';
import { ElementAccessor, ElementInstanceAccessor, ElementInstanceListAccessor, ElementListAccessor } from '../accessors';
import { AppDataSchemaInstanceSelector, CreateAppDataSchemaRequest, FindAppDataSchemaInstancesQuery, FindAppDataSchemasQuery, IAppDataSchemaInstanceUpdate, UpdateAppDataSchemaRequest } from './api';
export declare class AppDataSchemasAccessor extends ElementListAccessor<AppDataSchema, FindAppDataSchemasQuery, CreateAppDataSchemaRequest> {
    constructor(client: IntegrationAppClient);
}
export declare class AppDataSchemaAccessor extends ElementAccessor<AppDataSchema, CreateAppDataSchemaRequest, UpdateAppDataSchemaRequest> {
    constructor(client: IntegrationAppClient, idOrKey: string);
}
export declare class AppDataSchemaInstancesAccessor extends ElementInstanceListAccessor<AppDataSchemaInstance, FindAppDataSchemaInstancesQuery> {
    constructor(client: IntegrationAppClient);
}
export declare class AppDataSchemaInstanceAccessor extends ElementInstanceAccessor<AppDataSchemaInstance, AppDataSchemaInstanceSelector, IAppDataSchemaInstanceUpdate, IAppDataSchemaInstanceUpdate> {
    constructor(client: IntegrationAppClient, selector: string | AppDataSchemaInstanceSelector);
}
