import { IntegrationElement, IntegrationElementInstance } from '../integration-elements';
import { User } from '../users';
import { Connection } from '../connections';
import { Integration } from '../integrations';
import { ErrorData } from '../errors';
import { DataSourceInstance } from '../data-sources';
export declare enum FieldMappingDirection {
    IMPORT = "import",
    EXPORT = "export",
    BOTH = "both"
}
export interface FieldMapping {
    id: string;
    name: string;
    key: string;
    udm: string;
    appElement: IntegrationElement;
    direction: FieldMappingDirection;
    defaultImportValue?: any;
    defaultExportValue?: any;
    archivedAt?: Date;
}
export interface AdHocFieldMapping {
    direction: FieldMappingDirection;
    udm: string;
    appElement?: IntegrationElement;
    defaultExportValue?: any;
    defaultImportValue?: any;
}
export interface IFieldMappingInstance {
    id: string;
    userId: string;
    user?: User;
    connectionId: string;
    connection?: Connection;
    integrationId: string;
    integration?: Integration;
    fieldMappingId?: string;
    fieldMapping?: FieldMapping;
    instanceKey?: string;
    adHocFieldMapping?: AdHocFieldMapping;
    dataSourceId?: string;
    dataSource?: DataSourceInstance;
    externalSchema?: any;
    appElementInstance?: IntegrationElementInstance;
    appSchema?: any;
    importValue?: any;
    exportValue?: any;
    isCustomized?: boolean;
    error?: ErrorData;
}
