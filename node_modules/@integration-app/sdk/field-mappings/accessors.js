"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FieldMappingInstanceAccessor = exports.FieldMappingInstancesAccessor = exports.FieldMappingAccessor = exports.FieldMappingsAccessor = void 0;
const iframe_1 = require("../iframe");
const accessors_1 = require("../accessors");
class FieldMappingsAccessor extends accessors_1.ElementListAccessor {
    constructor(client) {
        super(client, 'field-mappings');
    }
}
exports.FieldMappingsAccessor = FieldMappingsAccessor;
class FieldMappingAccessor extends accessors_1.ElementAccessor {
    constructor(client, idOrKey) {
        super({
            client,
            path: 'field-mappings',
            idOrKey,
        });
    }
}
exports.FieldMappingAccessor = FieldMappingAccessor;
class FieldMappingInstancesAccessor extends accessors_1.ElementInstanceListAccessor {
    constructor(client) {
        super(client, 'field-mapping-instances');
    }
}
exports.FieldMappingInstancesAccessor = FieldMappingInstancesAccessor;
class FieldMappingInstanceAccessor extends accessors_1.ElementInstanceAccessor {
    constructor(client, selector) {
        super({
            client,
            instancePath: 'field-mapping-instance',
            selector,
        });
        this.client = client;
    }
    async setup() {
        const id = await this.getId();
        return this.client.post(`/field-mapping-instances/${id}/setup`);
    }
    async reset() {
        const id = await this.getId();
        return this.client.post(`/field-mapping-instances/${id}/reset`);
    }
    async openConfiguration(options) {
        (0, iframe_1.showIframeLoader)();
        const id = await this.getId();
        const uri = this.client.getEmbedUri(`/field-mapping-instances/${id}/configuration`);
        return (0, iframe_1.openIframe)(uri, {
            onClose: options === null || options === void 0 ? void 0 : options.onClose,
        });
    }
}
exports.FieldMappingInstanceAccessor = FieldMappingInstanceAccessor;
//# sourceMappingURL=accessors.js.map