import { PaginationQuery, PaginationResponse } from '../entity-repository';
import { AdHocFieldMapping, FieldMapping, IFieldMappingInstance } from '.';
import { ConnectionSelector } from '../connections/api';
import { ElementInstanceSelector } from '../accessors';
export interface FindFieldMappingsQuery extends PaginationQuery {
}
export declare type FindFieldMappingsResponse = PaginationResponse<FieldMapping>;
export interface FindFieldMappingInstancesQuery extends PaginationQuery {
    userId?: string;
    fieldMappingId?: string;
    connectionId?: string;
    dataSourceId?: string;
}
export declare type FindFieldMappingInstancesResponse = PaginationResponse<IFieldMappingInstance>;
export declare type CreateFieldMappingRequest = Omit<FieldMapping, 'id'>;
export declare type UpdateFieldMappingRequest = Partial<CreateFieldMappingRequest>;
export interface CreateFieldMappingInstanceRequest {
    connectionId: string;
    fieldMappingId?: string;
    adHocFieldMapping?: AdHocFieldMapping;
    instanceKey?: string;
    importValue?: any;
    exportValue?: any;
}
export interface UpdateFieldMappingInstanceRequest {
    importValue?: any;
    exportValue?: any;
}
export interface FieldMappingInstanceSelector extends ConnectionSelector, ElementInstanceSelector {
    fieldMappingKey?: string;
    fieldMappingId?: string;
    instanceKey?: string;
}
