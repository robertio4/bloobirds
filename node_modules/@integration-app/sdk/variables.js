"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUpstreamNodeKeys = exports.getNodeInputSchema = void 0;
function getNodeInputSchema(flow, nodeKey) {
    const schema = {
        type: 'object',
        properties: {},
    };
    getUpstreamNodeKeys(flow, nodeKey).forEach((prevNodeKey) => {
        const prevNode = flow.nodes[prevNodeKey];
        if (prevNode.outputSchema) {
            const prevNodeSchema = JSON.parse(JSON.stringify(prevNode.outputSchema));
            if (!prevNodeSchema.title) {
                prevNodeSchema.title = prevNode.name;
            }
            schema.properties[prevNodeKey] = prevNodeSchema;
        }
    });
    return schema;
}
exports.getNodeInputSchema = getNodeInputSchema;
function getUpstreamNodeKeys(flow, nodeKey) {
    var _a;
    const upLinkedNodeKeys = Object.entries((_a = flow.nodes) !== null && _a !== void 0 ? _a : {})
        .filter(([_key, node]) => { var _a; return (_a = node.links) === null || _a === void 0 ? void 0 : _a.some((l) => l.key == nodeKey); })
        .map(([key]) => key);
    return upLinkedNodeKeys.concat(upLinkedNodeKeys.map((k) => getUpstreamNodeKeys(flow, k)).flat());
}
exports.getUpstreamNodeKeys = getUpstreamNodeKeys;
//# sourceMappingURL=variables.js.map