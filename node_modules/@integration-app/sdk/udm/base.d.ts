import { DataCollectionCreateSpec, DataCollectionDeleteSpec, DataCollectionFindSpec, DataCollectionUpdateSpec } from '../connector-api';
export interface UnifiedDataModel {
    singularName: string;
    pluralName: string;
    fieldsSchema: any;
    normalizeFields?: (fields: Record<string, any>) => Record<string, any>;
    populateFields?: (fields: Record<string, any>) => Record<string, any>;
    find?: DataCollectionFindSpec;
    create?: DataCollectionCreateSpec;
    update?: DataCollectionUpdateSpec;
    delete?: DataCollectionDeleteSpec;
}
export declare const AddressSchema: import("@sinclair/typebox").TObject<import("@sinclair/typebox").StaticPartial<{
    type: import("@sinclair/typebox").TString;
    full: import("@sinclair/typebox").TString;
    street: import("@sinclair/typebox").TString;
    city: import("@sinclair/typebox").TString;
    state: import("@sinclair/typebox").TString;
    country: import("@sinclair/typebox").TString;
    zip: import("@sinclair/typebox").TString;
}>>;
export declare const PhoneEmailSchema: import("@sinclair/typebox").TObject<import("@sinclair/typebox").StaticPartial<{
    value: import("@sinclair/typebox").TString;
    type: import("@sinclair/typebox").TString;
}>>;
export declare function normalizePhone(value: string): string;
export declare function populateContactInfo(fields: Record<string, any>): Record<string, any>;
