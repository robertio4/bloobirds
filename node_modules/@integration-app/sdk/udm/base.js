"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.populateContactInfo = exports.normalizePhone = exports.PhoneEmailSchema = exports.AddressSchema = void 0;
const tslib_1 = require("tslib");
const typebox_1 = require("@sinclair/typebox");
const phone_1 = tslib_1.__importDefault(require("phone"));
exports.AddressSchema = typebox_1.Type.Partial(typebox_1.Type.Object({
    type: typebox_1.Type.String(),
    full: typebox_1.Type.String(),
    street: typebox_1.Type.String(),
    city: typebox_1.Type.String(),
    state: typebox_1.Type.String(),
    country: typebox_1.Type.String(),
    zip: typebox_1.Type.String(),
}));
exports.PhoneEmailSchema = typebox_1.Type.Partial(typebox_1.Type.Object({
    value: typebox_1.Type.String(),
    type: typebox_1.Type.String(),
}));
function normalizePhone(value) {
    if (typeof value !== 'string') {
        return value;
    }
    const validationResult = (0, phone_1.default)(value);
    if (validationResult.isValid) {
        return validationResult.phoneNumber;
    }
    else {
        const hasPlus = value.trim().startsWith('+');
        let result = value.replace(/[^\d]/g, '');
        if (hasPlus) {
            result = `+${result}`;
        }
        return result;
    }
}
exports.normalizePhone = normalizePhone;
function populateContactInfo(fields) {
    const result = JSON.parse(JSON.stringify(fields));
    if (!result.fullName && result.firstName && result.lastName) {
        result.fullName = {
            $concat: {
                values: [result.firstName, result.lastName],
                delimiter: ' ',
            },
        };
    }
    if (!result.primaryEmail && result.emails && result.emails.length > 0) {
        result.primaryEmail = result.emails[0].value;
    }
    if (!result.primaryPhone && result.phones && result.phones.length > 0) {
        result.primaryPhone = result.phones[0].value;
    }
    if (!result.primaryAddress &&
        result.addresses &&
        result.addresses.length > 0) {
        result.primaryAddress = result.addresses[0];
    }
    return result;
}
exports.populateContactInfo = populateContactInfo;
//# sourceMappingURL=base.js.map