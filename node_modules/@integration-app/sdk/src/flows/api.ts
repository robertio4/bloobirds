import { PaginationQuery, PaginationResponse } from '../entity-repository'
import { Flow, FlowInstance, FlowNodeLink } from '.'
import { ConnectionSelector } from '../connections/api'
import { ElementInstanceSelector } from '../accessors'

export interface FindFlowsRequest extends PaginationQuery {}

export interface FindFlowsResponse extends PaginationResponse<Flow> {}

export interface CreateFlowNodeRequest {
  type: string

  config?: any

  ui?: any

  links?: FlowNodeLink[]
}

export interface CreateFlowRequest {
  key: string
  name: string
  nodes: Record<string, CreateFlowNodeRequest>
}

export interface UpdateFlowRequest extends CreateFlowRequest {}

export interface FindFlowInstancesQuery {
  id?: string
  userId?: string
  flowId?: string
  flowKey?: string
  integrationKey?: string
  integrationId?: string
  connectionId?: string
  instanceKey?: string
  enabled?: boolean
  dependencyInstanceId?: string
}

export interface FlowInstanceSelector
  extends ConnectionSelector,
    ElementInstanceSelector {
  flowId?: string

  flowKey?: string

  instanceKey?: string

  autoUpdate?: boolean
}

export class FindFlowInstancesResponse extends PaginationResponse<FlowInstance> {}

export interface CreateFlowInstanceRequest {
  flowKey?: string

  name?: string

  parameters?: any

  enabled?: boolean
}

export interface UpdateFlowInstanceRequest {
  name?: string

  enabled?: boolean
}

export interface RunFlowOptions {
  nodeKey?: string
  input?: any
  onUpdate?: (...args: any) => void
}
