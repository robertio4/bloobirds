import { AppEventType, AppEventSubscription } from '.'
import { IntegrationAppClient } from '..'
import {
  ElementAccessor,
  ElementInstanceAccessor,
  ElementInstanceListAccessor,
  ElementListAccessor,
} from '../accessors'
import {
  AppEventSubscriptionSelector,
  CreateAppEventTypeRequest,
  FindAppEventSubscriptionsQuery,
  FindAppEventTypesQuery,
  IAppEventSubscriptionUpdate,
  UpdateAppEventTypeRequest,
} from './api'

export class AppEventTypesAccessor extends ElementListAccessor<
  AppEventType,
  FindAppEventTypesQuery,
  CreateAppEventTypeRequest
> {
  constructor(client: IntegrationAppClient) {
    super(client, 'app-event-types')
  }
}

export class AppEventTypeAccessor extends ElementAccessor<
  AppEventType,
  CreateAppEventTypeRequest,
  UpdateAppEventTypeRequest
> {
  constructor(client: IntegrationAppClient, idOrKey: string) {
    super({
      client,
      path: 'app-event-types',
      idOrKey,
    })
  }
}

export class AppEventSubscriptionsAccessor extends ElementInstanceListAccessor<
  AppEventSubscription,
  FindAppEventSubscriptionsQuery
> {
  constructor(client: IntegrationAppClient) {
    super(client, 'app-event-subscriptions')
  }
}

export class AppEventSubscriptionAccessor extends ElementInstanceAccessor<
  AppEventSubscription,
  AppEventSubscriptionSelector,
  IAppEventSubscriptionUpdate,
  IAppEventSubscriptionUpdate
> {
  constructor(
    client: IntegrationAppClient,
    selector: string | AppEventSubscriptionSelector,
  ) {
    super({
      client,
      instancePath: 'app-event-subscription',
      selector,
    })
  }
}
