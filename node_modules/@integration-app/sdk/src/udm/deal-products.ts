import { Static, Type } from '@sinclair/typebox'
import { UnifiedDataModel } from './base'

const FIELDS_SCHEMA = Type.Partial(
  Type.Object({
    name: Type.String(),
    quantity: Type.Number(),
    price: Type.Number(),
    dealId: Type.String({
      referenceUdm: 'deals',
    }),
    productId: Type.String({
      referenceUdm: 'products',
    }),
    isActive: Type.Boolean(),
    createdTime: Type.String({
      format: 'date-time',
    }),
    createdBy: Type.String({
      referenceUdm: 'users',
    }),
    updatedTime: Type.String({
      format: 'date-time',
    }),
    updatedBy: Type.String({
      referenceUdm: 'users',
    }),
  }),
)

export type UnifiedDealProductFields = Static<typeof FIELDS_SCHEMA>

const MODIFIABLE_FIELDS = ['name', 'quantity', 'price']
const CREATABLE_FIELDS = ['name', 'quantity', 'price', 'dealId', 'productId']

const udm: UnifiedDataModel = {
  singularName: 'deal-product',
  pluralName: 'deal-products',
  fieldsSchema: FIELDS_SCHEMA,
  find: {
    queryFields: ['dealId', 'productId', 'name'],
  },
  create: {
    fields: CREATABLE_FIELDS,
  },
  update: {
    fields: MODIFIABLE_FIELDS,
  },
}

export default udm
