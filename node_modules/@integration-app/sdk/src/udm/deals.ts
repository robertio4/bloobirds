import { Static, Type } from '@sinclair/typebox'
import { UnifiedDataModel } from './base'

const FIELDS_SCHEMA = Type.Partial(
  Type.Object({
    name: Type.String(),
    amount: Type.Number(),
    currency: Type.String(),
    companyId: Type.String({
      referenceUdm: 'companies',
    }),
    contactId: Type.String({
      referenceUdm: 'contacts',
    }),
    campaignId: Type.String({
      referenceUdm: 'campaigns',
    }),
    source: Type.String(),
    description: Type.String(),
    stage: Type.String(),
    status: Type.String({
      enum: ['open', 'won', 'lost'],
    }),
    type: Type.String(),
    ownerId: Type.String({
      referenceUdm: 'users',
    }),
    closeTime: Type.String({
      format: 'date-time',
    }),
    createdTime: Type.String({
      format: 'date-time',
    }),
    createdBy: Type.String({
      referenceUdm: 'users',
    }),
    updatedTime: Type.String({
      format: 'date-time',
    }),
    updatedBy: Type.String({
      referenceUdm: 'users',
    }),
    lastActivityTime: Type.String({
      format: 'date-time',
    }),
    probability: Type.Number(),
  }),
)

export type UnifiedDealFields = Static<typeof FIELDS_SCHEMA>

const MODIFIABLE_FIELDS = [
  'amount',
  'currency',
  'companyId',
  'contactId',
  'campaignId',
  'source',
  'description',
  'stage',
  'status',
  'type',
  'ownerId',
  'closeTime',
]

const udm: UnifiedDataModel = {
  singularName: 'deal',
  pluralName: 'deals',
  fieldsSchema: FIELDS_SCHEMA,
  find: {
    queryFields: ['name'],
  },
  create: {
    fields: MODIFIABLE_FIELDS,
  },
  update: {
    fields: MODIFIABLE_FIELDS,
  },
}

export default udm
