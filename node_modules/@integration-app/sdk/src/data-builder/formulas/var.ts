import { DataBuilderFormulaType } from '.'
import { DataBuilderContext } from '../context'
import {
  getFullNameForLocator,
  getSchemaByLocator,
  locatorToSteps,
} from '../locators'
import { DataBuilderFormulaBase, getValueByLocator } from './base'

export class DataBuilderFormulaVar extends DataBuilderFormulaBase {
  constructor(public locator: string) {
    super(DataBuilderFormulaType.VAR, locator)
  }

  getValue(context: DataBuilderContext) {
    return getValueByLocator(context, locatorToSteps(this.locator))
  }

  getSchema(variablesSchema) {
    return getSchemaByLocator(variablesSchema, this.locator)
  }

  toString(variablesSchema: any) {
    return getFullNameForLocator(variablesSchema, this.locator) ?? this.locator
  }
}
