import { DataBuilderFormulaType, getFormula } from '.'
import { DataBuilderFormulaTpl } from './tpl'

describe('data-builder/formulas/tpl', () => {
  it('should extract $tpl formula', () => {
    const formula = getFormula({
      $tpl: {
        template: 'foo',
        values: {},
      },
    })
    expect(formula).toBeTruthy()
    expect(formula.type).toEqual(DataBuilderFormulaType.TPL)
    expect(formula instanceof DataBuilderFormulaTpl).toBeTruthy()
    expect((formula as DataBuilderFormulaTpl).args).toEqual({
      template: 'foo',
      values: {},
    })
  })

  it('should work with empty args', () => {
    const formula = new DataBuilderFormulaTpl(undefined)
    expect(formula.getValue(null)).toBeUndefined()
  })

  it('should work with empty template', () => {
    const formula = new DataBuilderFormulaTpl({
      template: '',
      values: {},
    })
    expect(formula.getValue(null)).toEqual('')
  })

  it('should work with empty values', () => {
    const formula = new DataBuilderFormulaTpl({
      template: '{key}',
      values: null,
    })
    expect(formula.getValue(null)).toEqual('{key}')
  })

  it('should replace every instance of value', () => {
    const formula = new DataBuilderFormulaTpl({
      template: '{key} {key}',
      values: {
        key: 'value',
      },
    })
    expect(formula.getValue(null)).toEqual('value value')
  })
})
