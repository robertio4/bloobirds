import { DataBuilderFormulaType, processValue } from '.'
import { DataBuilderFormulaBase } from './base'
import { DataLinkTableConfig } from '../../data-links'
import { DataBuilderContext } from '../context'

export interface FindExternalRecordIdArgs {
  dataLinkTable: DataLinkTableConfig
  recordId: string
}

export class DataBuilderFormulaFindExternalRecordId extends DataBuilderFormulaBase {
  constructor(public args: FindExternalRecordIdArgs) {
    super(DataBuilderFormulaType.FIND_EXTERNAL_RECORD_ID, args)
  }

  getValue(context: DataBuilderContext) {
    // Process formulas inside value, but return it within
    // $lookup for whoever is doing lookup to resolve.
    return {
      $findExternalRecordId: processValue(this.args, context),
    }
  }

  getSchema() {
    return {
      type: 'string',
    }
  }
}
