import { parseDatetime } from '../../datetime'
import { DataBuilderFormulaType, processValue } from '.'
import { DataBuilderFormulaBase } from './base'
import { DataBuilderContext } from '../context'

export class DataBuilderFormulaExtractDate extends DataBuilderFormulaBase {
  constructor(public value) {
    super(DataBuilderFormulaType.EXTRACT_DATE, value)
  }

  getValue(context: DataBuilderContext) {
    const value = processValue(this.value, context)
    const date = parseDatetime(value)
    if (date) {
      return date.toISOString().substring(0, 10)
    } else {
      return undefined
    }
  }

  getSchema() {
    return {
      type: 'string',
      format: 'date',
    }
  }
}
