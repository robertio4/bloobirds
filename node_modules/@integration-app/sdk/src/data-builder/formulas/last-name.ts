import { DataBuilderFormulaType, processValue } from '.'
import { DataBuilderFormulaBase } from './base'
import humanparser from 'humanparser'
import { DataBuilderContext } from '../context'
import { valueToString } from '..'

export class DataBuilderFormulaLastName extends DataBuilderFormulaBase {
  constructor(public value: any) {
    super(DataBuilderFormulaType.LAST_NAME, value)
  }

  getValue(context: DataBuilderContext) {
    const value = processValue(this.value, context)
    const { lastName } = humanparser.parseName(value?.toString() ?? '')
    return lastName
  }

  getSchema() {
    return { type: 'string' }
  }

  toString(variablesSchema) {
    return `ExtractLastName(${valueToString(this.value, variablesSchema)})`
  }
}
