import { BadRequestError } from '../errors'
import { DataLocator } from './locators'

class DataBuilderArrayIterator {
  value: any[]
  currentIdx: number
}

export class DataBuilderContext {
  private currentArrayItems: Record<string, DataBuilderArrayIterator>

  constructor(public variables: any) {
    this.currentArrayItems = {}
  }

  public setCurrentArrayItem(locator: string, value: any): void {
    this.currentArrayItems[this.getKeyByLocator(locator)] = value
  }

  public getCurrentArrayItem(locator: string): any {
    const key = this.getKeyByLocator(locator)
    if (typeof this.currentArrayItems[key] !== 'undefined') {
      return this.currentArrayItems[key]
    } else {
      throw new BadRequestError(
        `Attempting to access current array item with non-existing locator:\n${JSON.stringify(
          locator,
        )}`,
      )
    }
  }

  public unsetCurrentArrayItem(locator: string): void {
    delete this.currentArrayItems[this.getKeyByLocator(locator)]
  }

  private getKeyByLocator(locator: DataLocator) {
    return JSON.stringify(locator)
  }
}
