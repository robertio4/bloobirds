import { PaginationQuery, PaginationResponse } from '../entity-repository'
import { DataSourceEvent, DataSourceInstance } from '.'
import { ConnectionSelector } from '../connections/api'
import { ElementInstanceSelector } from '../accessors'

export interface DataSourceInstanceSelector
  extends ConnectionSelector,
    ElementInstanceSelector {
  udm?: string

  instanceKey?: string
}

export interface FindDataSourceInstancesQuery extends PaginationQuery {
  userId?: string

  dataSourceId?: string

  connectionId?: string
}

export type FindDataSourceInstancesResponse =
  PaginationResponse<DataSourceInstance>

export interface CreateDataSourceInstanceRequest {
  dataSourceId: string

  connectionId: string

  path?: string
}

export interface UpdateDataSourceInstanceRequest {
  path?: string
}

export interface FindDataSourceEventsQuery extends PaginationQuery {
  userId?: string
  udm?: string
  dataSourceInstanceId?: string
  startDatetime?: string
  endDatetime?: string
}

export interface FindDataSourceEventsResponse
  extends PaginationResponse<DataSourceEvent> {}
