// Vitest Snapshot v1

exports[`serve fs output > _00 manifest.json 1`] = `
Object {
  "background": Object {
    "service_worker": "service-worker-loader.js",
    "type": "module",
  },
  "content_scripts": Array [
    Object {
      "js": Array [
        "src/content.js-loader.js",
      ],
      "matches": Array [
        "https://a.com/*",
        "http://b.com/*",
      ],
    },
  ],
  "description": "test extension",
  "host_permissions": Array [
    "https://c.com/*",
  ],
  "manifest_version": 3,
  "name": "Test Extension",
  "version": "1.0.0",
  "web_accessible_resources": Array [
    Object {
      "matches": Array [
        "<all_urls>",
      ],
      "resources": Array [
        "*",
        "**/*",
      ],
      "use_dynamic_url": true,
    },
  ],
}
`;

exports[`serve fs output > _01 output files 1`] = `
Array [
  "manifest.json",
  "service-worker-loader.js",
  "src/content.js-loader.js",
  "src/content.js.js",
  "vendor/crx-client-port.js",
  "vendor/vite-client.js",
  "vendor/vite-dist-client-env.mjs.js",
  "vendor/webcomponents-custom-elements.js",
]
`;

exports[`serve fs output > _02 optimized deps 1`] = `
Set {
  "src/content.js",
}
`;

exports[`serve fs output > service-worker-loader.js 1`] = `
"import 'http://localhost:3000/@vite/env';
import 'http://localhost:3000/@crx/client-worker';
"
`;

exports[`serve fs output > src/content.js.js 1`] = `
"console.log('content script')
export function onExecute() {
  console.log('onExecute')
}
"
`;

exports[`serve fs output > src/content.js-loader.js 1`] = `
"(function () {
  'use strict';

  const injectTime = performance.now();
  (async () => {
    if (\\"\\")
      await import(
        /* @vite-ignore */
        chrome.runtime.getURL(\\"\\")
      );
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"vendor/vite-client.js\\")
    );
    const { onExecute } = await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"src/content.js.js\\")
    );
    onExecute?.({ perf: { injectTime, loadTime: performance.now() - injectTime } });
  })().catch(console.error);

})();
"
`;
