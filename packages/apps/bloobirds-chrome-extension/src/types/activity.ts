export const ACTIVITY_FIELDS_LOGIC_ROLE = Object.freeze({
  AIRCALL_NOTE: 'ACTIVITY__AIRCALL_NOTE',
  CADENCE: 'ACTIVITY__CADENCE',
  CALL_DURATION: 'ACTIVITY__CALL_DURATION',
  CALL_LEAD_PHONE_NUMBER: 'ACTIVITY__CALL_LEAD_PHONE_NUMBER',
  CALL_RECORD_URL: 'ACTIVITY__CALL_RECORD_URL',
  CALL_RESULT: 'ACTIVITY__CALL_RESULT',
  COMPANY: 'ACTIVITY__COMPANY',
  CREATION_DATETIME: 'ACTIVITY__CREATION_DATETIME',
  DATA_SOURCE: 'ACTIVITY__DATA_SOURCE',
  DIRECTION: 'ACTIVITY__DIRECTION',
  EMAIL_HISTORY_CLICK: 'ACTIVITY__EMAIL_HISTORY_CLICK',
  EMAIL_HISTORY_OPEN: 'ACTIVITY__EMAIL_HISTORY_OPEN',
  EMAIL_LEAD: 'ACTIVITY__EMAIL_LEAD',
  INBOUND_FORM_NAME: 'ACTIVITY__INBOUND_FORM_NAME',
  IS_ATTEMPT: 'ACTIVITY__IS_ATTEMPT',
  IS_AUTOMATED_EMAIL: 'ACTIVITY__IS_AUTOMATED_EMAIL',
  IS_BOUNCED_EMAIL: 'ACTIVITY__IS_BOUNCED_EMAIL',
  IS_PINNED: 'ACTIVITY__IS_PINNED',
  IS_TOUCH: 'ACTIVITY__IS_TOUCH',
  LEAD: 'ACTIVITY__LEAD',
  LINKEDIN_THREAD: 'ACTIVITY__LINKEDIN_THREAD',
  MEETING_ASSIGNED_TO: 'ACTIVITY__MEETING_ASSIGNED_TO',
  MEETING_MAIN_TYPE: 'ACTIVITY__MEETING_MAIN_TYPE',
  MEETING_RESULT: 'ACTIVITY__MEETING_RESULT',
  MESSAGE_BODY: 'ACTIVITY__MESSAGE_BODY',
  MESSAGE_SUBJECT: 'ACTIVITY__MESSAGE_SUBJECT',
  NOTE: 'ACTIVITY__NOTE',
  OPPORTUNITY: 'ACTIVITY__OPPORTUNITY',
  PITCH_DONE: 'ACTIVITY__PITCH_DONE',
  PITCH: 'ACTIVITY__PITCH',
  REPORTED: 'ACTIVITY__REPORTED',
  SALESFORCE_CAMPAIGN_ID: 'SALESFORCE_CAMPAIGN_ID',
  SALESFORCE_CAMPAIGN_MEMBER_ID: 'SALESFORCE_CAMPAIGN_MEMBER_ID',
  SID: 'ACTIVITY__CALL_SID',
  SOURCE: 'ACTIVITY__DATA_SOURCE',
  STATUS_TITLE: 'ACTIVITY__STATUS_TITLE',
  TABLE_VIEW_ITEM: 'ACTIVITY__TABLE_VIEW_ITEM',
  TIME: 'ACTIVITY__TIME',
  TYPE: 'ACTIVITY__TYPE',
  USER: 'ACTIVITY__USER',
  IS_AUTO_EMAIL: 'ACTIVITY__IS_AUTOMATED_EMAIL',
  MEETING_DURATION: 'ACTIVITY__MEETING_DURATION',
  TITLE: 'ACTIVITY__MEETING_TITLE',
  ACCOUNT_EXECUTIVE: 'ACTIVITY__ACCOUNT_EXECUTIVE',
  CREATE_EVENT: 'ACTIVITY__MEETING_CREATE_EVENT',
  CADENCE_TITLE: 'ACTIVITY__CADENCE_TITLE',
  CALENDAR_NOTE: 'ACTIVITY__CALENDAR_NOTE',
  ATTACHED_FILES: 'ACTIVITY__ATTACHED_FILES',
  ACTIVITY__ATTACHMENTS: 'ACTIVITY__ATTACHMENTS',
  UNIQUE_NYLAS_ID: 'ACTIVITY__EMAIL_UID',
  REMINDER_TEMPLATE: 'ACTIVITY__CALENDAR_REMINDER_TEMPLATE',
  EMAIL_THREAD_ID: 'ACTIVITY__EMAIL_THREAD_ID',
  CUSTOM_TASK: 'ACTIVITY__CUSTOM_TASK',
  TRANSCRIPTION: 'ACTIVITY__COPILOT_TRANSCRIPT',
  CASE_NUMBER: 'ACTIVITY__CASE_NUMBER',
  CASE_ID: 'ACTIVITY__CASE_ID',
});

export const ACTIVITY_TYPES_VALUES_LOGIC_ROLE = Object.freeze({
  // Be careful, cadence type is not the activity type, is the field Activity Type Cadence
  CADENCE: 'ACTIVITY__TYPE_CADENCE',
  CALL: 'ACTIVITY__TYPE__CALL',
  CHANGED_FROM: 'ACTIVITY__TYPE_STATUS_CHANGED_FROM',
  CHANGED_TO: 'ACTIVITY__TYPE_STATUS_CHANGED_TO',
  EMAIL: 'ACTIVITY__TYPE__EMAIL',
  INBOUND: 'ACTIVITY__TYPE__INBOUND',
  LINKEDIN: 'ACTIVITY__TYPE__LINKEDIN_MESSAGE',
  MEETING: 'ACTIVITY__TYPE__MEETING',
  NOTE: 'ACTIVITY__TYPE__NOTE',
  // Be careful, cadence type is not the activity type, is the field Status Activity type
  STATUS: 'ACTIVITY__TYPE_STATUS',
  CUSTOM_TASK: 'ACTIVITY__TYPE__CUSTOM_TASK',
});

export const PITCH_DONE_VALUES_LOGIC_ROLE = Object.freeze({
  NO: 'ACTIVITY__PITCH_DONE__NO',
  YES: 'ACTIVITY__PITCH_DONE__YES',
});

export const IS_PINNED_VALUES_LOGIC_ROLE = Object.freeze({
  NO: 'ACTIVITY__IS_PINNED__NO',
  YES: 'ACTIVITY__IS_PINNED__YES',
});

export const BOUNCED_EMAIL_VALUES_LOGIC_ROLE = Object.freeze({
  NO: 'ACTIVITY__IS_BOUNCED_EMAIL__NO',
  YES: 'ACTIVITY__IS_BOUNCED_EMAIL__YES',
});

export enum MEETING_MAIN_TYPE_VALUES {
  FIRST_MEETING = 'ACTIVITY__MEETING_MAIN_TYPE__FIRST_MEETING',
  FOLLOW_UP = 'ACTIVITY__MEETING_MAIN_TYPE__FOLLOW_UP',
}

export const ACTIVITY_MODE = Object.freeze({
  CREATE: 'CREATE',
  EDIT: 'EDIT',
});

export const CADENCE_TYPES_VALUES_LOGIC_ROLE = Object.freeze({
  CONFIGURE: 'ACTIVITY__TYPE_CADENCE__CONFIGURED',
  ENDED: 'ACTIVITY__TYPE_CADENCE__ENDED',
  RESCHEDULE: 'ACTIVITY__TYPE_CADENCE__RESCHEDULE',
  STOPPED: 'ACTIVITY__TYPE_CADENCE__STOPPED',
});

export const TYPES_STATUS_VALUES_LOGIC_ROLE = Object.freeze({
  COMPANY_STATUS_CHANGED: 'ACTIVITY__TYPE_STATUS__COMPANY_STATUS_CHANGED',
  LEAD_STATUS_CHANGED: 'ACTIVITY__TYPE_STATUS__LEAD_STATUS_CHANGED',
  NEW_LEAD_ADDED_TO_OPPORTUNITY: 'ACTIVITY__TYPE_STATUS__NEW_LEAD_ADDED_TO_OPPORTUNITY',
  NEW_LEAD_CREATED: 'ACTIVITY__TYPE_STATUS__NEW_LEAD_CREATED',
  OPPORTUNITY_ASSIGNED: 'ACTIVITY__TYPE_STATUS__OPPORTUNITY_ASSIGNED',
  OPPORTUNITY_CREATED: 'ACTIVITY__TYPE_STATUS__OPPORTUNITY_CREATED',
  OPPORTUNITY_STATUS_CHANGED: 'ACTIVITY__TYPE_STATUS__OPPORTUNITY_STATUS_CHANGED',
});

export const REPORTED_VALUES_LOGIC_ROLE = Object.freeze({
  YES: 'ACTIVITY__REPORTED__YES',
  NO: 'ACTIVITY__REPORTED__NO',
});

export const IS_AUTOMATED_EMAIL_VALUES = Object.freeze({
  YES: 'ACTIVITY__IS_AUTOMATED_EMAIL__YES',
  NO: 'ACTIVITY__IS_AUTOMATED_EMAIL__NO',
});

export const DIRECTION_VALUES_LOGIC_ROLE = Object.freeze({
  OUTGOING: 'ACTIVITY__DIRECTION__OUTGOING',
  INCOMING: 'ACTIVITY__DIRECTION__INCOMING',
});

export const ACTIVITY_TYPES = Object.freeze({
  CADENCE: 'Cadence',
  CALL: 'Call',
  EMAIL: 'Email',
  INBOUND: 'Inbound',
  LINKEDIN: 'LinkedIn Message',
  MEETING: 'Meeting',
  NOTE: 'Note',
  STATUS: 'Status',
});

export const ACTIVITY_DIRECTION = Object.freeze({
  INCOMING: 'Incoming',
  OUTGOING: 'Outgoing',
  MISSED: 'Missed',
});

export const DATA_SOURCES = Object.freeze({
  WEB_APP: 'DATA_SOURCE__WEB_APP',
  CHROME_EXTENSION: 'DATA_SOURCE__LINKEDIN_CHROME_EXTENSION',
});
