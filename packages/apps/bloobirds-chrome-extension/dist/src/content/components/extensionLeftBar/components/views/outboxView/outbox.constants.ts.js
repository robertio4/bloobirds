import {
  BOBJECT_TYPES,
  COMPANY_FIELDS_LOGIC_ROLE,
  COMPANY_HIGH_PRIORITY_LOGIC_ROLE,
  LEAD_FIELDS_LOGIC_ROLE,
  LEAD_HIGH_PRIORITY_LOGIC_ROLE,
  OPPORTUNITY_FIELDS_LOGIC_ROLE,
  TASK_ACTION,
  TASK_AUTOMATED_ERROR_LOGIC_ROLE,
  TASK_AUTOMATED_PAUSED_REASONS_LOGIC_ROLE,
  TASK_AUTOMATED_STATUS_LOGIC_ROLE,
  TASK_FIELDS_LOGIC_ROLE
} from "/vendor/fs-Users-robertorf-Workspace-frontend-monorepo-packages-types-src-index.ts.js";
export const COMPANY_COLUMNS = [
  COMPANY_FIELDS_LOGIC_ROLE.HIGH_PRIORITY,
  COMPANY_FIELDS_LOGIC_ROLE.NAME,
  COMPANY_FIELDS_LOGIC_ROLE.NUMBER_OF_LEADS,
  COMPANY_FIELDS_LOGIC_ROLE.TARGET_MARKET,
  COMPANY_FIELDS_LOGIC_ROLE.STATUS,
  COMPANY_FIELDS_LOGIC_ROLE.SOURCE,
  COMPANY_FIELDS_LOGIC_ROLE.ASSIGNED_TO,
  COMPANY_FIELDS_LOGIC_ROLE.MR_RATING,
  COMPANY_FIELDS_LOGIC_ROLE.ASSIGNED_DATE,
  COMPANY_FIELDS_LOGIC_ROLE.UPDATE_DATETIME
];
export const LEAD_COLUMNS = [
  LEAD_FIELDS_LOGIC_ROLE.HIGH_PRIORITY,
  LEAD_FIELDS_LOGIC_ROLE.FULL_NAME,
  LEAD_FIELDS_LOGIC_ROLE.NAME,
  LEAD_FIELDS_LOGIC_ROLE.STATUS,
  LEAD_FIELDS_LOGIC_ROLE.SOURCE,
  LEAD_FIELDS_LOGIC_ROLE.ASSIGNED_TO,
  LEAD_FIELDS_LOGIC_ROLE.MR_RATING,
  LEAD_FIELDS_LOGIC_ROLE.ASSIGNED_DATE,
  LEAD_FIELDS_LOGIC_ROLE.ICP,
  LEAD_FIELDS_LOGIC_ROLE.COMPANY,
  LEAD_FIELDS_LOGIC_ROLE.UPDATE_DATETIME
];
export const LEAD_REFERENCED_COLUMNS = [
  COMPANY_FIELDS_LOGIC_ROLE.NAME,
  COMPANY_FIELDS_LOGIC_ROLE.STATUS,
  COMPANY_FIELDS_LOGIC_ROLE.COMPANY_PARENT
];
export const TASK_COLUMNS = [
  TASK_FIELDS_LOGIC_ROLE.TITLE,
  TASK_FIELDS_LOGIC_ROLE.STATUS,
  TASK_FIELDS_LOGIC_ROLE.COMPANY,
  TASK_FIELDS_LOGIC_ROLE.LEAD,
  TASK_FIELDS_LOGIC_ROLE.OPPORTUNITY,
  TASK_FIELDS_LOGIC_ROLE.ASSIGNED_TO,
  TASK_FIELDS_LOGIC_ROLE.SCHEDULED_DATE,
  TASK_FIELDS_LOGIC_ROLE.SCHEDULED_DATETIME,
  TASK_FIELDS_LOGIC_ROLE.TASK_TYPE,
  TASK_FIELDS_LOGIC_ROLE.IS_AUTOMATED,
  TASK_FIELDS_LOGIC_ROLE.AUTOMATION_ERROR,
  TASK_FIELDS_LOGIC_ROLE.DESCRIPTION,
  TASK_FIELDS_LOGIC_ROLE.AUTOMATED_STATUS,
  TASK_FIELDS_LOGIC_ROLE.CADENCE,
  TASK_FIELDS_LOGIC_ROLE.EMAIL_METADATA,
  TASK_FIELDS_LOGIC_ROLE.AUTOMATION_PAUSE_REASON,
  TASK_ACTION.CALL,
  TASK_ACTION.EMAIL,
  TASK_ACTION.LINKEDIN_MESSAGE,
  TASK_FIELDS_LOGIC_ROLE.TEMPLATE
];
export const TASK_REFERENCED_COLUMNS = [
  COMPANY_FIELDS_LOGIC_ROLE.NAME,
  COMPANY_FIELDS_LOGIC_ROLE.STATUS,
  COMPANY_FIELDS_LOGIC_ROLE.SOURCE,
  COMPANY_FIELDS_LOGIC_ROLE.CADENCE,
  COMPANY_FIELDS_LOGIC_ROLE.ATTEMPTS_LAST_DAY,
  COMPANY_FIELDS_LOGIC_ROLE.HIGH_PRIORITY,
  LEAD_FIELDS_LOGIC_ROLE.FULL_NAME,
  LEAD_FIELDS_LOGIC_ROLE.STATUS,
  LEAD_FIELDS_LOGIC_ROLE.SOURCE,
  LEAD_FIELDS_LOGIC_ROLE.CADENCE,
  LEAD_FIELDS_LOGIC_ROLE.COMPANY,
  LEAD_FIELDS_LOGIC_ROLE.ATTEMPTS_LAST_DAY,
  LEAD_FIELDS_LOGIC_ROLE.HIGH_PRIORITY,
  OPPORTUNITY_FIELDS_LOGIC_ROLE.NAME,
  OPPORTUNITY_FIELDS_LOGIC_ROLE.STATUS,
  OPPORTUNITY_FIELDS_LOGIC_ROLE.CADENCE
];
export const EMAILING_TYPE = Object.freeze({
  AUTOMATED: "automatedEmails",
  SCHEDULE: "scheduledEmails"
});
export const VARIANT_STYLES = {
  error: {
    backgroundColor: "#fcdfe4",
    borderColor: "verySoftTomato"
  },
  warning: {
    backgroundColor: "#fdeade",
    borderColor: "verySoftBanana"
  },
  info: {
    backgroundColor: "lighterGray",
    borderColor: "veryLightBloobirds"
  }
};
export const SCHEDULED_EMAIL_STATUS_INFO = {
  [TASK_AUTOMATED_STATUS_LOGIC_ROLE.FAILED]: {
    text: "Failed",
    textColor: "tomato",
    cardVariant: "error"
  },
  [TASK_AUTOMATED_STATUS_LOGIC_ROLE.PAUSED]: {
    text: "Paused",
    textColor: "tangerine",
    cardVariant: "warning"
  },
  [TASK_AUTOMATED_STATUS_LOGIC_ROLE.RESCHEDULED]: {
    text: "Rescheduled",
    textColor: "bloobirds",
    cardVariant: "info"
  }
};
export const BOBJECT_HIGH_PRIORITY_LOGIC_ROLE = {
  [BOBJECT_TYPES.COMPANY]: COMPANY_HIGH_PRIORITY_LOGIC_ROLE,
  [BOBJECT_TYPES.LEAD]: LEAD_HIGH_PRIORITY_LOGIC_ROLE
};
export const NAME_OR_REFERENCE_FIELDS = [
  COMPANY_FIELDS_LOGIC_ROLE.NAME,
  LEAD_FIELDS_LOGIC_ROLE.FULL_NAME,
  OPPORTUNITY_FIELDS_LOGIC_ROLE.NAME,
  LEAD_FIELDS_LOGIC_ROLE.OPPORTUNITY,
  TASK_FIELDS_LOGIC_ROLE.LEAD,
  TASK_FIELDS_LOGIC_ROLE.COMPANY,
  TASK_FIELDS_LOGIC_ROLE.OPPORTUNITY
];
export const AUTOMATION_ERRORS_MESSAGE = {
  [TASK_AUTOMATED_ERROR_LOGIC_ROLE.MISSING_EMAIL]: "Cannot find the recipient\u2019s email in the field ##EMAIL_FIELD##, please add this information and retry",
  [TASK_AUTOMATED_ERROR_LOGIC_ROLE.OPT_OUT_ENABLED]: "This person has been opted out by requesting not to be contacted again. You cannot send them emails while they are marked as opt up yes.",
  [TASK_AUTOMATED_ERROR_LOGIC_ROLE.PAUSED_MORE_THAN_7_DAYS]: "The email has been paused for more than 7 days try to solve the issue and retry",
  [TASK_AUTOMATED_ERROR_LOGIC_ROLE.STOPPED_ACCOUNT]: "Your mail account has been disconnected, you should go to Connections and re-authenticate the account to be able to send your emails.",
  [TASK_AUTOMATED_ERROR_LOGIC_ROLE.UNKNOWN_ERROR]: "The email could not be delivered because of an issue on the sender server",
  [TASK_AUTOMATED_ERROR_LOGIC_ROLE.VARIABLE_NOT_RESOLVED]: "One or more variables in the email can not be replaced with the data from the ##BOBJECT##. Edit the template to continue",
  [TASK_AUTOMATED_ERROR_LOGIC_ROLE.DAILY_LIMIT_EXCEEDED]: "This email failed because the daily limit of emails has been reached.",
  [TASK_AUTOMATED_ERROR_LOGIC_ROLE.INVALID_RECIPIENT]: "This email could not be sent because the recipient's email address is not valid"
};
export const AUTOMATION_PAUSED_REASON_MESSAGE = {
  [TASK_AUTOMATED_PAUSED_REASONS_LOGIC_ROLE.OVERDUE]: "Paused ##DATE## because this cadence has overdue not completed tasks",
  [TASK_AUTOMATED_PAUSED_REASONS_LOGIC_ROLE.TOUCH]: "Paused ##DATE## because this ##OBJECT## previously contacted you "
};
export const AUTOMATION_RESCHEDULED_MESSAGE = "Re-scheduled to send ##DATE## Delayed due to sending limits";
