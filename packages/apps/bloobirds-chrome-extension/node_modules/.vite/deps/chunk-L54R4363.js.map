{
  "version": 3,
  "sources": ["../../../../../../node_modules/direction/index.js", "../../../../../../node_modules/slate-react/node_modules/is-hotkey/lib/index.js", "../../../../../../node_modules/scroll-into-view-if-needed/node_modules/compute-scroll-into-view/src/index.ts", "../../../../../../node_modules/scroll-into-view-if-needed/es/index.js", "../../../../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../../../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js", "../../../../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js", "../../../../../../node_modules/slate-react/src/utils/key.ts", "../../../../../../node_modules/slate-react/src/utils/weak-maps.ts", "../../../../../../node_modules/slate-react/src/utils/dom.ts", "../../../../../../node_modules/slate-react/src/utils/environment.ts", "../../../../../../node_modules/slate-react/src/plugin/react-editor.ts", "../../../../../../node_modules/slate-react/src/hooks/use-isomorphic-layout-effect.ts", "../../../../../../node_modules/slate-react/src/utils/range-list.ts", "../../../../../../node_modules/slate-react/src/components/string.tsx", "../../../../../../node_modules/slate-react/src/hooks/use-slate-static.tsx", "../../../../../../node_modules/slate-react/src/components/leaf.tsx", "../../../../../../node_modules/slate-react/src/components/text.tsx", "../../../../../../node_modules/slate-react/src/components/element.tsx", "../../../../../../node_modules/slate-react/src/hooks/use-decorate.ts", "../../../../../../node_modules/slate-react/src/hooks/use-selected.ts", "../../../../../../node_modules/slate-react/src/hooks/use-children.tsx", "../../../../../../node_modules/slate-react/src/hooks/use-read-only.ts", "../../../../../../node_modules/slate-react/src/hooks/use-slate.tsx", "../../../../../../node_modules/slate-react/src/utils/constants.ts", "../../../../../../node_modules/slate-react/src/utils/hotkeys.ts", "../../../../../../node_modules/slate-react/src/components/restore-dom/restore-dom-manager.ts", "../../../../../../node_modules/slate-react/src/components/restore-dom/restore-dom.tsx", "../../../../../../node_modules/slate-react/src/utils/diff-text.ts", "../../../../../../node_modules/slate-react/src/hooks/android-input-manager/android-input-manager.ts", "../../../../../../node_modules/slate-react/src/hooks/use-is-mounted.tsx", "../../../../../../node_modules/slate-react/src/hooks/use-mutation-observer.ts", "../../../../../../node_modules/slate-react/src/hooks/android-input-manager/use-android-input-manager.ts", "../../../../../../node_modules/slate-react/src/hooks/use-track-user-input.ts", "../../../../../../node_modules/slate-react/src/components/editable.tsx", "../../../../../../node_modules/slate-react/src/hooks/use-focused.ts", "../../../../../../node_modules/slate-react/src/hooks/use-slate-selector.tsx", "../../../../../../node_modules/slate-react/src/components/slate.tsx", "../../../../../../node_modules/slate-react/src/hooks/use-editor.tsx", "../../../../../../node_modules/slate-react/src/hooks/use-slate-selection.tsx", "../../../../../../node_modules/slate-react/src/utils/lines.ts", "../../../../../../node_modules/slate-react/src/plugin/with-react.ts"],
  "sourcesContent": ["'use strict'\n\nmodule.exports = direction\n\nvar RTL = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nvar LTR =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\nvar rtl = new RegExp('^[^' + LTR + ']*[' + RTL + ']')\nvar ltr = new RegExp('^[^' + RTL + ']*[' + LTR + ']')\n\nfunction direction(value) {\n  value = String(value || '')\n\n  if (rtl.test(value)) {\n    return 'rtl'\n  }\n\n  if (ltr.test(value)) {\n    return 'ltr'\n  }\n\n  return 'neutral'\n}\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;", "// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n// add support for visualViewport object currently implemented in chrome\ninterface visualViewport {\n  height: number\n  width: number\n}\n\ntype ScrollLogicalPosition = 'start' | 'center' | 'end' | 'nearest'\n// This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\ntype ScrollMode = 'always' | 'if-needed'\n// New option that skips auto-scrolling all nodes with overflow: hidden set\n// See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\ntype SkipOverflowHiddenElements = boolean\n\ninterface Options {\n  block?: ScrollLogicalPosition\n  inline?: ScrollLogicalPosition\n  scrollMode?: ScrollMode\n  boundary?: CustomScrollBoundary\n  skipOverflowHiddenElements?: SkipOverflowHiddenElements\n}\n\n// Custom behavior, not in any spec\ntype CustomScrollBoundaryCallback = (parent: Element) => boolean\ntype CustomScrollBoundary = Element | CustomScrollBoundaryCallback | null\ninterface CustomScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nfunction isElement(el: any): el is Element {\n  return typeof el === 'object' && el != null && el.nodeType === 1\n}\n\nfunction canOverflow(\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nfunction getFrameElement(el: Element) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nfunction isHiddenByFrame(el: Element): boolean {\n  const frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nfunction isScrollable(el: Element, skipOverflowHiddenElements?: boolean) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    const style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nfunction alignNearest(\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nexport default (target: Element, options: Options): CustomScrollAction[] => {\n  //TODO: remove this hack when microbundle will support typescript >= 4.0\n  const windowWithViewport = (window as unknown) as Window & {\n    visualViewport: visualViewport\n  }\n\n  const {\n    scrollMode,\n    block,\n    inline,\n    boundary,\n    skipOverflowHiddenElements,\n  } = options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  const checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  const scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  const frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = cursor.parentElement\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  const viewportWidth = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.width\n    : innerWidth\n  const viewportHeight = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.height\n    : innerHeight\n\n  // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n  const viewportX = window.scrollX || pageXOffset\n  const viewportY = window.scrollY || pageYOffset\n\n  const {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop\n      : block === 'end'\n      ? targetBottom\n      : targetTop + targetHeight / 2 // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2\n      : inline === 'end'\n      ? targetRight\n      : targetLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  const computations: CustomScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    const frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    const {\n      height,\n      width,\n      top,\n      right,\n      bottom,\n      left,\n    } = frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    const frameStyle = getComputedStyle(frame)\n    const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    const borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    const borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    const scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    const scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          viewportY,\n          viewportY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          viewportY + targetBlock,\n          viewportY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          viewportX,\n          viewportX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          viewportX + targetInline,\n          viewportX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + viewportY)\n      inlineScroll = Math.max(0, inlineScroll + viewportX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      const { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll = Math.max(\n        0,\n        Math.min(\n          scrollTop + blockScroll,\n          frame.scrollHeight - height + scrollbarHeight\n        )\n      )\n      inlineScroll = Math.max(\n        0,\n        Math.min(\n          scrollLeft + inlineScroll,\n          frame.scrollWidth - width + scrollbarWidth\n        )\n      )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n", "import compute from 'compute-scroll-into-view';\n\nfunction isOptionsObject(options) {\n  return options === Object(options) && Object.keys(options).length !== 0;\n}\n\nfunction defaultBehavior(actions, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n\n  var canSmoothScroll = ('scrollBehavior' in document.body.style);\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n\n    if (el.scroll && canSmoothScroll) {\n      el.scroll({\n        top: top,\n        left: left,\n        behavior: behavior\n      });\n    } else {\n      el.scrollTop = top;\n      el.scrollLeft = left;\n    }\n  });\n}\n\nfunction getOptions(options) {\n  if (options === false) {\n    return {\n      block: 'end',\n      inline: 'nearest'\n    };\n  }\n\n  if (isOptionsObject(options)) {\n    return options;\n  }\n\n  return {\n    block: 'start',\n    inline: 'nearest'\n  };\n}\n\nfunction scrollIntoView(target, options) {\n  var isTargetAttached = target.isConnected || target.ownerDocument.documentElement.contains(target);\n\n  if (isOptionsObject(options) && typeof options.behavior === 'function') {\n    return options.behavior(isTargetAttached ? compute(target, options) : []);\n  }\n\n  if (!isTargetAttached) {\n    return;\n  }\n\n  var computeOptions = getOptions(options);\n  return defaultBehavior(compute(target, computeOptions), computeOptions.behavior);\n}\n\nexport default scrollIntoView;", "export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}", "export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}", "import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}", "/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n", "import { Ancestor, Editor, Node, Range, RangeRef, Text } from 'slate'\nimport { Action } from '../hooks/android-input-manager/android-input-manager'\nimport { TextDiff } from './diff-text'\nimport { Key } from './key'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER_ELEMENT: WeakMap<\n  Editor,\n  HTMLElement\n> = new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\nexport const EDITOR_TO_STYLE_ELEMENT: WeakMap<\n  Editor,\n  HTMLStyleElement\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_DRAGGING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_CLICKING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_COMPOSING: WeakMap<Editor, boolean> = new WeakMap()\n\nexport const EDITOR_TO_USER_SELECTION: WeakMap<\n  Editor,\n  RangeRef | null\n> = new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\n\n/**\n * Weak maps for saving pending state on composition stage.\n */\n\nexport const EDITOR_TO_SCHEDULE_FLUSH: WeakMap<\n  Editor,\n  () => void\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_INSERTION_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\nexport const EDITOR_TO_USER_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\n/**\n * Android input handling specific weak-maps\n */\n\nexport const EDITOR_TO_PENDING_DIFFS: WeakMap<\n  Editor,\n  TextDiff[]\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_ACTION: WeakMap<\n  Editor,\n  Action | null\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_SELECTION: WeakMap<\n  Editor,\n  Range | null\n> = new WeakMap()\n\nexport const EDITOR_TO_FORCE_RENDER: WeakMap<Editor, () => void> = new WeakMap()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\nexport const MARK_PLACEHOLDER_SYMBOL = (Symbol(\n  'mark-placeholder'\n) as unknown) as string\n", "/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: typeof Selection['constructor']\n    DataTransfer: typeof DataTransfer['constructor']\n    Node: typeof Node['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines wether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = (node: Node | null) => {\n  let parent = node && node.parentNode\n  while (parent) {\n    if (parent.toString() === '[object ShadowRoot]') {\n      return true\n    }\n    parent = parent.parentNode\n  }\n  return false\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m\nexport const getSlateFragmentAttribute = (\n  dataTransfer: DataTransfer\n): string | void => {\n  const htmlData = dataTransfer.getData('text/html')\n  const [, fragment] = htmlData.match(catchSlateFragment) || []\n  return fragment\n}\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const getClipboardData = (dataTransfer: DataTransfer): DataTransfer => {\n  if (!dataTransfer.getData('application/x-slate-fragment')) {\n    const fragment = getSlateFragmentAttribute(dataTransfer)\n    if (fragment) {\n      const clipboardData = new DataTransfer()\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type))\n      })\n      clipboardData.setData('application/x-slate-fragment', fragment)\n      return clipboardData\n    }\n  }\n  return dataTransfer\n}\n\n/**\n * Check whether a mutation originates from a editable element inside the editor.\n */\n\nexport const isTrackedMutation = (\n  editor: ReactEditor,\n  mutation: MutationRecord,\n  batch: MutationRecord[]\n): boolean => {\n  const { target } = mutation\n  if (isDOMElement(target) && target.matches('[contentEditable=\"false\"]')) {\n    return false\n  }\n\n  const { document } = ReactEditor.getWindow(editor)\n  if (document.contains(target)) {\n    return ReactEditor.hasDOMNode(editor, target, { editable: true })\n  }\n\n  const parentMutation = batch.find(({ addedNodes, removedNodes }) => {\n    for (const node of addedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n\n    for (const node of removedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n  })\n\n  if (!parentMutation || parentMutation === mutation) {\n    return false\n  }\n\n  // Target add/remove is tracked. Track the mutation if we track the parent mutation.\n  return isTrackedMutation(editor, parentMutation, batch)\n}\n", "import React from 'react'\n\nexport const IS_REACT_VERSION_17_OR_ABOVE =\n  parseInt(React.version.split('.')[0], 10) >= 17\n\nexport const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_SAFARI =\n  typeof navigator !== 'undefined' &&\n  /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(\n    navigator.userAgent\n  )\n\n// UC mobile browser\nexport const IS_UC_MOBILE =\n  typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent)\n\n// Wechat browser\nexport const IS_WECHATBROWSER =\n  typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent)\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  !IS_CHROME_LEGACY &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n", "import {\n  BaseEditor,\n  Editor,\n  Node,\n  Path,\n  Point,\n  Range,\n  Scrubber,\n  Transforms,\n} from 'slate'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n  EDITOR_TO_WINDOW,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  IS_COMPOSING,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_PENDING_DIFFS,\n} from '../utils/weak-maps'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  isDOMElement,\n  isDOMSelection,\n  isDOMNode,\n  normalizeDOMPoint,\n  hasShadowRoot,\n  DOMText,\n} from '../utils/dom'\nimport { IS_CHROME, IS_FIREFOX, IS_ANDROID } from '../utils/environment'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends BaseEditor {\n  insertData: (data: DataTransfer) => void\n  insertFragmentData: (data: DataTransfer) => boolean\n  insertTextData: (data: DataTransfer) => boolean\n  setFragmentData: (\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n  hasTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  hasEditableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  hasSelectableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n  isTargetInsideNonReadonlyVoid: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n}\n\n// eslint-disable-next-line no-redeclare\nexport const ReactEditor = {\n  /**\n   * Check if the user is currently composing inside the editor.\n   */\n\n  isComposing(editor: ReactEditor): boolean {\n    return !!IS_COMPOSING.get(editor)\n  },\n\n  /**\n   * Return the host window of the current editor.\n   */\n\n  getWindow(editor: ReactEditor): Window {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  /**\n   * Find a key for a Slate node.\n   */\n\n  findKey(editor: ReactEditor, node: Node): Key {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  /**\n   * Find the path of Slate node.\n   */\n\n  findPath(editor: ReactEditor, node: Node): Path {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${Scrubber.stringify(node)}`\n    )\n  },\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n\n  findDocumentOrShadowRoot(editor: ReactEditor): Document | ShadowRoot {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (\n      (root instanceof Document || root instanceof ShadowRoot) &&\n      root.getSelection != null\n    ) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  /**\n   * Check if the editor is focused.\n   */\n\n  isFocused(editor: ReactEditor): boolean {\n    return !!IS_FOCUSED.get(editor)\n  },\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n\n  isReadOnly(editor: ReactEditor): boolean {\n    return !!IS_READ_ONLY.get(editor)\n  },\n\n  /**\n   * Blur the editor.\n   */\n\n  blur(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  /**\n   * Focus the editor.\n   */\n\n  focus(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, true)\n\n    if (root.activeElement !== el) {\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  /**\n   * Deselect the editor.\n   */\n\n  deselect(editor: ReactEditor): void {\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n\n  hasDOMNode(\n    editor: ReactEditor,\n    target: DOMNode,\n    options: { editable?: boolean } = {}\n  ): boolean {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (isDOMElement(target)\n        ? target\n        : target.parentElement) as HTMLElement\n    } catch (err) {\n      if (\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable || targetEl.isContentEditable\n        ? true\n        : (typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n            // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n            targetEl.closest('[contenteditable=\"false\"]') === editorEl) ||\n          !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n\n  insertData(editor: ReactEditor, data: DataTransfer): void {\n    editor.insertData(data)\n  },\n\n  /**\n   * Insert fragment data from a `DataTransfer` into the editor.\n   */\n\n  insertFragmentData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertFragmentData(data)\n  },\n\n  /**\n   * Insert text data from a `DataTransfer` into the editor.\n   */\n\n  insertTextData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertTextData(data)\n  },\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n\n  setFragmentData(\n    editor: ReactEditor,\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ): void {\n    editor.setFragmentData(data, originEvent)\n  },\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n\n  toDOMNode(editor: ReactEditor, node: Node): HTMLElement {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT?.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${Scrubber.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n\n  toDOMPoint(editor: ReactEditor, point: Point): DOMPoint {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (let i = 0; i < texts.length; i++) {\n      const text = texts[i]\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      // Prefer putting the selection inside the mark placeholder to ensure\n      // composed text is displayed with the correct marks.\n      const nextText = texts[i + 1]\n      if (\n        point.offset === end &&\n        nextText?.hasAttribute('data-slate-mark-placeholder')\n      ) {\n        const domText = nextText.childNodes[0]\n\n        domPoint = [\n          // COMPAT: If we don't explicity set the dom point to be on the actual\n          // dom text element, chrome will put the selection behind the actual dom\n          // text element, causing domRange.getBoundingClientRect() calls on a collapsed\n          // selection to return incorrect zero values (https://bugs.chromium.org/p/chromium/issues/detail?id=435438)\n          // which will cause issues when scrolling to it.\n          domText instanceof DOMText ? domText : nextText,\n          nextText.textContent?.startsWith('\\uFEFF') ? 1 : 0,\n        ]\n        break\n      }\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${Scrubber.stringify(\n          point\n        )}`\n      )\n    }\n\n    return domPoint\n  },\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n\n  toDOMRange(editor: ReactEditor, range: Range): DOMRange {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const window = ReactEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (isDOMElement(startNode)\n      ? startNode\n      : startNode.parentElement) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (isDOMElement(endNode)\n      ? endNode\n      : endNode.parentElement) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n\n  toSlateNode(editor: ReactEditor, domNode: DOMNode): Node {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n\n  findEventRange(editor: ReactEditor, event: any): Range {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = ReactEditor.getWindow(editor)\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false,\n    })\n    return range\n  },\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n\n  toSlatePoint<T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: T\n      suppressThrow: T\n    }\n  ): T extends true ? Point | null : Point {\n    const { exactMatch, suppressThrow } = options\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const editorEl = ReactEditor.toDOMNode(editor, editor)\n      const potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n      const voidNode =\n        potentialVoidNode && editorEl.contains(potentialVoidNode)\n          ? potentialVoidNode\n          : null\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')\n\n        if (textNode) {\n          const window = ReactEditor.getWindow(editor)\n          const range = window.document.createRange()\n          range.setStart(textNode, 0)\n          range.setEnd(nearestNode, nearestOffset)\n\n          const contents = range.cloneContents()\n          const removals = [\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[data-slate-zero-width]')\n            ),\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[contenteditable=false]')\n            ),\n          ]\n\n          removals.forEach(el => {\n            // COMPAT: While composing at the start of a text node, some keyboards put\n            // the text content inside the zero width space.\n            if (\n              IS_ANDROID &&\n              !exactMatch &&\n              el.hasAttribute('data-slate-zero-width') &&\n              el.textContent.length > 0 &&\n              el.textContext !== '\\uFEFF'\n            ) {\n              if (el.textContent.startsWith('\\uFEFF')) {\n                el.textContent = el.textContent.slice(1)\n              }\n\n              return\n            }\n\n            el!.parentNode!.removeChild(el)\n          })\n\n          // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n          offset = contents.textContent!.length\n          domNode = textNode\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent and taking the\n        // first one that isn't inside a nested editor.\n        const leafNodes = voidNode.querySelectorAll('[data-slate-leaf]')\n        for (let index = 0; index < leafNodes.length; index++) {\n          const current = leafNodes[index]\n          if (ReactEditor.hasDOMNode(editor, current)) {\n            leafNode = current\n            break\n          }\n        }\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      }\n\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        // COMPAT: Android IMEs might remove the zero width space while composing,\n        // and we don't add it for line-breaks.\n        IS_ANDROID &&\n        domNode.getAttribute('data-slate-zero-width') === 'z' &&\n        domNode.textContent?.startsWith('\\uFEFF') &&\n        // COMPAT: If the parent node is a Slate zero-width space, editor is\n        // because the text node should have no characters. However, during IME\n        // composition the ASCII characters will be prepended to the zero-width\n        // space, so subtract 1 from the offset to account for the zero-width\n        // space character.\n        (parentNode.hasAttribute('data-slate-zero-width') ||\n          // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n          // when the document ends with a new-line character. This results in the offset\n          // length being off by one, so we need to subtract one to account for this.\n          (IS_FIREFOX && domNode.textContent?.endsWith('\\n\\n')))\n      ) {\n        offset--\n      }\n    }\n\n    if (IS_ANDROID && !textNode && !exactMatch) {\n      const node = parentNode.hasAttribute('data-slate-node')\n        ? parentNode\n        : parentNode.closest('[data-slate-node]')\n\n      if (node && ReactEditor.hasDOMNode(editor, node, { editable: true })) {\n        const slateNode = ReactEditor.toSlateNode(editor, node)\n        let { path, offset } = Editor.start(\n          editor,\n          ReactEditor.findPath(editor, slateNode)\n        )\n\n        if (!node.querySelector('[data-slate-leaf]')) {\n          offset = nearestOffset\n        }\n\n        return { path, offset } as T extends true ? Point | null : Point\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n\n  toSlateRange<T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: T\n      suppressThrow: T\n    }\n  ): T extends true ? Range | null : Range {\n    const { exactMatch, suppressThrow } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode\n        anchorOffset = domRange.anchorOffset\n        focusNode = domRange.focusNode\n        focusOffset = domRange.focusOffset\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        if (IS_CHROME && hasShadowRoot(anchorNode)) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    const anchor = ReactEditor.toSlatePoint(\n      editor,\n      [anchorNode, anchorOffset],\n      { exactMatch, suppressThrow }\n    )\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    const focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n          exactMatch,\n          suppressThrow,\n        })\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    let range: Range = { anchor: anchor as Point, focus: focus as Point }\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (\n      Range.isExpanded(range) &&\n      Range.isForward(range) &&\n      isDOMElement(focusNode) &&\n      Editor.void(editor, { at: range.focus, mode: 'highest' })\n    ) {\n      range = Editor.unhangRange(editor, range, { voids: true })\n    }\n\n    return (range as unknown) as T extends true ? Range | null : Range\n  },\n\n  hasRange(editor: ReactEditor, range: Range): boolean {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n\n  /**\n   * Check if the target is in the editor.\n   */\n  hasTarget(\n    editor: ReactEditor,\n    target: EventTarget | null\n  ): target is DOMNode {\n    return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target)\n  },\n\n  /**\n   * Check if the target is editable and in the editor.\n   */\n  hasEditableTarget(\n    editor: ReactEditor,\n    target: EventTarget | null\n  ): target is DOMNode {\n    return (\n      isDOMNode(target) &&\n      ReactEditor.hasDOMNode(editor, target, { editable: true })\n    )\n  },\n\n  /**\n   * Check if the target can be selectable\n   */\n  hasSelectableTarget(\n    editor: ReactEditor,\n    target: EventTarget | null\n  ): boolean {\n    return (\n      ReactEditor.hasEditableTarget(editor, target) ||\n      ReactEditor.isTargetInsideNonReadonlyVoid(editor, target)\n    )\n  },\n\n  /**\n   * Check if the target is inside void and in an non-readonly editor.\n   */\n  isTargetInsideNonReadonlyVoid(\n    editor: ReactEditor,\n    target: EventTarget | null\n  ): boolean {\n    if (IS_READ_ONLY.get(editor)) return false\n\n    const slateNode =\n      ReactEditor.hasTarget(editor, target) &&\n      ReactEditor.toSlateNode(editor, target)\n    return Editor.isVoid(editor, slateNode)\n  },\n\n  /**\n   * Experimental and android specific: Flush all pending diffs and cancel composition at the next possible time.\n   */\n  androidScheduleFlush(editor: Editor) {\n    EDITOR_TO_SCHEDULE_FLUSH.get(editor)?.()\n  },\n\n  /**\n   * Experimental and android specific: Get pending diffs\n   */\n  androidPendingDiffs(editor: Editor) {\n    return EDITOR_TO_PENDING_DIFFS.get(editor)\n  },\n}\n", "import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from '../utils/environment'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n", "import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (obj1: {}, obj2: {}) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isDecoratorRangeListEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n    const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n    if (\n      !Range.equals(range, other) ||\n      range[PLACEHOLDER_SYMBOL] !== other[PLACEHOLDER_SYMBOL] ||\n      !shallowCompare(rangeOwnProps, otherOwnProps)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n", "import React, { useRef } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { IS_ANDROID } from '../utils/environment'\nimport { MARK_PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n  const isMarkPlaceholder = leaf[MARK_PLACEHOLDER_SYMBOL] === true\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n\n  const ref = useRef<HTMLSpanElement>(null)\n\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // Render text content immediately if it's the first-time render\n  // Ensure that text content is rendered on server-side rendering\n  if (!ref.current) {\n    return (\n      <span data-slate-string ref={ref}>\n        {getTextContent()}\n      </span>\n    )\n  }\n\n  // the span is intentionally same on every render in virtual DOM, actual rendering happens in the layout effect above\n  return <span data-slate-string ref={ref} />\n}\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nexport const ZeroWidthString = (props: {\n  length?: number\n  isLineBreak?: boolean\n  isMarkPlaceholder?: boolean\n}) => {\n  const { length = 0, isLineBreak = false, isMarkPlaceholder = false } = props\n\n  const attributes = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length,\n  }\n\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true\n  }\n\n  return (\n    <span {...attributes}>\n      {!IS_ANDROID || !isLineBreak ? '\\uFEFF' : null}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n", "import { createContext, useContext } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { Editor } from 'slate'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n", "import React, { useRef, useEffect } from 'react'\nimport { Element, Text } from 'slate'\nimport String from './string'\nimport {\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_STYLE_ELEMENT,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useSlateStatic } from '../hooks/use-slate-static'\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\n\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const placeholderRef = useRef<HTMLSpanElement | null>(null)\n  const editor = useSlateStatic()\n\n  const placeholderResizeObserver = useRef<ResizeObserver | null>(null)\n\n  useEffect(() => {\n    return () => {\n      if (placeholderResizeObserver.current) {\n        placeholderResizeObserver.current.disconnect()\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    const placeholderEl = placeholderRef?.current\n\n    if (placeholderEl) {\n      EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl)\n    } else {\n      EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor)\n    }\n\n    if (placeholderResizeObserver.current) {\n      // Update existing observer.\n      placeholderResizeObserver.current.disconnect()\n      if (placeholderEl)\n        placeholderResizeObserver.current.observe(placeholderEl)\n    } else if (placeholderEl) {\n      // Create a new observer and observe the placeholder element.\n      placeholderResizeObserver.current = new ResizeObserver(([{ target }]) => {\n        const styleElement = EDITOR_TO_STYLE_ELEMENT.get(editor)\n        if (styleElement) {\n          // Make the min-height the height of the placeholder.\n          const minHeight = `${target.clientHeight}px`\n          styleElement.innerHTML = `:where([data-slate-editor-id=\"${editor.id}\"]) { min-height: ${minHeight}; }`\n        }\n      })\n\n      placeholderResizeObserver.current.observe(placeholderEl)\n    }\n\n    if (!placeholderEl) {\n      // No placeholder element, so no need for a resize observer.\n      const styleElement = EDITOR_TO_STYLE_ELEMENT.get(editor)\n      if (styleElement) {\n        // No min-height if there is no placeholder.\n        styleElement.innerHTML = ''\n      }\n    }\n\n    return () => {\n      EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor)\n    }\n  }, [placeholderRef, leaf])\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  if (leaf[PLACEHOLDER_SYMBOL]) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n        },\n        contentEditable: false,\n        ref: placeholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n", "import React, { useRef } from 'react'\nimport { Element, Range, Text as SlateText } from 'slate'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport Leaf from './leaf'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text,\n  } = props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    if (ref.current) {\n      KEY_TO_ELEMENT?.set(key, ref.current)\n      NODE_TO_ELEMENT.set(text, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, text)\n    } else {\n      KEY_TO_ELEMENT?.delete(key)\n      NODE_TO_ELEMENT.delete(text)\n    }\n  })\n\n  return (\n    <span data-slate-node=\"text\" ref={ref}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.text === prev.text &&\n    isDecoratorRangeListEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n", "import React, { useCallback } from 'react'\nimport getDirection from 'direction'\nimport { Editor, Node, Range, Element as SlateElement } from 'slate'\n\nimport Text from './text'\nimport useChildren from '../hooks/use-children'\nimport { ReactEditor, useSlateStatic, useReadOnly } from '..'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_PARENT,\n  NODE_TO_INDEX,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  const ref = useCallback(\n    (ref: HTMLElement | null) => {\n      // Update element-related weak maps with the DOM element ref.\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (ref) {\n        KEY_TO_ELEMENT?.set(key, ref)\n        NODE_TO_ELEMENT.set(element, ref)\n        ELEMENT_TO_NODE.set(ref, element)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(element)\n      }\n    },\n    [editor, key, element]\n  )\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  return renderElement({ attributes, children, element })\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    isDecoratorRangeListEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n", "import { createContext, useContext } from 'react'\nimport { Range, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<(entry: NodeEntry) => Range[]>(\n  () => []\n)\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => Range[]) => {\n  return useContext(DecorateContext)\n}\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n", "import React from 'react'\nimport { Editor, Range, Element, Ancestor, Descendant } from 'slate'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\nimport { useDecorate } from './use-decorate'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\nimport { SelectedContext } from './use-selected'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const decorate = useDecorate()\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <SelectedContext.Provider key={`provider-${key.id}`} value={!!sel}>\n          <ElementComponent\n            decorations={ds}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={sel}\n          />\n        </SelectedContext.Provider>\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n", "import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport interface SlateContextValue {\n  v: number\n  editor: ReactEditor\n}\n\nexport const SlateContext = createContext<{\n  v: number\n  editor: ReactEditor\n} | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  const { editor } = context\n  return editor\n}\n\nexport const useSlateWithV = () => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return context\n}\n", "export const TRIPLE_CLICK = 3\n", "import { isKeyHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n  const isGeneric = generic && isKeyHotkey(generic)\n  const isApple = apple && isKeyHotkey(apple)\n  const isWindows = windows && isKeyHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n", "import { RefObject } from 'react'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport { isTrackedMutation } from '../../utils/dom'\n\nexport type RestoreDOMManager = {\n  registerMutations: (mutations: MutationRecord[]) => void\n  restoreDOM: () => void\n  clear: () => void\n}\n\nexport const createRestoreDomManager = (\n  editor: ReactEditor,\n  receivedUserInput: RefObject<boolean>\n): RestoreDOMManager => {\n  let bufferedMutations: MutationRecord[] = []\n\n  const clear = () => {\n    bufferedMutations = []\n  }\n\n  const registerMutations = (mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    const trackedMutations = mutations.filter(mutation =>\n      isTrackedMutation(editor, mutation, mutations)\n    )\n\n    bufferedMutations.push(...trackedMutations)\n  }\n\n  function restoreDOM() {\n    bufferedMutations.reverse().forEach(mutation => {\n      if (mutation.type === 'characterData') {\n        mutation.target.textContent = mutation.oldValue\n        return\n      }\n\n      mutation.removedNodes.forEach(node => {\n        mutation.target.insertBefore(node, mutation.nextSibling)\n      })\n\n      mutation.addedNodes.forEach(node => {\n        mutation.target.removeChild(node)\n      })\n    })\n\n    // Clear buffered mutations to ensure we don't undo them twice\n    clear()\n  }\n\n  return {\n    registerMutations,\n    restoreDOM,\n    clear,\n  }\n}\n", "import React, { Component, ComponentType, ContextType, RefObject } from 'react'\nimport { EditorContext } from '../../hooks/use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport {\n  createRestoreDomManager,\n  RestoreDOMManager,\n} from './restore-dom-manager'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n}\n\ntype RestoreDOMProps = {\n  receivedUserInput: RefObject<boolean>\n  node: RefObject<HTMLDivElement>\n}\n\n// We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\nclass RestoreDOMComponent extends Component<RestoreDOMProps> {\n  static contextType = EditorContext\n  context: ContextType<typeof EditorContext> = null\n\n  private manager: RestoreDOMManager | null = null\n  private mutationObserver: MutationObserver | null = null\n\n  observe() {\n    const { node } = this.props\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    this.mutationObserver?.observe(node.current, MUTATION_OBSERVER_CONFIG)\n  }\n\n  componentDidMount() {\n    const { receivedUserInput } = this.props\n    const editor = this.context!\n\n    this.manager = createRestoreDomManager(editor, receivedUserInput)\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations)\n\n    this.observe()\n  }\n\n  getSnapshotBeforeUpdate() {\n    const pendingMutations = this.mutationObserver?.takeRecords()\n    if (pendingMutations?.length) {\n      this.manager?.registerMutations(pendingMutations)\n    }\n\n    this.mutationObserver?.disconnect()\n    this.manager?.restoreDOM()\n\n    return null\n  }\n\n  componentDidUpdate() {\n    this.manager?.clear()\n    this.observe()\n  }\n\n  componentWillUnmount() {\n    this.mutationObserver?.disconnect()\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport const RestoreDOM: ComponentType<RestoreDOMProps> = IS_ANDROID\n  ? RestoreDOMComponent\n  : ({ children }) => <>{children}</>\n", "import { Editor, Node, Operation, Path, Point, Range, Text } from 'slate'\nimport { EDITOR_TO_PENDING_DIFFS } from './weak-maps'\n\nexport type StringDiff = {\n  start: number\n  end: number\n  text: string\n}\n\nexport type TextDiff = {\n  id: number\n  path: Path\n  diff: StringDiff\n}\n\n/**\n * Check whether a text diff was applied in a way we can perform the pending action on /\n * recover the pending selection.\n */\nexport function verifyDiffState(editor: Editor, textDiff: TextDiff): boolean {\n  const { path, diff } = textDiff\n  if (!Editor.hasPath(editor, path)) {\n    return false\n  }\n\n  const node = Node.get(editor, path)\n  if (!Text.isText(node)) {\n    return false\n  }\n\n  if (diff.start !== node.text.length || diff.text.length === 0) {\n    return (\n      node.text.slice(diff.start, diff.start + diff.text.length) === diff.text\n    )\n  }\n\n  const nextPath = Path.next(path)\n  if (!Editor.hasPath(editor, nextPath)) {\n    return false\n  }\n\n  const nextNode = Node.get(editor, nextPath)\n  return Text.isText(nextNode) && nextNode.text.startsWith(diff.text)\n}\n\nfunction applyStringDiff(text: string, ...diffs: StringDiff[]) {\n  return diffs.reduce(\n    (text, diff) =>\n      text.slice(0, diff.start) + diff.text + text.slice(diff.end),\n    text\n  )\n}\n\nfunction longestCommonPrefixLength(str: string, another: string) {\n  const length = Math.min(str.length, another.length)\n\n  for (let i = 0; i < length; i++) {\n    if (str.charAt(i) !== another.charAt(i)) {\n      return i\n    }\n  }\n\n  return length\n}\n\nfunction longestCommonSuffixLength(\n  str: string,\n  another: string,\n  max: number\n): number {\n  const length = Math.min(str.length, another.length, max)\n\n  for (let i = 0; i < length; i++) {\n    if (\n      str.charAt(str.length - i - 1) !== another.charAt(another.length - i - 1)\n    ) {\n      return i\n    }\n  }\n\n  return length\n}\n\n/**\n * Remove redundant changes from the diff so that it spans the minimal possible range\n */\nexport function normalizeStringDiff(targetText: string, diff: StringDiff) {\n  const { start, end, text } = diff\n  const removedText = targetText.slice(start, end)\n\n  const prefixLength = longestCommonPrefixLength(removedText, text)\n  const max = Math.min(\n    removedText.length - prefixLength,\n    text.length - prefixLength\n  )\n  const suffixLength = longestCommonSuffixLength(removedText, text, max)\n\n  const normalized: StringDiff = {\n    start: start + prefixLength,\n    end: end - suffixLength,\n    text: text.slice(prefixLength, text.length - suffixLength),\n  }\n\n  if (normalized.start === normalized.end && normalized.text.length === 0) {\n    return null\n  }\n\n  return normalized\n}\n\n/**\n * Return a string diff that is equivalent to applying b after a spanning the range of\n * both changes\n */\nexport function mergeStringDiffs(\n  targetText: string,\n  a: StringDiff,\n  b: StringDiff\n): StringDiff | null {\n  const start = Math.min(a.start, b.start)\n  const overlap = Math.max(\n    0,\n    Math.min(a.start + a.text.length, b.end) - b.start\n  )\n\n  const applied = applyStringDiff(targetText, a, b)\n  const sliceEnd = Math.max(\n    b.start + b.text.length,\n    a.start +\n      a.text.length +\n      (a.start + a.text.length > b.start ? b.text.length : 0) -\n      overlap\n  )\n\n  const text = applied.slice(start, sliceEnd)\n  const end = Math.max(a.end, b.end - a.text.length + (a.end - a.start))\n  return normalizeStringDiff(targetText, { start, end, text })\n}\n\n/**\n * Get the slate range the text diff spans.\n */\nexport function targetRange(textDiff: TextDiff): Range {\n  const { path, diff } = textDiff\n  return {\n    anchor: { path, offset: diff.start },\n    focus: { path, offset: diff.end },\n  }\n}\n\n/**\n * Normalize a 'pending point' a.k.a a point based on the dom state before applying\n * the pending diffs. Since the pending diffs might have been inserted with different\n * marks we have to 'walk' the offset from the starting position to ensure we still\n * have a valid point inside the document\n */\nexport function normalizePoint(editor: Editor, point: Point): Point | null {\n  let { path, offset } = point\n  if (!Editor.hasPath(editor, path)) {\n    return null\n  }\n\n  let leaf = Node.get(editor, path)\n  if (!Text.isText(leaf)) {\n    return null\n  }\n\n  const parentBlock = Editor.above(editor, {\n    match: n => Editor.isBlock(editor, n),\n    at: path,\n  })\n\n  if (!parentBlock) {\n    return null\n  }\n\n  while (offset > leaf.text.length) {\n    const entry = Editor.next(editor, { at: path, match: Text.isText })\n    if (!entry || !Path.isDescendant(entry[1], parentBlock[1])) {\n      return null\n    }\n\n    offset -= leaf.text.length\n    leaf = entry[0]\n    path = entry[1]\n  }\n\n  return { path, offset }\n}\n\n/**\n * Normalize a 'pending selection' to ensure it's valid in the current document state.\n */\nexport function normalizeRange(editor: Editor, range: Range): Range | null {\n  const anchor = normalizePoint(editor, range.anchor)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = normalizePoint(editor, range.focus)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformPendingPoint(\n  editor: Editor,\n  point: Point,\n  op: Operation\n): Point | null {\n  const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n  const textDiff = pendingDiffs?.find(({ path }) =>\n    Path.equals(path, point.path)\n  )\n\n  if (!textDiff || point.offset <= textDiff.diff.start) {\n    return Point.transform(point, op, { affinity: 'backward' })\n  }\n\n  const { diff } = textDiff\n  // Point references location inside the diff => transform the point based on the location\n  // the diff will be applied to and add the offset inside the diff.\n  if (point.offset <= diff.start + diff.text.length) {\n    const anchor = { path: point.path, offset: diff.start }\n    const transformed = Point.transform(anchor, op, {\n      affinity: 'backward',\n    })\n\n    if (!transformed) {\n      return null\n    }\n\n    return {\n      path: transformed.path,\n      offset: transformed.offset + point.offset - diff.start,\n    }\n  }\n\n  // Point references location after the diff\n  const anchor = {\n    path: point.path,\n    offset: point.offset - diff.text.length + diff.end - diff.start,\n  }\n  const transformed = Point.transform(anchor, op, {\n    affinity: 'backward',\n  })\n  if (!transformed) {\n    return null\n  }\n\n  if (\n    op.type === 'split_node' &&\n    Path.equals(op.path, point.path) &&\n    anchor.offset < op.position &&\n    diff.start < op.position\n  ) {\n    return transformed\n  }\n\n  return {\n    path: transformed.path,\n    offset: transformed.offset + diff.text.length - diff.end + diff.start,\n  }\n}\n\nexport function transformPendingRange(\n  editor: Editor,\n  range: Range,\n  op: Operation\n): Range | null {\n  const anchor = transformPendingPoint(editor, range.anchor, op)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = transformPendingPoint(editor, range.focus, op)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformTextDiff(\n  textDiff: TextDiff,\n  op: Operation\n): TextDiff | null {\n  const { path, diff, id } = textDiff\n\n  switch (op.type) {\n    case 'insert_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset <= diff.start) {\n        return {\n          diff: {\n            start: op.text.length + diff.start,\n            end: op.text.length + diff.end,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end + op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'remove_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset + op.text.length <= diff.start) {\n        return {\n          diff: {\n            start: diff.start - op.text.length,\n            end: diff.end - op.text.length,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end - op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'split_node': {\n      if (!Path.equals(op.path, path) || op.position >= diff.end) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op, { affinity: 'backward' })!,\n        }\n      }\n\n      if (op.position > diff.start) {\n        return {\n          diff: {\n            start: diff.start,\n            end: Math.min(op.position, diff.end),\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start - op.position,\n          end: diff.end - op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op, { affinity: 'forward' })!,\n      }\n    }\n    case 'merge_node': {\n      if (!Path.equals(op.path, path)) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op)!,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start + op.position,\n          end: diff.end + op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op)!,\n      }\n    }\n  }\n\n  const newPath = Path.transform(path, op)\n  if (!newPath) {\n    return null\n  }\n\n  return {\n    diff,\n    path: newPath,\n    id,\n  }\n}\n", "import { DebouncedFunc } from 'lodash'\nimport { Editor, Node, Path, Point, Range, Text, Transforms } from 'slate'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport {\n  mergeStringDiffs,\n  normalizePoint,\n  normalizeRange,\n  normalizeStringDiff,\n  StringDiff,\n  targetRange,\n  TextDiff,\n  verifyDiffState,\n} from '../../utils/diff-text'\nimport { isDOMSelection, isTrackedMutation } from '../../utils/dom'\nimport {\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  IS_COMPOSING,\n} from '../../utils/weak-maps'\n\nexport type Action = { at?: Point | Range; run: () => void }\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 25\n\n// Time with no user interaction before the current user action is considered as done.\nconst FLUSH_DELAY = 200\n\n// Replace with `const debug = console.log` to debug\nconst debug = (..._: unknown[]) => {}\n\nexport type CreateAndroidInputManagerOptions = {\n  editor: ReactEditor\n\n  scheduleOnDOMSelectionChange: DebouncedFunc<() => void>\n  onDOMSelectionChange: DebouncedFunc<() => void>\n}\n\nexport type AndroidInputManager = {\n  flush: () => void\n  scheduleFlush: () => void\n\n  hasPendingDiffs: () => boolean\n  hasPendingAction: () => boolean\n  hasPendingChanges: () => boolean\n  isFlushing: () => boolean | 'action'\n\n  handleUserSelect: (range: Range | null) => void\n  handleCompositionEnd: (event: React.CompositionEvent<HTMLDivElement>) => void\n  handleCompositionStart: (\n    event: React.CompositionEvent<HTMLDivElement>\n  ) => void\n  handleDOMBeforeInput: (event: InputEvent) => void\n  handleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void\n\n  handleDomMutations: (mutations: MutationRecord[]) => void\n  handleInput: () => void\n}\n\nexport function createAndroidInputManager({\n  editor,\n  scheduleOnDOMSelectionChange,\n  onDOMSelectionChange,\n}: CreateAndroidInputManagerOptions): AndroidInputManager {\n  let flushing: 'action' | boolean = false\n  let compositionEndTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let flushTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let actionTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  let idCounter = 0\n  let insertPositionHint: StringDiff | null | false = false\n\n  const applyPendingSelection = () => {\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor)\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n\n    if (pendingSelection) {\n      const { selection } = editor\n      const normalized = normalizeRange(editor, pendingSelection)\n\n      debug('apply pending selection', pendingSelection, normalized)\n\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized)\n      }\n    }\n  }\n\n  const performAction = () => {\n    const action = EDITOR_TO_PENDING_ACTION.get(editor)\n    EDITOR_TO_PENDING_ACTION.delete(editor)\n    if (!action) {\n      return\n    }\n\n    if (action.at) {\n      const target = Point.isPoint(action.at)\n        ? normalizePoint(editor, action.at)\n        : normalizeRange(editor, action.at)\n\n      if (!target) {\n        return\n      }\n\n      const targetRange = Editor.range(editor, target)\n      if (!editor.selection || !Range.equals(editor.selection, targetRange)) {\n        Transforms.select(editor, target)\n      }\n    }\n\n    action.run()\n  }\n\n  const flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId)\n      actionTimeoutId = null\n    }\n\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection()\n      return\n    }\n\n    if (!flushing) {\n      flushing = true\n      setTimeout(() => (flushing = false))\n    }\n\n    if (hasPendingAction()) {\n      flushing = 'action'\n    }\n\n    const selectionRef =\n      editor.selection &&\n      Editor.rangeRef(editor, editor.selection, { affinity: 'forward' })\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n\n    debug(\n      'flush',\n      EDITOR_TO_PENDING_ACTION.get(editor),\n      EDITOR_TO_PENDING_DIFFS.get(editor)\n    )\n\n    let scheduleSelectionChange = !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n\n    let diff: TextDiff | undefined\n    while ((diff = EDITOR_TO_PENDING_DIFFS.get(editor)?.[0])) {\n      const pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n        editor.marks = pendingMarks\n      }\n\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null\n        debug('insert after mark placeholder')\n      }\n\n      const range = targetRange(diff)\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range)\n      }\n\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text)\n      } else {\n        Editor.deleteFragment(editor)\n      }\n\n      // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n      EDITOR_TO_PENDING_DIFFS.set(\n        editor,\n        EDITOR_TO_PENDING_DIFFS.get(editor)?.filter(\n          ({ id }) => id !== diff!.id\n        )!\n      )\n\n      if (!verifyDiffState(editor, diff)) {\n        debug('invalid diff state')\n        scheduleSelectionChange = false\n        EDITOR_TO_PENDING_ACTION.delete(editor)\n        EDITOR_TO_USER_MARKS.delete(editor)\n        flushing = 'action'\n\n        // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n        EDITOR_TO_PENDING_SELECTION.delete(editor)\n        scheduleOnDOMSelectionChange.cancel()\n        onDOMSelectionChange.cancel()\n        selectionRef?.unref()\n      }\n    }\n\n    const selection = selectionRef?.unref()\n    if (\n      selection &&\n      !EDITOR_TO_PENDING_SELECTION.get(editor) &&\n      (!editor.selection || !Range.equals(selection, editor.selection))\n    ) {\n      Transforms.select(editor, selection)\n    }\n\n    if (hasPendingAction()) {\n      performAction()\n      return\n    }\n\n    // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n    if (scheduleSelectionChange) {\n      debug('scheduleOnDOMSelectionChange pending changes')\n      scheduleOnDOMSelectionChange()\n    }\n\n    scheduleOnDOMSelectionChange.flush()\n    onDOMSelectionChange.flush()\n\n    applyPendingSelection()\n\n    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n    EDITOR_TO_USER_MARKS.delete(editor)\n    if (userMarks !== undefined) {\n      editor.marks = userMarks\n      editor.onChange()\n    }\n  }\n\n  const handleCompositionEnd = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n    }\n\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false)\n      flush()\n    }, RESOLVE_DELAY)\n  }\n\n  const handleCompositionStart = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    debug('composition start')\n\n    IS_COMPOSING.set(editor, true)\n\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n      compositionEndTimeoutId = null\n    }\n  }\n\n  const updatePlaceholderVisibility = (forceHide = false) => {\n    const placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor)\n    if (!placeholderElement) {\n      return\n    }\n\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none'\n      return\n    }\n\n    placeholderElement.style.removeProperty('display')\n  }\n\n  const storeDiff = (path: Path, diff: StringDiff) => {\n    debug('storeDiff', path, diff)\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor) ?? []\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs)\n\n    const target = Node.leaf(editor, path)\n    const idx = pendingDiffs.findIndex(change => Path.equals(change.path, path))\n    if (idx < 0) {\n      const normalized = normalizeStringDiff(target.text, diff)\n      if (normalized) {\n        pendingDiffs.push({ path, diff, id: idCounter++ })\n      }\n\n      updatePlaceholderVisibility()\n      return\n    }\n\n    const merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff)\n    if (!merged) {\n      pendingDiffs.splice(idx, 1)\n      updatePlaceholderVisibility()\n      return\n    }\n\n    pendingDiffs[idx] = {\n      ...pendingDiffs[idx],\n      diff: merged,\n    }\n  }\n\n  const scheduleAction = (\n    run: () => void,\n    { at }: { at?: Point | Range } = {}\n  ): void => {\n    insertPositionHint = false\n    debug('scheduleAction', { at, run })\n\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n    scheduleOnDOMSelectionChange.cancel()\n    onDOMSelectionChange.cancel()\n\n    if (hasPendingAction()) {\n      flush()\n    }\n\n    EDITOR_TO_PENDING_ACTION.set(editor, { at, run })\n\n    // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n    actionTimeoutId = setTimeout(flush)\n  }\n\n  const handleDOMBeforeInput = (event: InputEvent): void => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { inputType: type } = event\n    let targetRange: Range | null = null\n    const data = (event as any).dataTransfer || event.data || undefined\n\n    if (\n      insertPositionHint !== false &&\n      type !== 'insertText' &&\n      type !== 'insertCompositionText'\n    ) {\n      insertPositionHint = false\n    }\n\n    let [nativeTargetRange] = (event as any).getTargetRanges()\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n    const window = ReactEditor.getWindow(editor)\n    const domSelection = window.getSelection()\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    targetRange = targetRange ?? editor.selection\n    if (!targetRange) {\n      return\n    }\n\n    if (Range.isExpanded(targetRange) && type.startsWith('delete')) {\n      const [start, end] = Range.edges(targetRange)\n      const leaf = Node.leaf(editor, start.path)\n\n      if (leaf.text.length === start.offset && end.offset === 0) {\n        const next = Editor.next(editor, { at: start.path, match: Text.isText })\n        if (next && Path.equals(next[1], end.path)) {\n          targetRange = { anchor: end, focus: end }\n        }\n      }\n    }\n\n    if (Range.isExpanded(targetRange) && type.startsWith('delete')) {\n      if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n        const [start, end] = Range.edges(targetRange)\n        return storeDiff(targetRange.anchor.path, {\n          text: '',\n          end: end.offset,\n          start: start.offset,\n        })\n      }\n\n      const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n      return scheduleAction(\n        () => Editor.deleteFragment(editor, { direction }),\n        { at: targetRange }\n      )\n    }\n\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag': {\n        return scheduleAction(() => Editor.deleteFragment(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContent':\n      case 'deleteContentForward': {\n        const { anchor } = targetRange\n        if (Range.isCollapsed(targetRange)) {\n          const targetNode = Node.leaf(editor, anchor.path)\n\n          if (anchor.offset < targetNode.text.length) {\n            return storeDiff(anchor.path, {\n              text: '',\n              start: anchor.offset,\n              end: anchor.offset + 1,\n            })\n          }\n        }\n\n        return scheduleAction(() => Editor.deleteForward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContentBackward': {\n        const { anchor } = targetRange\n\n        // If we have a mismatch between the native and slate selection being collapsed\n        // we are most likely deleting a zero-width placeholder and thus should perform it\n        // as an action to ensure correct behavior (mostly happens with mark placeholders)\n        const nativeCollapsed = isDOMSelection(nativeTargetRange)\n          ? nativeTargetRange.isCollapsed\n          : !!nativeTargetRange?.collapsed\n\n        if (\n          nativeCollapsed &&\n          Range.isCollapsed(targetRange) &&\n          anchor.offset > 0\n        ) {\n          return storeDiff(anchor.path, {\n            text: '',\n            start: anchor.offset - 1,\n            end: anchor.offset,\n          })\n        }\n\n        return scheduleAction(() => Editor.deleteBackward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteEntireSoftLine': {\n        return scheduleAction(\n          () => {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n          },\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'insertLineBreak': {\n        return scheduleAction(() => Editor.insertSoftBreak(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'insertParagraph': {\n        return scheduleAction(() => Editor.insertBreak(editor), {\n          at: targetRange,\n        })\n      }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        if (data?.constructor.name === 'DataTransfer') {\n          return scheduleAction(() => ReactEditor.insertData(editor, data), {\n            at: targetRange,\n          })\n        }\n\n        if (typeof data === 'string' && data.includes('\\n')) {\n          return scheduleAction(() => Editor.insertSoftBreak(editor), {\n            at: Range.end(targetRange),\n          })\n        }\n\n        let text = data ?? ''\n\n        // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n        // the placeholder itself and thus includes the zero-width space inside edit events.\n        if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n          text = text.replace('\\uFEFF', '')\n        }\n\n        if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          const [start, end] = Range.edges(targetRange)\n\n          const diff = {\n            start: start.offset,\n            end: end.offset,\n            text,\n          }\n\n          // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n          // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n          // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n          // text events are fired with the correct target ranges, only the final 'insertComposition'\n          // isn't, so we can adjust the target range start offset if we are confident this is the\n          // swiftkey insert causing the issue.\n          if (text && insertPositionHint && type === 'insertCompositionText') {\n            const hintPosition =\n              insertPositionHint.start + insertPositionHint.text.search(/\\S|$/)\n            const diffPosition = diff.start + diff.text.search(/\\S|$/)\n\n            if (\n              diffPosition === hintPosition + 1 &&\n              diff.end ===\n                insertPositionHint.start + insertPositionHint.text.length\n            ) {\n              debug('adjusting swiftKey insert position using hint')\n              diff.start -= 1\n              insertPositionHint = null\n              scheduleFlush()\n            } else {\n              insertPositionHint = false\n            }\n          } else if (type === 'insertText') {\n            if (insertPositionHint === null) {\n              insertPositionHint = diff\n            } else if (\n              insertPositionHint &&\n              Range.isCollapsed(targetRange) &&\n              insertPositionHint.end + insertPositionHint.text.length ===\n                start.offset\n            ) {\n              insertPositionHint = {\n                ...insertPositionHint,\n                text: insertPositionHint.text + text,\n              }\n            } else {\n              insertPositionHint = false\n            }\n          } else {\n            insertPositionHint = false\n          }\n\n          storeDiff(start.path, diff)\n          return\n        }\n\n        return scheduleAction(() => Editor.insertText(editor, text), {\n          at: targetRange,\n        })\n      }\n    }\n  }\n\n  const hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor)\n  }\n\n  const hasPendingDiffs = () => {\n    return !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n  }\n\n  const hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs()\n  }\n\n  const isFlushing = () => {\n    return flushing\n  }\n\n  const handleUserSelect = (range: Range | null) => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range)\n\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { selection } = editor\n    if (!range) {\n      return\n    }\n\n    const pathChanged =\n      !selection || !Path.equals(selection.anchor.path, range.anchor.path)\n    const parentPathChanged =\n      !selection ||\n      !Path.equals(\n        selection.anchor.path.slice(0, -1),\n        range.anchor.path.slice(0, -1)\n      )\n\n    if ((pathChanged && insertPositionHint) || parentPathChanged) {\n      insertPositionHint = false\n    }\n\n    if (pathChanged || !hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY)\n    }\n  }\n\n  const handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      debug('flush input')\n      flush()\n    }\n  }\n\n  const handleKeyDown = (_: React.KeyboardEvent) => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true)\n      setTimeout(updatePlaceholderVisibility)\n    }\n  }\n\n  const scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush)\n    }\n  }\n\n  const handleDomMutations = (mutations: MutationRecord[]) => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return\n    }\n\n    if (\n      mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))\n    ) {\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      EDITOR_TO_FORCE_RENDER.get(editor)?.()\n    }\n  }\n\n  return {\n    flush,\n    scheduleFlush,\n\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n\n    isFlushing,\n\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n\n    handleDomMutations,\n    handleInput,\n  }\n}\n", "import { useEffect, useRef } from 'react'\n\nexport function useIsMounted() {\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n    }\n  }, [])\n\n  return isMountedRef.current\n}\n", "import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\nimport { isDOMElement } from '../utils/dom'\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    mutationObserver.observe(node.current, options)\n    return () => mutationObserver.disconnect()\n  }, [])\n}\n", "import { RefObject, useState } from 'react'\nimport { useSlateStatic } from '../use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport { EDITOR_TO_SCHEDULE_FLUSH } from '../../utils/weak-maps'\nimport {\n  createAndroidInputManager,\n  CreateAndroidInputManagerOptions,\n} from './android-input-manager'\nimport { useIsMounted } from '../use-is-mounted'\nimport { useMutationObserver } from '../use-mutation-observer'\n\ntype UseAndroidInputManagerOptions = {\n  node: RefObject<HTMLElement>\n} & Omit<\n  CreateAndroidInputManagerOptions,\n  'editor' | 'onUserInput' | 'receivedUserInput'\n>\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n}\n\nexport function useAndroidInputManager({\n  node,\n  ...options\n}: UseAndroidInputManagerOptions) {\n  if (!IS_ANDROID) {\n    return null\n  }\n\n  const editor = useSlateStatic()\n  const isMounted = useIsMounted()\n\n  const [inputManager] = useState(() =>\n    createAndroidInputManager({\n      editor,\n      ...options,\n    })\n  )\n\n  useMutationObserver(\n    node,\n    inputManager.handleDomMutations,\n    MUTATION_OBSERVER_CONFIG\n  )\n\n  EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush)\n  if (isMounted) {\n    inputManager.flush()\n  }\n\n  return inputManager\n}\n", "import { useCallback, useRef, useEffect } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameIdRef = useRef<number>(0)\n\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return\n    }\n\n    receivedUserInput.current = true\n\n    const window = ReactEditor.getWindow(editor)\n    window.cancelAnimationFrame(animationFrameIdRef.current)\n\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false\n    })\n  }, [])\n\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), [])\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n", "import getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {\n  Editor,\n  Element,\n  Node,\n  NodeEntry,\n  Path,\n  Range,\n  Text,\n  Transforms,\n} from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\nimport useChildren from '../hooks/use-children'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { TRIPLE_CLICK } from '../utils/constants'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMRange,\n  DOMText,\n  getDefaultView,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from '../utils/dom'\nimport {\n  CAN_USE_DOM,\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_ANDROID,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_IOS,\n  IS_SAFARI,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n} from '../utils/environment'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_STYLE_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  MARK_PLACEHOLDER_SYMBOL,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from '../utils/weak-maps'\nimport { RestoreDOM } from './restore-dom/restore-dom'\nimport { useAndroidInputManager } from '../hooks/android-input-manager/use-android-input-manager'\nimport { useTrackUserInput } from '../hooks/use-track-user-input'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n// The number of Editable components currently mounted.\nlet mountedCount = 0\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => <DefaultPlaceholder {...props} />,\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n  const deferredOperations = useRef<DeferredOperation[]>([])\n\n  const { onUserInput, receivedUserInput } = useTrackUserInput()\n\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  EDITOR_TO_FORCE_RENDER.set(editor, forceRender)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isDraggingInternally: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n      hasMarkPlaceholder: false,\n    }),\n    []\n  )\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      if (\n        (IS_ANDROID || !ReactEditor.isComposing(editor)) &&\n        (!state.isUpdatingSelection || androidInputManager?.isFlushing()) &&\n        !state.isDraggingInternally\n      ) {\n        const root = ReactEditor.findDocumentOrShadowRoot(editor)\n        const { activeElement } = root\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const domSelection = root.getSelection()\n\n        if (activeElement === el) {\n          state.latestElement = activeElement\n          IS_FOCUSED.set(editor, true)\n        } else {\n          IS_FOCUSED.delete(editor)\n        }\n\n        if (!domSelection) {\n          return Transforms.deselect(editor)\n        }\n\n        const { anchorNode, focusNode } = domSelection\n\n        const anchorNodeSelectable =\n          ReactEditor.hasEditableTarget(editor, anchorNode) ||\n          ReactEditor.isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n        const focusNodeSelectable =\n          ReactEditor.hasEditableTarget(editor, focusNode) ||\n          ReactEditor.isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n        if (anchorNodeSelectable && focusNodeSelectable) {\n          const range = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: false,\n            suppressThrow: true,\n          })\n\n          if (range) {\n            if (\n              !ReactEditor.isComposing(editor) &&\n              !androidInputManager?.hasPendingChanges() &&\n              !androidInputManager?.isFlushing()\n            ) {\n              Transforms.select(editor, range)\n            } else {\n              androidInputManager?.handleUserSelect(range)\n            }\n          }\n        }\n\n        // Deselect the editor if the dom selection is not selectable in readonly mode\n        if (readOnly && (!anchorNodeSelectable || !focusNodeSelectable)) {\n          Transforms.deselect(editor)\n        }\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  const androidInputManager = useAndroidInputManager({\n    node: ref,\n    onDOMSelectionChange,\n    scheduleOnDOMSelectionChange,\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    // Make sure the DOM selection state is in sync.\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (\n      !domSelection ||\n      !ReactEditor.isFocused(editor) ||\n      androidInputManager?.hasPendingAction()\n    ) {\n      return\n    }\n\n    const setDomSelection = (forceChange?: boolean) => {\n      const hasDomSelection = domSelection.type !== 'None'\n\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return\n      }\n\n      // verify that the dom selection is in the editor\n      const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n      let hasDomSelectionInEditor = false\n      if (\n        editorElement.contains(domSelection.anchorNode) &&\n        editorElement.contains(domSelection.focusNode)\n      ) {\n        hasDomSelectionInEditor = true\n      }\n\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (\n        hasDomSelection &&\n        hasDomSelectionInEditor &&\n        selection &&\n        !forceChange\n      ) {\n        const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n\n          // domSelection is not necessarily a valid Slate range\n          // (e.g. when clicking on contentEditable:false element)\n          suppressThrow: true,\n        })\n\n        if (slateRange && Range.equals(slateRange, selection)) {\n          if (!state.hasMarkPlaceholder) {\n            return\n          }\n\n          // Ensure selection is inside the mark placeholder\n          const { anchorNode } = domSelection\n          if (\n            anchorNode?.parentElement?.hasAttribute(\n              'data-slate-mark-placeholder'\n            )\n          ) {\n            return\n          }\n        }\n      }\n\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true,\n        })\n        return\n      }\n\n      // Otherwise the DOM selection is out of sync, so update it.\n      state.isUpdatingSelection = true\n\n      const newDomRange: DOMRange | null =\n        selection && ReactEditor.toDOMRange(editor, selection)\n\n      if (newDomRange) {\n        if (Range.isBackward(selection!)) {\n          domSelection.setBaseAndExtent(\n            newDomRange.endContainer,\n            newDomRange.endOffset,\n            newDomRange.startContainer,\n            newDomRange.startOffset\n          )\n        } else {\n          domSelection.setBaseAndExtent(\n            newDomRange.startContainer,\n            newDomRange.startOffset,\n            newDomRange.endContainer,\n            newDomRange.endOffset\n          )\n        }\n        scrollSelectionIntoView(editor, newDomRange)\n      } else {\n        domSelection.removeAllRanges()\n      }\n\n      return newDomRange\n    }\n\n    const newDomRange = setDomSelection()\n    const ensureSelection = androidInputManager?.isFlushing() === 'action'\n\n    if (!IS_ANDROID || !ensureSelection) {\n      setTimeout(() => {\n        // COMPAT: In Firefox, it's not enough to create a range, you also need\n        // to focus the contenteditable element too. (2016/11/16)\n        if (newDomRange && IS_FIREFOX) {\n          const el = ReactEditor.toDOMNode(editor, editor)\n          el.focus()\n        }\n\n        state.isUpdatingSelection = false\n      })\n      return\n    }\n\n    let timeoutId: ReturnType<typeof setTimeout> | null = null\n    const animationFrameId = requestAnimationFrame(() => {\n      if (ensureSelection) {\n        const ensureDomSelection = (forceChange?: boolean) => {\n          try {\n            const el = ReactEditor.toDOMNode(editor, editor)\n            el.focus()\n\n            setDomSelection(forceChange)\n          } catch (e) {\n            // Ignore, dom and state might be out of sync\n          }\n        }\n\n        // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n        // This essentially would make setting the slate selection during an update meaningless, so we force it\n        // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n        // visible flicker.\n        ensureDomSelection()\n\n        timeoutId = setTimeout(() => {\n          // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n          // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n          // the animation frame to ensure it displays the correct state.\n          ensureDomSelection(true)\n          state.isUpdatingSelection = false\n        })\n      }\n    })\n\n    return () => {\n      cancelAnimationFrame(animationFrameId)\n      if (timeoutId) {\n        clearTimeout(timeoutId)\n      }\n    }\n  })\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      onUserInput()\n\n      if (\n        !readOnly &&\n        ReactEditor.hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n        if (androidInputManager) {\n          return androidInputManager.handleDOMBeforeInput(event)\n        }\n\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n        onDOMSelectionChange.flush()\n\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = (event as any).dataTransfer || event.data || undefined\n\n        const isCompositionChange =\n          type === 'insertCompositionText' || type === 'deleteCompositionText'\n\n        // COMPAT: use composition change events as a hint to where we should insert\n        // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n        if (isCompositionChange && ReactEditor.isComposing(editor)) {\n          return\n        }\n\n        let native = false\n        if (\n          type === 'insertText' &&\n          selection &&\n          Range.isCollapsed(selection) &&\n          // Only use native character insertion for single characters a-z or space for now.\n          // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n          // causes duplicate inserts.\n          event.data &&\n          event.data.length === 1 &&\n          /[a-z ]/i.test(event.data) &&\n          // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n          // When there is an inline element, e.g. a link, and you select\n          // right after it (the start of the next node).\n          selection.anchor.offset !== 0\n        ) {\n          native = true\n\n          // Skip native if there are marks, as\n          // `insertText` will insert a node, not just text.\n          if (editor.marks) {\n            native = false\n          }\n\n          // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n          // Therefore we don't allow native events to insert text at the end of anchor nodes.\n          const { anchor } = selection\n\n          const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n          const anchorNode = node.parentElement?.closest('a')\n\n          const window = ReactEditor.getWindow(editor)\n\n          if (\n            native &&\n            anchorNode &&\n            ReactEditor.hasDOMNode(editor, anchorNode)\n          ) {\n            // Find the last text node inside the anchor.\n            const lastText = window?.document\n              .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n              .lastChild() as DOMText | null\n\n            if (lastText === node && lastText.textContent?.length === offset) {\n              native = false\n            }\n          }\n\n          // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n          // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n          if (\n            native &&\n            node.parentElement &&\n            window?.getComputedStyle(node.parentElement)?.whiteSpace === 'pre'\n          ) {\n            const block = Editor.above(editor, {\n              at: anchor.path,\n              match: n => Editor.isBlock(editor, n),\n            })\n\n            if (block && Node.string(block[0]).includes('\\t')) {\n              native = false\n            }\n          }\n        }\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = (event as any).getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n\n            if (!selection || !Range.equals(selection, range)) {\n              native = false\n\n              const selectionRef =\n                !isCompositionChange &&\n                editor.selection &&\n                Editor.rangeRef(editor, editor.selection)\n\n              Transforms.select(editor, range)\n\n              if (selectionRef) {\n                EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n              }\n            }\n          }\n        }\n\n        // Composition change types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (isCompositionChange) {\n          return\n        }\n\n        if (!native) {\n          event.preventDefault()\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n          Editor.deleteFragment(editor, { direction })\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n            Editor.insertSoftBreak(editor)\n            break\n\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false)\n                IS_COMPOSING.set(editor, false)\n              }\n            }\n\n            // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n            if (data?.constructor.name === 'DataTransfer') {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() =>\n                  Editor.insertText(editor, data)\n                )\n              } else {\n                Editor.insertText(editor, data)\n              }\n            }\n\n            break\n          }\n        }\n\n        // Restore the actual user section if nothing manually set it.\n        const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(editor)\n\n        if (\n          toRestore &&\n          (!editor.selection || !Range.equals(editor.selection, toRestore))\n        ) {\n          Transforms.select(editor, toRestore)\n        }\n      }\n    },\n    [readOnly, propsOnDOMBeforeInput]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  // https://github.com/facebook/react/issues/11211\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n      // @ts-ignore The `beforeinput` event isn't recognized.\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput)\n    }\n\n    return () => {\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n      }\n    }\n  }, [onDOMBeforeInput])\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  const { marks } = editor\n  state.hasMarkPlaceholder = false\n\n  if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n    const { anchor } = editor.selection\n    const leaf = Node.leaf(editor, anchor.path)\n    const { text, ...rest } = leaf\n\n    // While marks isn't a 'complete' text, we can still use loose Text.equals\n    // here which only compares marks anyway.\n    if (!Text.equals(leaf, marks as Text, { loose: true })) {\n      state.hasMarkPlaceholder = true\n\n      const unset = Object.fromEntries(\n        Object.keys(rest).map(mark => [mark, null])\n      )\n\n      decorations.push({\n        [MARK_PLACEHOLDER_SYMBOL]: true,\n        ...unset,\n        ...marks,\n\n        anchor,\n        focus: anchor,\n      })\n    }\n  }\n\n  // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n  // before we receive the composition end event.\n  useEffect(() => {\n    setTimeout(() => {\n      const { selection } = editor\n      if (selection) {\n        const { anchor } = selection\n        const text = Node.leaf(editor, anchor.path)\n\n        // While marks isn't a 'complete' text, we can still use loose Text.equals\n        // here which only compares marks anyway.\n        if (marks && !Text.equals(text, marks as Text, { loose: true })) {\n          EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks)\n          return\n        }\n      }\n\n      EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n    })\n  })\n\n  useEffect(() => {\n    mountedCount++\n\n    if (mountedCount === 1) {\n      // Set global default styles for editors.\n      const defaultStylesElement = document.createElement('style')\n      defaultStylesElement.setAttribute('data-slate-default-styles', 'true')\n      defaultStylesElement.innerHTML =\n        // :where is used to give these rules lower specificity so user stylesheets can override them.\n        `:where([data-slate-editor]) {` +\n        // Allow positioning relative to the editable element.\n        `position: relative;` +\n        // Prevent the default outline styles.\n        `outline: none;` +\n        // Preserve adjacent whitespace and new lines.\n        `white-space: pre-wrap;` +\n        // Allow words to break if they are too long.\n        `word-wrap: break-word;` +\n        `}`\n      document.head.appendChild(defaultStylesElement)\n    }\n\n    return () => {\n      mountedCount--\n\n      if (mountedCount <= 0)\n        document.querySelector('style[data-slate-default-styles]')?.remove()\n    }\n  }, [])\n\n  useEffect(() => {\n    const styleElement = document.createElement('style')\n    document.head.appendChild(styleElement)\n    EDITOR_TO_STYLE_ELEMENT.set(editor, styleElement)\n    return () => {\n      styleElement.remove()\n      EDITOR_TO_STYLE_ELEMENT.delete(editor)\n    }\n  }, [])\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <RestoreDOM node={ref} receivedUserInput={receivedUserInput}>\n          <Component\n            role={readOnly ? undefined : 'textbox'}\n            aria-multiline={readOnly ? undefined : true}\n            {...attributes}\n            // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n            // have to use hacks to make these replacement-based features work.\n            // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n            // mismatch warning app moves to browser. Pass-through consumer props when\n            // not CAN_USE_DOM (SSR) and default to falsy value\n            spellCheck={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.spellCheck\n                : false\n            }\n            autoCorrect={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCorrect\n                : 'false'\n            }\n            autoCapitalize={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCapitalize\n                : 'false'\n            }\n            data-slate-editor\n            data-slate-editor-id={editor.id}\n            data-slate-node=\"value\"\n            // explicitly set this\n            contentEditable={!readOnly}\n            // in some cases, a decoration needs access to the range / selection to decorate a text node,\n            // then you will select the whole text node when you select part the of text\n            // this magic zIndex=\"-1\" will fix it\n            zindex={-1}\n            suppressContentEditableWarning\n            ref={ref}\n            style={style}\n            onBeforeInput={useCallback(\n              (event: React.FormEvent<HTMLDivElement>) => {\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to React's leaky polyfill instead just for it. It\n                // only works for the `insertText` input type.\n                if (\n                  !HAS_BEFORE_INPUT_SUPPORT &&\n                  !readOnly &&\n                  !isEventHandled(event, attributes.onBeforeInput) &&\n                  ReactEditor.hasSelectableTarget(editor, event.target)\n                ) {\n                  event.preventDefault()\n                  if (!ReactEditor.isComposing(editor)) {\n                    const text = (event as any).data as string\n                    Editor.insertText(editor, text)\n                  }\n                }\n              },\n              [readOnly]\n            )}\n            onInput={useCallback((event: React.SyntheticEvent) => {\n              if (androidInputManager) {\n                androidInputManager.handleInput()\n                return\n              }\n\n              // Flush native operations, as native events will have propogated\n              // and we can correctly compare DOM text values in components\n              // to stop rendering, so that browser functions like autocorrect\n              // and spellcheck work as expected.\n              for (const op of deferredOperations.current) {\n                op()\n              }\n              deferredOperations.current = []\n            }, [])}\n            onBlur={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  readOnly ||\n                  state.isUpdatingSelection ||\n                  !ReactEditor.hasSelectableTarget(editor, event.target) ||\n                  isEventHandled(event, attributes.onBlur)\n                ) {\n                  return\n                }\n\n                // COMPAT: If the current `activeElement` is still the previous\n                // one, this is due to the window being blurred when the tab\n                // itself becomes unfocused, so we want to abort early to allow to\n                // editor to stay focused when the tab becomes focused again.\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                if (state.latestElement === root.activeElement) {\n                  return\n                }\n\n                const { relatedTarget } = event\n                const el = ReactEditor.toDOMNode(editor, editor)\n\n                // COMPAT: The event should be ignored if the focus is returning\n                // to the editor from an embedded editable element (eg. an <input>\n                // element inside a void node).\n                if (relatedTarget === el) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving from\n                // the editor to inside a void node's spacer element.\n                if (\n                  isDOMElement(relatedTarget) &&\n                  relatedTarget.hasAttribute('data-slate-spacer')\n                ) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving to a\n                // non- editable section of an element that isn't a void node (eg.\n                // a list item of the check list example).\n                if (\n                  relatedTarget != null &&\n                  isDOMNode(relatedTarget) &&\n                  ReactEditor.hasDOMNode(editor, relatedTarget)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                  if (Element.isElement(node) && !editor.isVoid(node)) {\n                    return\n                  }\n                }\n\n                // COMPAT: Safari doesn't always remove the selection even if the content-\n                // editable element no longer has focus. Refer to:\n                // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n                if (IS_SAFARI) {\n                  const domSelection = root.getSelection()\n                  domSelection?.removeAllRanges()\n                }\n\n                IS_FOCUSED.delete(editor)\n              },\n              [readOnly, attributes.onBlur]\n            )}\n            onClick={useCallback(\n              (event: React.MouseEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onClick) &&\n                  isDOMNode(event.target)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n\n                  // At this time, the Slate document may be arbitrarily different,\n                  // because onClick handlers can change the document before we get here.\n                  // Therefore we must check that this path actually exists,\n                  // and that it still refers to the same node.\n                  if (\n                    !Editor.hasPath(editor, path) ||\n                    Node.get(editor, path) !== node\n                  ) {\n                    return\n                  }\n\n                  if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                    let blockPath = path\n                    if (!Editor.isBlock(editor, node)) {\n                      const block = Editor.above(editor, {\n                        match: n => Editor.isBlock(editor, n),\n                        at: path,\n                      })\n\n                      blockPath = block?.[1] ?? path.slice(0, 1)\n                    }\n\n                    const range = Editor.range(editor, blockPath)\n                    Transforms.select(editor, range)\n                    return\n                  }\n\n                  if (readOnly) {\n                    return\n                  }\n\n                  const start = Editor.start(editor, path)\n                  const end = Editor.end(editor, path)\n                  const startVoid = Editor.void(editor, { at: start })\n                  const endVoid = Editor.void(editor, { at: end })\n\n                  if (\n                    startVoid &&\n                    endVoid &&\n                    Path.equals(startVoid[1], endVoid[1])\n                  ) {\n                    const range = Editor.range(editor, start)\n                    Transforms.select(editor, range)\n                  }\n                }\n              },\n              [readOnly, attributes.onClick]\n            )}\n            onCompositionEnd={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                  if (ReactEditor.isComposing(editor)) {\n                    setIsComposing(false)\n                    IS_COMPOSING.set(editor, false)\n                  }\n\n                  androidInputManager?.handleCompositionEnd(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionEnd) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  // COMPAT: In Chrome, `beforeinput` events for compositions\n                  // aren't correct and never fire the \"insertFromComposition\"\n                  // type that we need. So instead, insert whenever a composition\n                  // ends since it will already have been committed to the DOM.\n                  if (\n                    !IS_SAFARI &&\n                    !IS_FIREFOX_LEGACY &&\n                    !IS_IOS &&\n                    !IS_WECHATBROWSER &&\n                    !IS_UC_MOBILE &&\n                    event.data\n                  ) {\n                    const placeholderMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(\n                      editor\n                    )\n                    EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n\n                    // Ensure we insert text with the marks the user was actually seeing\n                    if (placeholderMarks !== undefined) {\n                      EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n                      editor.marks = placeholderMarks\n                    }\n\n                    Editor.insertText(editor, event.data)\n\n                    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n                    EDITOR_TO_USER_MARKS.delete(editor)\n                    if (userMarks !== undefined) {\n                      editor.marks = userMarks\n                    }\n                  }\n                }\n              },\n              [attributes.onCompositionEnd]\n            )}\n            onCompositionUpdate={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCompositionUpdate)\n                ) {\n                  if (!ReactEditor.isComposing(editor)) {\n                    setIsComposing(true)\n                    IS_COMPOSING.set(editor, true)\n                  }\n                }\n              },\n              [attributes.onCompositionUpdate]\n            )}\n            onCompositionStart={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                  androidInputManager?.handleCompositionStart(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionStart) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  setIsComposing(true)\n\n                  const { selection } = editor\n                  if (selection) {\n                    if (Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor)\n                      return\n                    }\n                    const inline = Editor.above(editor, {\n                      match: n => Editor.isInline(editor, n),\n                      mode: 'highest',\n                    })\n                    if (inline) {\n                      const [, inlinePath] = inline\n                      if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n                        const point = Editor.after(editor, inlinePath)!\n                        Transforms.setSelection(editor, {\n                          anchor: point,\n                          focus: point,\n                        })\n                      }\n                    }\n                  }\n                }\n              },\n              [attributes.onCompositionStart]\n            )}\n            onCopy={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCopy)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'copy'\n                  )\n                }\n              },\n              [attributes.onCopy]\n            )}\n            onCut={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCut)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'cut'\n                  )\n                  const { selection } = editor\n\n                  if (selection) {\n                    if (Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor)\n                    } else {\n                      const node = Node.parent(editor, selection.anchor.path)\n                      if (Editor.isVoid(editor, node)) {\n                        Transforms.delete(editor)\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, attributes.onCut]\n            )}\n            onDragOver={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragOver)\n                ) {\n                  // Only when the target is void, call `preventDefault` to signal\n                  // that drops are allowed. Editable content is droppable by\n                  // default, and calling `preventDefault` hides the cursor.\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n\n                  if (Editor.isVoid(editor, node)) {\n                    event.preventDefault()\n                  }\n                }\n              },\n              [attributes.onDragOver]\n            )}\n            onDragStart={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragStart)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n                  const voidMatch =\n                    Editor.isVoid(editor, node) ||\n                    Editor.void(editor, { at: path, voids: true })\n\n                  // If starting a drag on a void node, make sure it is selected\n                  // so that it shows up in the selection's fragment.\n                  if (voidMatch) {\n                    const range = Editor.range(editor, path)\n                    Transforms.select(editor, range)\n                  }\n\n                  state.isDraggingInternally = true\n\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.dataTransfer,\n                    'drag'\n                  )\n                }\n              },\n              [readOnly, attributes.onDragStart]\n            )}\n            onDrop={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDrop)\n                ) {\n                  event.preventDefault()\n\n                  // Keep a reference to the dragged range before updating selection\n                  const draggedRange = editor.selection\n\n                  // Find the range where the drop happened\n                  const range = ReactEditor.findEventRange(editor, event)\n                  const data = event.dataTransfer\n\n                  Transforms.select(editor, range)\n\n                  if (state.isDraggingInternally) {\n                    if (\n                      draggedRange &&\n                      !Range.equals(draggedRange, range) &&\n                      !Editor.void(editor, { at: range, voids: true })\n                    ) {\n                      Transforms.delete(editor, {\n                        at: draggedRange,\n                      })\n                    }\n                  }\n\n                  ReactEditor.insertData(editor, data)\n\n                  // When dragging from another source into the editor, it's possible\n                  // that the current editor does not have focus.\n                  if (!ReactEditor.isFocused(editor)) {\n                    ReactEditor.focus(editor)\n                  }\n                }\n\n                state.isDraggingInternally = false\n              },\n              [readOnly, attributes.onDrop]\n            )}\n            onDragEnd={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  state.isDraggingInternally &&\n                  attributes.onDragEnd &&\n                  ReactEditor.hasTarget(editor, event.target)\n                ) {\n                  attributes.onDragEnd(event)\n                }\n\n                // When dropping on a different droppable element than the current editor,\n                // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n                // Note: `onDragEnd` is only called when `onDrop` is not called\n                state.isDraggingInternally = false\n              },\n              [readOnly, attributes.onDragEnd]\n            )}\n            onFocus={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  !state.isUpdatingSelection &&\n                  ReactEditor.hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onFocus)\n                ) {\n                  const el = ReactEditor.toDOMNode(editor, editor)\n                  const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                  state.latestElement = root.activeElement\n\n                  // COMPAT: If the editor has nested editable elements, the focus\n                  // can go to them. In Firefox, this must be prevented because it\n                  // results in issues with keyboard navigation. (2017/03/30)\n                  if (IS_FIREFOX && event.target !== el) {\n                    el.focus()\n                    return\n                  }\n\n                  IS_FOCUSED.set(editor, true)\n                }\n              },\n              [readOnly, attributes.onFocus]\n            )}\n            onKeyDown={useCallback(\n              (event: React.KeyboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasEditableTarget(editor, event.target)\n                ) {\n                  androidInputManager?.handleKeyDown(event)\n\n                  const { nativeEvent } = event\n\n                  // COMPAT: The composition end event isn't fired reliably in all browsers,\n                  // so we sometimes might end up stuck in a composition state even though we\n                  // aren't composing any more.\n                  if (\n                    ReactEditor.isComposing(editor) &&\n                    nativeEvent.isComposing === false\n                  ) {\n                    IS_COMPOSING.set(editor, false)\n                    setIsComposing(false)\n                  }\n\n                  if (\n                    isEventHandled(event, attributes.onKeyDown) ||\n                    ReactEditor.isComposing(editor)\n                  ) {\n                    return\n                  }\n\n                  const { selection } = editor\n                  const element =\n                    editor.children[\n                      selection !== null ? selection.focus.path[0] : 0\n                    ]\n                  const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                  // COMPAT: Since we prevent the default behavior on\n                  // `beforeinput` events, the browser doesn't think there's ever\n                  // any history stack to undo or redo, so we have to manage these\n                  // hotkeys ourselves. (2019/11/06)\n                  if (Hotkeys.isRedo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.redo === 'function') {\n                      maybeHistoryEditor.redo()\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isUndo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.undo === 'function') {\n                      maybeHistoryEditor.undo()\n                    }\n\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't handle the selection updates\n                  // properly. In Chrome, the selection isn't properly extended.\n                  // And in Firefox, the selection isn't properly collapsed.\n                  // (2017/10/17)\n                  if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', reverse: true })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line' })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, {\n                      unit: 'line',\n                      edge: 'focus',\n                      reverse: true,\n                    })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                    return\n                  }\n\n                  // COMPAT: If a void node is selected, or a zero-width text node\n                  // adjacent to an inline is selected, we need to handle these\n                  // hotkeys manually because browsers won't be able to skip over\n                  // the void node with the zero-width space not being an empty\n                  // string.\n                  if (Hotkeys.isMoveBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: !isRTL })\n                    } else {\n                      Transforms.collapse(editor, { edge: 'start' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: isRTL })\n                    } else {\n                      Transforms.collapse(editor, { edge: 'end' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: !isRTL })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: isRTL })\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to guessing at the input intention for hotkeys.\n                  // COMPAT: In iOS, some of these hotkeys are handled in the\n                  if (!HAS_BEFORE_INPUT_SUPPORT) {\n                    // We don't have a core behavior for these, but they change the\n                    // DOM if we don't prevent them, so we have to.\n                    if (\n                      Hotkeys.isBold(nativeEvent) ||\n                      Hotkeys.isItalic(nativeEvent) ||\n                      Hotkeys.isTransposeCharacter(nativeEvent)\n                    ) {\n                      event.preventDefault()\n                      return\n                    }\n\n                    if (Hotkeys.isSoftBreak(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertSoftBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isSplitBlock(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n                  } else {\n                    if (IS_CHROME || IS_SAFARI) {\n                      // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                      // an event when deleting backwards in a selected void inline node\n                      if (\n                        selection &&\n                        (Hotkeys.isDeleteBackward(nativeEvent) ||\n                          Hotkeys.isDeleteForward(nativeEvent)) &&\n                        Range.isCollapsed(selection)\n                      ) {\n                        const currentNode = Node.parent(\n                          editor,\n                          selection.anchor.path\n                        )\n\n                        if (\n                          Element.isElement(currentNode) &&\n                          Editor.isVoid(editor, currentNode) &&\n                          (Editor.isInline(editor, currentNode) ||\n                            Editor.isBlock(editor, currentNode))\n                        ) {\n                          event.preventDefault()\n                          Editor.deleteBackward(editor, { unit: 'block' })\n\n                          return\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, attributes.onKeyDown]\n            )}\n            onPaste={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onPaste)\n                ) {\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to React's `onPaste` here instead.\n                  // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                  // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                  if (\n                    !HAS_BEFORE_INPUT_SUPPORT ||\n                    isPlainTextOnlyPaste(event.nativeEvent)\n                  ) {\n                    event.preventDefault()\n                    ReactEditor.insertData(editor, event.clipboardData)\n                  }\n                }\n              },\n              [readOnly, attributes.onPaste]\n            )}\n          >\n            <Children\n              decorations={decorations}\n              node={editor}\n              renderElement={renderElement}\n              renderPlaceholder={renderPlaceholder}\n              renderLeaf={renderLeaf}\n              selection={editor.selection}\n            />\n          </Component>\n        </RestoreDOM>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefObject<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => (\n  // COMPAT: Artificially add a line-break to the end on the placeholder element\n  // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n  <span {...attributes}>\n    {children}\n    {IS_ANDROID && <br />}\n  </span>\n)\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => Range[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    domRange.getBoundingClientRect &&\n    (!editor.selection ||\n      (editor.selection && Range.isCollapsed(editor.selection)))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n\n    // @ts-expect-error an unorthodox delete D:\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n", "import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n\ntype EditorChangeHandler = (editor: Editor) => void\n/**\n * A React context for sharing the editor selector context in a way to control rerenders\n */\n\nexport const SlateSelectorContext = createContext<{\n  getSlate: () => Editor\n  addEventListener: (callback: EditorChangeHandler) => () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * use redux style selectors to prevent rerendering on every keystroke.\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\n *\n * Example:\n * ```\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\n * ```\n */\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T, b: T) => boolean = refEquality\n) {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { getSlate, addEventListener } = context\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<(editor: Editor) => T>(() => null as any)\n  const latestSelectedState = useRef<T>((null as any) as T)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      selectedState = selector(getSlate())\n    } else {\n      selectedState = latestSelectedState.current\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector\n    latestSelectedState.current = selectedState\n    latestSubscriptionCallbackError.current = undefined\n  })\n\n  useIsomorphicLayoutEffect(\n    () => {\n      function checkForUpdates() {\n        try {\n          const newSelectedState = latestSelector.current(getSlate())\n\n          if (equalityFn(newSelectedState, latestSelectedState.current)) {\n            return\n          }\n\n          latestSelectedState.current = newSelectedState\n        } catch (err) {\n          // we ignore all errors here, since when the component\n          // is re-rendered, the selectors are called again, and\n          // will throw again, if neither props nor store state\n          // changed\n          latestSubscriptionCallbackError.current = err\n        }\n\n        forceRender()\n      }\n\n      const unsubscribe = addEventListener(checkForUpdates)\n\n      checkForUpdates()\n\n      return () => unsubscribe()\n    },\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    [addEventListener, getSlate]\n  )\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function getSelectorContext(editor: Editor) {\n  const eventListeners = useRef<EditorChangeHandler[]>([]).current\n  const slateRef = useRef<{\n    editor: Editor\n  }>({\n    editor,\n  }).current\n  const onChange = useCallback((editor: Editor) => {\n    slateRef.editor = editor\n    eventListeners.forEach((listener: EditorChangeHandler) => listener(editor))\n  }, [])\n\n  const selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: (callback: EditorChangeHandler) => {\n        eventListeners.push(callback)\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1)\n        }\n      },\n    }\n  }, [eventListeners, slateRef])\n  return { selectorContext, onChange }\n}\n", "import React, { useState, useCallback, useEffect, useRef } from 'react'\nimport { Editor, Node, Descendant, Scrubber } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { SlateContext, SlateContextValue } from '../hooks/use-slate'\nimport {\n  getSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\nimport { IS_REACT_VERSION_17_OR_ABOVE } from '../utils/environment'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  value: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n}) => {\n  const { editor, children, onChange, value, ...rest } = props\n  const unmountRef = useRef(false)\n\n  const [context, setContext] = React.useState<SlateContextValue>(() => {\n    if (!Node.isNodeList(value)) {\n      throw new Error(\n        `[Slate] value is invalid! Expected a list of elements but got: ${Scrubber.stringify(\n          value\n        )}`\n      )\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! You passed: ${Scrubber.stringify(editor)}`\n      )\n    }\n    editor.children = value\n    Object.assign(editor, rest)\n    return { v: 0, editor }\n  })\n\n  const {\n    selectorContext,\n    onChange: handleSelectorChange,\n  } = getSelectorContext(editor)\n\n  const onContextChange = useCallback(() => {\n    if (onChange) {\n      onChange(editor.children)\n    }\n\n    setContext(prevContext => ({\n      v: prevContext.v + 1,\n      editor,\n    }))\n    handleSelectorChange(editor)\n  }, [onChange])\n\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n  useEffect(() => {\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n      unmountRef.current = true\n    }\n  }, [])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (IS_REACT_VERSION_17_OR_ABOVE) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <SlateContext.Provider value={context}>\n        <EditorContext.Provider value={context.editor}>\n          <FocusedContext.Provider value={isFocused}>\n            {children}\n          </FocusedContext.Provider>\n        </EditorContext.Provider>\n      </SlateContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n", "import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n", "import { BaseSelection, Range } from 'slate'\n\nimport { useSlateSelector } from './use-slate-selector'\n\n/**\n * Get the current slate selection.\n * Only triggers a rerender when the selection actually changes\n */\nexport const useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual)\n}\n\nconst isSelectionEqual = (a: BaseSelection, b: BaseSelection) => {\n  if (!a && !b) return true\n  if (!a || !b) return false\n  return Range.equals(a, b)\n}\n", "/**\n * Utilities for single-line deletion\n */\n\nimport { Range, Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (\n  editor: ReactEditor,\n  range1: Range,\n  range2: Range\n) => {\n  const rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: ReactEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n", "import ReactDOM from 'react-dom'\nimport {\n  BaseEditor,\n  Editor,\n  Node,\n  Operation,\n  Path,\n  Point,\n  Range,\n  Transforms,\n} from 'slate'\nimport {\n  TextDiff,\n  transformPendingPoint,\n  transformPendingRange,\n  transformTextDiff,\n} from '../utils/diff-text'\nimport {\n  getPlainText,\n  getSlateFragmentAttribute,\n  isDOMText,\n} from '../utils/dom'\nimport { Key } from '../utils/key'\nimport { findCurrentLineRange } from '../utils/lines'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  NODE_TO_KEY,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n} from '../utils/weak-maps'\nimport { ReactEditor } from './react-editor'\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withReact = <T extends BaseEditor>(editor: T): T & ReactEditor => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange, deleteBackward, addMark, removeMark } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.addMark = (key, value) => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(e)?.()\n\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    addMark(key, value)\n  }\n\n  e.removeMark = key => {\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    removeMark(key)\n  }\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (e.selection && Range.isCollapsed(e.selection)) {\n      const parentBlockEntry = Editor.above(e, {\n        match: n => Editor.isBlock(e, n),\n        at: e.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          e,\n          parentBlockPath,\n          e.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(e, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(e)\n    if (pendingDiffs?.length) {\n      const transformed = pendingDiffs\n        .map(textDiff => transformTextDiff(textDiff, op))\n        .filter(Boolean) as TextDiff[]\n\n      EDITOR_TO_PENDING_DIFFS.set(e, transformed)\n    }\n\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(e)\n    if (pendingSelection) {\n      EDITOR_TO_PENDING_SELECTION.set(\n        e,\n        transformPendingRange(e, pendingSelection, op)\n      )\n    }\n\n    const pendingAction = EDITOR_TO_PENDING_ACTION.get(e)\n    if (pendingAction?.at) {\n      const at = Point.isPoint(pendingAction?.at)\n        ? transformPendingPoint(e, pendingAction.at, op)\n        : transformPendingRange(e, pendingAction.at, op)\n\n      EDITOR_TO_PENDING_ACTION.set(e, at ? { ...pendingAction, at } : null)\n    }\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node': {\n        matches.push(...getMatches(e, op.path))\n        break\n      }\n\n      case 'set_selection': {\n        // Selection was manually set, don't restore the user selection after the change.\n        EDITOR_TO_USER_SELECTION.get(e)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(e)\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node': {\n        matches.push(...getMatches(e, Path.parent(op.path)))\n        break\n      }\n\n      case 'merge_node': {\n        const prevPath = Path.previous(op.path)\n        matches.push(...getMatches(e, prevPath))\n        break\n      }\n\n      case 'move_node': {\n        const commonPath = Path.common(\n          Path.parent(op.path),\n          Path.parent(op.newPath)\n        )\n        matches.push(...getMatches(e, commonPath))\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = attach.ownerDocument.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData('application/x-slate-fragment', encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = contents.ownerDocument.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    contents.ownerDocument.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    contents.ownerDocument.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data)\n    }\n  }\n\n  e.insertFragmentData = (data: DataTransfer): boolean => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment =\n      data.getData('application/x-slate-fragment') ||\n      getSlateFragmentAttribute(data)\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return true\n    }\n    return false\n  }\n\n  e.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n      return true\n    }\n    return false\n  }\n\n  e.onChange = () => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange()\n      }\n\n      onChange()\n    })\n  }\n\n  return e\n}\n\nconst getMatches = (e: Editor, path: Path) => {\n  const matches: [Path, Key][] = []\n  for (const [n, p] of Editor.levels(e, { at: path })) {\n    const key = ReactEditor.findKey(e, n)\n    matches.push([p, key])\n  }\n  return matches\n}\n"],
  "mappings": "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",
  "names": ["check", "e", "isKeyHotkey", "isElement", "el", "nodeType", "canOverflow", "overflow", "skipOverflowHiddenElements", "isScrollable", "clientHeight", "scrollHeight", "clientWidth", "scrollWidth", "style", "getComputedStyle", "overflowY", "overflowX", "frame", "ownerDocument", "defaultView", "frameElement", "e", "alignNearest", "scrollingEdgeStart", "scrollingEdgeEnd", "scrollingSize", "scrollingBorderStart", "scrollingBorderEnd", "elementEdgeStart", "elementEdgeEnd", "elementSize", "target", "options", "windowWithViewport", "window", "scrollMode", "block", "inline", "boundary", "checkBoundary", "node", "TypeError", "scrollingElement", "document", "documentElement", "frames", "cursor", "parentElement", "push", "body", "viewportWidth", "visualViewport", "width", "innerWidth", "viewportHeight", "height", "innerHeight", "viewportX", "scrollX", "pageXOffset", "viewportY", "scrollY", "pageYOffset", "getBoundingClientRect", "targetHeight", "targetWidth", "targetTop", "top", "targetRight", "right", "targetBottom", "bottom", "targetLeft", "left", "targetBlock", "targetInline", "computations", "index", "length", "frameStyle", "borderLeft", "parseInt", "borderLeftWidth", "borderTop", "borderTopWidth", "borderRight", "borderRightWidth", "borderBottom", "borderBottomWidth", "blockScroll", "inlineScroll", "scrollbarWidth", "offsetWidth", "scrollbarHeight", "offsetHeight", "Math", "max", "scrollLeft", "scrollTop", "min", "objectWithoutPropertiesLoose", "n", "Key", "constructor", "id", "NODE_TO_INDEX", "WeakMap", "NODE_TO_PARENT", "EDITOR_TO_WINDOW", "EDITOR_TO_ELEMENT", "EDITOR_TO_PLACEHOLDER_ELEMENT", "ELEMENT_TO_NODE", "NODE_TO_ELEMENT", "NODE_TO_KEY", "EDITOR_TO_KEY_TO_ELEMENT", "EDITOR_TO_STYLE_ELEMENT", "IS_READ_ONLY", "IS_FOCUSED", "IS_COMPOSING", "EDITOR_TO_USER_SELECTION", "EDITOR_TO_ON_CHANGE", "EDITOR_TO_SCHEDULE_FLUSH", "EDITOR_TO_PENDING_INSERTION_MARKS", "EDITOR_TO_USER_MARKS", "EDITOR_TO_PENDING_DIFFS", "EDITOR_TO_PENDING_ACTION", "EDITOR_TO_PENDING_SELECTION", "EDITOR_TO_FORCE_RENDER", "PLACEHOLDER_SYMBOL", "Symbol", "MARK_PLACEHOLDER_SYMBOL", "DOMText", "globalThis", "Text", "getDefaultView", "value", "ownerDocument", "defaultView", "isDOMComment", "isDOMNode", "nodeType", "isDOMElement", "window", "Node", "isDOMSelection", "anchorNode", "Selection", "isDOMText", "isPlainTextOnlyPaste", "event", "clipboardData", "getData", "types", "length", "normalizeDOMPoint", "domPoint", "node", "offset", "childNodes", "isLast", "index", "getEditableChildAndIndex", "i", "getEditableChild", "textContent", "hasShadowRoot", "parent", "parentNode", "toString", "direction", "child", "triedForward", "triedBackward", "getAttribute", "getPlainText", "domNode", "text", "nodeValue", "childNode", "Array", "from", "display", "getComputedStyle", "getPropertyValue", "tagName", "catchSlateFragment", "getSlateFragmentAttribute", "dataTransfer", "htmlData", "fragment", "match", "isTrackedMutation", "editor", "mutation", "batch", "target", "matches", "document", "ReactEditor", "getWindow", "contains", "hasDOMNode", "editable", "parentMutation", "find", "addedNodes", "removedNodes", "IS_REACT_VERSION_17_OR_ABOVE", "parseInt", "React", "version", "split", "IS_IOS", "navigator", "test", "userAgent", "MSStream", "IS_APPLE", "IS_ANDROID", "IS_FIREFOX", "IS_SAFARI", "IS_EDGE_LEGACY", "IS_CHROME", "IS_CHROME_LEGACY", "IS_FIREFOX_LEGACY", "IS_UC_MOBILE", "IS_WECHATBROWSER", "CAN_USE_DOM", "createElement", "HAS_BEFORE_INPUT_SUPPORT", "InputEvent", "prototype", "getTargetRanges", "isComposing", "get", "Error", "findKey", "key", "set", "findPath", "path", "Editor", "isEditor", "unshift", "Scrubber", "stringify", "findDocumentOrShadowRoot", "el", "toDOMNode", "root", "getRootNode", "Document", "ShadowRoot", "getSelection", "isFocused", "isReadOnly", "blur", "activeElement", "focus", "preventScroll", "deselect", "selection", "domSelection", "rangeCount", "removeAllRanges", "Transforms", "options", "editorEl", "targetEl", "parentElement", "err", "message", "includes", "closest", "isContentEditable", "insertData", "data", "insertFragmentData", "insertTextData", "setFragmentData", "originEvent", "KEY_TO_ELEMENT", "toDOMPoint", "point", "void", "at", "selector", "texts", "querySelectorAll", "start", "attr", "trueLength", "end", "nextText", "hasAttribute", "domText", "startsWith", "Math", "min", "max", "toDOMRange", "range", "anchor", "isBackward", "Range", "domAnchor", "domFocus", "isCollapsed", "domRange", "createRange", "startNode", "startOffset", "endNode", "endOffset", "startEl", "isStartAtZeroWidth", "endEl", "isEndAtZeroWidth", "setStart", "setEnd", "toSlateNode", "domEl", "findEventRange", "nativeEvent", "clientX", "x", "clientY", "y", "isVoid", "rect", "getBoundingClientRect", "isPrev", "isInline", "left", "width", "top", "height", "edge", "before", "after", "caretRangeFromPoint", "position", "caretPositionFromPoint", "offsetNode", "toSlateRange", "exactMatch", "suppressThrow", "toSlatePoint", "nearestNode", "nearestOffset", "textNode", "potentialVoidNode", "voidNode", "leafNode", "contents", "cloneContents", "removals", "slice", "call", "forEach", "textContext", "removeChild", "leafNodes", "current", "endsWith", "slateNode", "querySelector", "startContainer", "anchorOffset", "focusNode", "focusOffset", "endContainer", "collapsed", "isExpanded", "isForward", "mode", "unhangRange", "voids", "hasRange", "hasPath", "hasTarget", "hasEditableTarget", "hasSelectableTarget", "isTargetInsideNonReadonlyVoid", "androidScheduleFlush", "androidPendingDiffs", "useIsomorphicLayoutEffect", "useLayoutEffect", "useEffect", "shallowCompare", "obj1", "obj2", "Object", "keys", "every", "hasOwnProperty", "isDecoratorRangeListEqual", "list", "another", "other", "rangeOwnProps", "otherOwnProps", "equals", "String", "props", "leaf", "useSlateStatic", "parentPath", "Path", "isMarkPlaceholder", "ZeroWidthString", "string", "children", "isLineBreak", "TextString", "isTrailing", "ref", "useRef", "getTextContent", "textWithTrailing", "attributes", "EditorContext", "createContext", "useContext", "Leaf", "renderPlaceholder", "renderLeaf", "DefaultLeaf", "placeholderRef", "placeholderResizeObserver", "disconnect", "placeholderEl", "delete", "observe", "ResizeObserver", "styleElement", "minHeight", "clientHeight", "innerHTML", "placeholderProps", "placeholder", "style", "pointerEvents", "maxWidth", "opacity", "userSelect", "textDecoration", "contentEditable", "Fragment", "MemoizedLeaf", "memo", "prev", "next", "decorations", "leaves", "SlateText", "push", "MemoizedText", "Element", "element", "renderElement", "p", "DefaultElement", "readOnly", "useReadOnly", "useCallback", "useChildren", "hasInlines", "dir", "getDirection", "Tag", "color", "outline", "MemoizedElement", "DecorateContext", "useDecorate", "SelectedContext", "useSelected", "decorate", "isLeafBlock", "isElement", "concat", "sel", "intersection", "ds", "dec", "d", "Provider", "ElementComponent", "TextComponent", "ReadOnlyContext", "SlateContext", "useSlate", "context", "useSlateWithV", "TRIPLE_CLICK", "HOTKEYS", "bold", "compose", "moveBackward", "moveForward", "moveWordBackward", "moveWordForward", "deleteBackward", "deleteForward", "extendBackward", "extendForward", "italic", "insertSoftBreak", "splitBlock", "undo", "APPLE_HOTKEYS", "moveLineBackward", "moveLineForward", "deleteLineBackward", "deleteLineForward", "deleteWordBackward", "deleteWordForward", "extendLineBackward", "extendLineForward", "redo", "transposeCharacter", "WINDOWS_HOTKEYS", "create", "generic", "apple", "windows", "isGeneric", "isKeyHotkey", "isApple", "isWindows", "isBold", "isCompose", "isMoveBackward", "isMoveForward", "isDeleteBackward", "isDeleteForward", "isDeleteLineBackward", "isDeleteLineForward", "isDeleteWordBackward", "isDeleteWordForward", "isExtendBackward", "isExtendForward", "isExtendLineBackward", "isExtendLineForward", "isItalic", "isMoveLineBackward", "isMoveLineForward", "isMoveWordBackward", "isMoveWordForward", "isRedo", "isSoftBreak", "isSplitBlock", "isTransposeCharacter", "isUndo", "createRestoreDomManager", "receivedUserInput", "bufferedMutations", "clear", "registerMutations", "mutations", "trackedMutations", "filter", "restoreDOM", "reverse", "type", "oldValue", "insertBefore", "nextSibling", "MUTATION_OBSERVER_CONFIG", "subtree", "childList", "characterData", "characterDataOldValue", "RestoreDOMComponent", "Component", "mutationObserver", "componentDidMount", "manager", "MutationObserver", "getSnapshotBeforeUpdate", "pendingMutations", "takeRecords", "componentDidUpdate", "componentWillUnmount", "render", "RestoreDOM", "verifyDiffState", "textDiff", "diff", "isText", "nextPath", "nextNode", "applyStringDiff", "diffs", "reduce", "longestCommonPrefixLength", "str", "charAt", "longestCommonSuffixLength", "normalizeStringDiff", "targetText", "removedText", "prefixLength", "suffixLength", "normalized", "mergeStringDiffs", "a", "b", "overlap", "applied", "sliceEnd", "targetRange", "normalizePoint", "parentBlock", "above", "isBlock", "entry", "isDescendant", "normalizeRange", "transformPendingPoint", "op", "pendingDiffs", "Point", "transform", "affinity", "transformed", "transformPendingRange", "transformTextDiff", "newPath", "RESOLVE_DELAY", "FLUSH_DELAY", "debug", "createAndroidInputManager", "scheduleOnDOMSelectionChange", "onDOMSelectionChange", "flushing", "compositionEndTimeoutId", "flushTimeoutId", "actionTimeoutId", "idCounter", "insertPositionHint", "applyPendingSelection", "pendingSelection", "select", "performAction", "action", "isPoint", "run", "flush", "clearTimeout", "hasPendingDiffs", "hasPendingAction", "setTimeout", "selectionRef", "rangeRef", "marks", "scheduleSelectionChange", "pendingMarks", "undefined", "insertText", "deleteFragment", "cancel", "unref", "userMarks", "onChange", "handleCompositionEnd", "_event", "handleCompositionStart", "updatePlaceholderVisibility", "forceHide", "placeholderElement", "removeProperty", "storeDiff", "idx", "findIndex", "change", "merged", "splice", "scheduleAction", "handleDOMBeforeInput", "inputType", "nativeTargetRange", "edges", "targetNode", "nativeCollapsed", "unit", "insertBreak", "name", "replace", "hintPosition", "search", "diffPosition", "scheduleFlush", "hasPendingChanges", "isFlushing", "handleUserSelect", "pathChanged", "parentPathChanged", "handleInput", "handleKeyDown", "_", "handleDomMutations", "some", "useIsMounted", "isMountedRef", "useMutationObserver", "callback", "useState", "useAndroidInputManager", "isMounted", "inputManager", "useTrackUserInput", "animationFrameIdRef", "onUserInput", "cancelAnimationFrame", "requestAnimationFrame", "Children", "mountedCount", "Editable", "autoFocus", "defaultDecorate", "onDOMBeforeInput", "propsOnDOMBeforeInput", "DefaultPlaceholder", "scrollSelectionIntoView", "defaultScrollSelectionIntoView", "as", "setIsComposing", "deferredOperations", "forceRender", "useReducer", "s", "state", "useMemo", "isDraggingInternally", "isUpdatingSelection", "latestElement", "hasMarkPlaceholder", "throttle", "androidInputManager", "anchorNodeSelectable", "focusNodeSelectable", "debounce", "setDomSelection", "forceChange", "hasDomSelection", "editorElement", "hasDomSelectionInEditor", "slateRange", "newDomRange", "setBaseAndExtent", "ensureSelection", "timeoutId", "animationFrameId", "ensureDomSelection", "e", "isDOMEventHandled", "isCompositionChange", "native", "lastText", "createTreeWalker", "NodeFilter", "SHOW_TEXT", "lastChild", "whiteSpace", "block", "preventDefault", "toRestore", "addEventListener", "removeEventListener", "rest", "loose", "unset", "fromEntries", "map", "mark", "defaultStylesElement", "setAttribute", "head", "appendChild", "remove", "role", "spellCheck", "autoCorrect", "autoCapitalize", "zindex", "suppressContentEditableWarning", "onBeforeInput", "isEventHandled", "onInput", "onBlur", "relatedTarget", "onClick", "detail", "blockPath", "startVoid", "endVoid", "onCompositionEnd", "placeholderMarks", "onCompositionUpdate", "onCompositionStart", "inline", "inlinePath", "isEnd", "setSelection", "onCopy", "onCut", "onDragOver", "onDragStart", "voidMatch", "onDrop", "draggedRange", "onDragEnd", "onFocus", "onKeyDown", "isRTL", "Hotkeys", "maybeHistoryEditor", "move", "collapse", "currentNode", "onPaste", "leafEl", "bind", "scrollIntoView", "scrollMode", "handler", "shouldTreatEventAsHandled", "isDefaultPrevented", "isPropagationStopped", "defaultPrevented", "FocusedContext", "useFocused", "isError", "error", "SlateSelectorContext", "refEquality", "useSlateSelector", "equalityFn", "getSlate", "latestSubscriptionCallbackError", "latestSelector", "latestSelectedState", "selectedState", "stack", "checkForUpdates", "newSelectedState", "unsubscribe", "getSelectorContext", "eventListeners", "slateRef", "listener", "selectorContext", "indexOf", "Slate", "unmountRef", "setContext", "isNodeList", "assign", "v", "handleSelectorChange", "onContextChange", "prevContext", "setIsFocused", "fn", "useEditor", "useSlateSelection", "isSelectionEqual", "doRectsIntersect", "compareRect", "middle", "bottom", "areRangesSameLine", "range1", "range2", "rect1", "rect2", "findCurrentLineRange", "parentRange", "parentRangeBoundary", "positions", "right", "floor", "withReact", "apply", "addMark", "removeMark", "parentBlockEntry", "parentBlockPath", "parentElementRange", "currentLineRange", "Boolean", "pendingAction", "getMatches", "prevPath", "previous", "commonPath", "common", "attach", "trim", "r", "cloneRange", "setEndAfter", "zw", "isNewline", "span", "getFragment", "JSON", "encoded", "btoa", "encodeURIComponent", "setData", "div", "body", "decoded", "decodeURIComponent", "atob", "parsed", "parse", "insertFragment", "lines", "line", "splitNodes", "always", "ReactDOM", "unstable_batchedUpdates", "levels"]
}
