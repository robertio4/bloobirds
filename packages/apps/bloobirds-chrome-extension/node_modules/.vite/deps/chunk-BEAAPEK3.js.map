{
  "version": 3,
  "sources": ["../../../../../../node_modules/downshift/node_modules/react-is/cjs/react-is.development.js", "../../../../../../node_modules/downshift/node_modules/react-is/index.js", "../../../../../../node_modules/downshift/dist/downshift.esm.js", "../../../../../../node_modules/downshift/node_modules/compute-scroll-into-view/src/index.ts", "../../../../../../node_modules/@udecode/plate-combobox/src/combobox.store.ts", "../../../../../../node_modules/@udecode/plate-combobox/src/utils/getTextFromTrigger.ts", "../../../../../../node_modules/@udecode/plate-combobox/src/onChangeCombobox.ts", "../../../../../../node_modules/is-hotkey/lib/index.js", "../../../../../../node_modules/@udecode/plate-combobox/src/utils/getNextNonDisabledIndex.ts", "../../../../../../node_modules/@udecode/plate-combobox/src/utils/getNextWrappingIndex.ts", "../../../../../../node_modules/@udecode/plate-combobox/src/onKeyDownCombobox.ts", "../../../../../../node_modules/@udecode/plate-combobox/src/createComboboxPlugin.ts", "../../../../../../node_modules/@udecode/plate-combobox/src/hooks/useComboboxControls.ts", "../../../../../../node_modules/@udecode/plate-ui-combobox/src/Combobox.styles.ts", "../../../../../../node_modules/@udecode/plate-ui-combobox/src/Combobox.tsx"],
  "sourcesContent": ["/** @license React v17.0.2\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nvar REACT_FRAGMENT_TYPE = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\nvar hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isConcurrentMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "import PropTypes from 'prop-types';\nimport { Component, cloneElement, useRef, useEffect, useCallback, useLayoutEffect, useReducer, useMemo } from 'react';\nimport { isForwardRef } from 'react-is';\nimport computeScrollIntoView from 'compute-scroll-into-view';\nimport { __assign } from 'tslib';\n\nlet idCounter = 0;\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\n\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop;\n}\n\nfunction noop() {}\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} menuNode the menu element of the component\n */\n\n\nfunction scrollIntoView(node, menuNode) {\n  if (!node) {\n    return;\n  }\n\n  const actions = computeScrollIntoView(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed'\n  });\n  actions.forEach(_ref => {\n    let {\n      el,\n      top,\n      left\n    } = _ref;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @param {Window} environment The window context where downshift renders.\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\n\n\nfunction isOrContainsNode(parent, child, environment) {\n  const result = parent === child || child instanceof environment.Node && parent.contains && parent.contains(child);\n  return result;\n}\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\n\n\nfunction debounce(fn, time) {\n  let timeoutId;\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  function wrapper() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    cancel();\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      fn(...args);\n    }, time);\n  }\n\n  wrapper.cancel = cancel;\n  return wrapper;\n}\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\n\n\nfunction callAllEventHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return fns.some(fn => {\n      if (fn) {\n        fn(event, ...args);\n      }\n\n      return event.preventDownshiftDefault || event.hasOwnProperty('nativeEvent') && event.nativeEvent.preventDownshiftDefault;\n    });\n  };\n}\n\nfunction handleRefs() {\n  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    refs[_key4] = arguments[_key4];\n  }\n\n  return node => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (ref) {\n        ref.current = node;\n      }\n    });\n  };\n}\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\n\n\nfunction generateId() {\n  return String(idCounter++);\n}\n/**\n * Resets idCounter to 0. Used for SSR.\n */\n\n\nfunction resetIdCounter() {\n  idCounter = 0;\n}\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specify if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\n\nfunction getA11yStatusMessage$1(_ref2) {\n  let {\n    isOpen,\n    resultCount,\n    previousResultCount\n  } = _ref2;\n\n  if (!isOpen) {\n    return '';\n  }\n\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n\n  if (resultCount !== previousResultCount) {\n    return `${resultCount} result${resultCount === 1 ? ' is' : 's are'} available, use up and down arrow keys to navigate. Press Enter key to select.`;\n  }\n\n  return '';\n}\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\n\n\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ?\n  /* istanbul ignore next (preact) */\n  arg[0] : arg;\n\n  if (!arg && defaultValue) {\n    return defaultValue;\n  } else {\n    return arg;\n  }\n}\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\n\n\nfunction isDOMElement(element) {\n\n\n  return typeof element.type === 'string';\n}\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\n\n\nfunction getElementProps(element) {\n\n  return element.props;\n}\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\n\n\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(`The property \"${propName}\" is required in \"${fnName}\"`);\n}\n\nconst stateKeys = ['highlightedIndex', 'inputValue', 'isOpen', 'selectedItem', 'type'];\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\n\nfunction pickState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  const result = {};\n  stateKeys.forEach(k => {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k];\n    }\n  });\n  return result;\n}\n/**\n * This will perform a shallow merge of the given state object\n * with the state coming from props\n * (for the controlled component scenario)\n * This is used in state updater functions so they're referencing\n * the right state regardless of where it comes from.\n *\n * @param {Object} state The state of the component/hook.\n * @param {Object} props The props that may contain controlled values.\n * @returns {Object} The merged controlled state.\n */\n\n\nfunction getState(state, props) {\n  return Object.keys(state).reduce((prevState, key) => {\n    prevState[key] = isControlledProp(props, key) ? props[key] : state[key];\n    return prevState;\n  }, {});\n}\n/**\n * This determines whether a prop is a \"controlled prop\" meaning it is\n * state which is controlled by the outside of this component rather\n * than within this component.\n *\n * @param {Object} props The props that may contain controlled values.\n * @param {String} key the key to check\n * @return {Boolean} whether it is a controlled controlled prop\n */\n\n\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\n\n\nfunction normalizeArrowKey(event) {\n  const {\n    key,\n    keyCode\n  } = event;\n  /* istanbul ignore next (ie) */\n\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return `Arrow${key}`;\n  }\n\n  return key;\n}\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\n\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index after the move.\n */\n\n\nfunction getNextWrappingIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  if (circular === void 0) {\n    circular = true;\n  }\n\n  if (itemCount === 0) {\n    return -1;\n  }\n\n  const itemsLastIndex = itemCount - 1;\n\n  if (typeof baseIndex !== 'number' || baseIndex < 0 || baseIndex >= itemCount) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  let newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = circular ? itemsLastIndex : 0;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = circular ? 0 : itemsLastIndex;\n  }\n\n  const nonDisabledNewIndex = getNextNonDisabledIndex(moveAmount, newIndex, itemCount, getItemNodeFromIndex, circular);\n\n  if (nonDisabledNewIndex === -1) {\n    return baseIndex >= itemCount ? -1 : baseIndex;\n  }\n\n  return nonDisabledNewIndex;\n}\n/**\n * Returns the next index in the list of an item that is not disabled.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.\n */\n\n\nfunction getNextNonDisabledIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  const currentElementNode = getItemNodeFromIndex(baseIndex);\n\n  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {\n    return baseIndex;\n  }\n\n  if (moveAmount > 0) {\n    for (let index = baseIndex + 1; index < itemCount; index++) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  } else {\n    for (let index = baseIndex - 1; index >= 0; index--) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  }\n\n  if (circular) {\n    return moveAmount > 0 ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false) : getNextNonDisabledIndex(-1, itemCount - 1, itemCount, getItemNodeFromIndex, false);\n  }\n\n  return -1;\n}\n/**\n * Checks if event target is within the downshift elements.\n *\n * @param {EventTarget} target Target to check.\n * @param {HTMLElement[]} downshiftElements The elements that form downshift (list, toggle button etc).\n * @param {Window} environment The window context where downshift renders.\n * @param {boolean} checkActiveElement Whether to also check activeElement.\n *\n * @returns {boolean} Whether or not the target is within downshift elements.\n */\n\n\nfunction targetWithinDownshift(target, downshiftElements, environment, checkActiveElement) {\n  if (checkActiveElement === void 0) {\n    checkActiveElement = true;\n  }\n\n  return downshiftElements.some(contextNode => contextNode && (isOrContainsNode(contextNode, target, environment) || checkActiveElement && isOrContainsNode(contextNode, environment.document.activeElement, environment)));\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nlet validateControlledUnchanged = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validateControlledUnchanged = (state, prevProps, nextProps) => {\n    const warningDescription = `This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/downshift-js/downshift#control-props`;\n    Object.keys(state).forEach(propKey => {\n      if (prevProps[propKey] !== undefined && nextProps[propKey] === undefined) {\n        // eslint-disable-next-line no-console\n        console.error(`downshift: A component has changed the controlled prop \"${propKey}\" to be uncontrolled. ${warningDescription}`);\n      } else if (prevProps[propKey] === undefined && nextProps[propKey] !== undefined) {\n        // eslint-disable-next-line no-console\n        console.error(`downshift: A component has changed the uncontrolled prop \"${propKey}\" to be controlled. ${warningDescription}`);\n      }\n    });\n  };\n}\n\nconst cleanupStatus = debounce(documentProp => {\n  getStatusDiv(documentProp).textContent = '';\n}, 500);\n/**\n * @param {String} status the status message\n * @param {Object} documentProp document passed by the user.\n */\n\nfunction setStatus(status, documentProp) {\n  const div = getStatusDiv(documentProp);\n\n  if (!status) {\n    return;\n  }\n\n  div.textContent = status;\n  cleanupStatus(documentProp);\n}\n/**\n * Get the status node or create it if it does not already exist.\n * @param {Object} documentProp document passed by the user.\n * @return {HTMLElement} the status node.\n */\n\n\nfunction getStatusDiv(documentProp) {\n  if (documentProp === void 0) {\n    documentProp = document;\n  }\n\n  let statusDiv = documentProp.getElementById('a11y-status-message');\n\n  if (statusDiv) {\n    return statusDiv;\n  }\n\n  statusDiv = documentProp.createElement('div');\n  statusDiv.setAttribute('id', 'a11y-status-message');\n  statusDiv.setAttribute('role', 'status');\n  statusDiv.setAttribute('aria-live', 'polite');\n  statusDiv.setAttribute('aria-relevant', 'additions text');\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px'\n  });\n  documentProp.body.appendChild(statusDiv);\n  return statusDiv;\n}\n\nconst unknown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_unknown__' : 0;\nconst mouseUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_mouseup__' : 1;\nconst itemMouseEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_item_mouseenter__' : 2;\nconst keyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_up__' : 3;\nconst keyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_down__' : 4;\nconst keyDownEscape = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_escape__' : 5;\nconst keyDownEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_enter__' : 6;\nconst keyDownHome = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_home__' : 7;\nconst keyDownEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_end__' : 8;\nconst clickItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_item__' : 9;\nconst blurInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_input__' : 10;\nconst changeInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_change_input__' : 11;\nconst keyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_space_button__' : 12;\nconst clickButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_button__' : 13;\nconst blurButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_button__' : 14;\nconst controlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_controlled_prop_updated_selected_item__' : 15;\nconst touchEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_touchend__' : 16;\n\nvar stateChangeTypes$3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  unknown: unknown,\n  mouseUp: mouseUp,\n  itemMouseEnter: itemMouseEnter,\n  keyDownArrowUp: keyDownArrowUp,\n  keyDownArrowDown: keyDownArrowDown,\n  keyDownEscape: keyDownEscape,\n  keyDownEnter: keyDownEnter,\n  keyDownHome: keyDownHome,\n  keyDownEnd: keyDownEnd,\n  clickItem: clickItem,\n  blurInput: blurInput,\n  changeInput: changeInput,\n  keyDownSpaceButton: keyDownSpaceButton,\n  clickButton: clickButton,\n  blurButton: blurButton,\n  controlledPropUpdatedSelectedItem: controlledPropUpdatedSelectedItem,\n  touchEnd: touchEnd\n});\n\n/* eslint camelcase:0 */\n\nconst Downshift = /*#__PURE__*/(() => {\n  class Downshift extends Component {\n    constructor(_props) {\n      var _this;\n\n      super(_props);\n      _this = this;\n      this.id = this.props.id || `downshift-${generateId()}`;\n      this.menuId = this.props.menuId || `${this.id}-menu`;\n      this.labelId = this.props.labelId || `${this.id}-label`;\n      this.inputId = this.props.inputId || `${this.id}-input`;\n\n      this.getItemId = this.props.getItemId || (index => `${this.id}-item-${index}`);\n\n      this.input = null;\n      this.items = [];\n      this.itemCount = null;\n      this.previousResultCount = 0;\n      this.timeoutIds = [];\n\n      this.internalSetTimeout = (fn, time) => {\n        const id = setTimeout(() => {\n          this.timeoutIds = this.timeoutIds.filter(i => i !== id);\n          fn();\n        }, time);\n        this.timeoutIds.push(id);\n      };\n\n      this.setItemCount = count => {\n        this.itemCount = count;\n      };\n\n      this.unsetItemCount = () => {\n        this.itemCount = null;\n      };\n\n      this.setHighlightedIndex = function (highlightedIndex, otherStateToSet) {\n        if (highlightedIndex === void 0) {\n          highlightedIndex = _this.props.defaultHighlightedIndex;\n        }\n\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState({\n          highlightedIndex,\n          ...otherStateToSet\n        });\n      };\n\n      this.clearSelection = cb => {\n        this.internalSetState({\n          selectedItem: null,\n          inputValue: '',\n          highlightedIndex: this.props.defaultHighlightedIndex,\n          isOpen: this.props.defaultIsOpen\n        }, cb);\n      };\n\n      this.selectItem = (item, otherStateToSet, cb) => {\n        otherStateToSet = pickState(otherStateToSet);\n        this.internalSetState({\n          isOpen: this.props.defaultIsOpen,\n          highlightedIndex: this.props.defaultHighlightedIndex,\n          selectedItem: item,\n          inputValue: this.props.itemToString(item),\n          ...otherStateToSet\n        }, cb);\n      };\n\n      this.selectItemAtIndex = (itemIndex, otherStateToSet, cb) => {\n        const item = this.items[itemIndex];\n\n        if (item == null) {\n          return;\n        }\n\n        this.selectItem(item, otherStateToSet, cb);\n      };\n\n      this.selectHighlightedItem = (otherStateToSet, cb) => {\n        return this.selectItemAtIndex(this.getState().highlightedIndex, otherStateToSet, cb);\n      };\n\n      this.internalSetState = (stateToSet, cb) => {\n        let isItemSelected, onChangeArg;\n        const onStateChangeArg = {};\n        const isStateToSetFunction = typeof stateToSet === 'function'; // we want to call `onInputValueChange` before the `setState` call\n        // so someone controlling the `inputValue` state gets notified of\n        // the input change as soon as possible. This avoids issues with\n        // preserving the cursor position.\n        // See https://github.com/downshift-js/downshift/issues/217 for more info.\n\n        if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n          this.props.onInputValueChange(stateToSet.inputValue, { ...this.getStateAndHelpers(),\n            ...stateToSet\n          });\n        }\n\n        return this.setState(state => {\n          state = this.getState(state);\n          let newStateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet; // Your own function that could modify the state that will be set.\n\n          newStateToSet = this.props.stateReducer(state, newStateToSet); // checks if an item is selected, regardless of if it's different from\n          // what was selected before\n          // used to determine if onSelect and onChange callbacks should be called\n\n          isItemSelected = newStateToSet.hasOwnProperty('selectedItem'); // this keeps track of the object we want to call with setState\n\n          const nextState = {}; // this is just used to tell whether the state changed\n          // and we're trying to update that state. OR if the selection has changed and we're\n          // trying to update the selection\n\n          if (isItemSelected && newStateToSet.selectedItem !== state.selectedItem) {\n            onChangeArg = newStateToSet.selectedItem;\n          }\n\n          newStateToSet.type = newStateToSet.type || unknown;\n          Object.keys(newStateToSet).forEach(key => {\n            // onStateChangeArg should only have the state that is\n            // actually changing\n            if (state[key] !== newStateToSet[key]) {\n              onStateChangeArg[key] = newStateToSet[key];\n            } // the type is useful for the onStateChangeArg\n            // but we don't actually want to set it in internal state.\n            // this is an undocumented feature for now... Not all internalSetState\n            // calls support it and I'm not certain we want them to yet.\n            // But it enables users controlling the isOpen state to know when\n            // the isOpen state changes due to mouseup events which is quite handy.\n\n\n            if (key === 'type') {\n              return;\n            }\n\n            newStateToSet[key]; // if it's coming from props, then we don't care to set it internally\n\n            if (!isControlledProp(this.props, key)) {\n              nextState[key] = newStateToSet[key];\n            }\n          }); // if stateToSet is a function, then we weren't able to call onInputValueChange\n          // earlier, so we'll call it now that we know what the inputValue state will be.\n\n          if (isStateToSetFunction && newStateToSet.hasOwnProperty('inputValue')) {\n            this.props.onInputValueChange(newStateToSet.inputValue, { ...this.getStateAndHelpers(),\n              ...newStateToSet\n            });\n          }\n\n          return nextState;\n        }, () => {\n          // call the provided callback if it's a function\n          cbToCb(cb)(); // only call the onStateChange and onChange callbacks if\n          // we have relevant information to pass them.\n\n          const hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1;\n\n          if (hasMoreStateThanType) {\n            this.props.onStateChange(onStateChangeArg, this.getStateAndHelpers());\n          }\n\n          if (isItemSelected) {\n            this.props.onSelect(stateToSet.selectedItem, this.getStateAndHelpers());\n          }\n\n          if (onChangeArg !== undefined) {\n            this.props.onChange(onChangeArg, this.getStateAndHelpers());\n          } // this is currently undocumented and therefore subject to change\n          // We'll try to not break it, but just be warned.\n\n\n          this.props.onUserAction(onStateChangeArg, this.getStateAndHelpers());\n        });\n      };\n\n      this.rootRef = node => this._rootNode = node;\n\n      this.getRootProps = function (_temp, _temp2) {\n        let {\n          refKey = 'ref',\n          ref,\n          ...rest\n        } = _temp === void 0 ? {} : _temp;\n        let {\n          suppressRefError = false\n        } = _temp2 === void 0 ? {} : _temp2;\n        // this is used in the render to know whether the user has called getRootProps.\n        // It uses that to know whether to apply the props automatically\n        _this.getRootProps.called = true;\n        _this.getRootProps.refKey = refKey;\n        _this.getRootProps.suppressRefError = suppressRefError;\n\n        const {\n          isOpen\n        } = _this.getState();\n\n        return {\n          [refKey]: handleRefs(ref, _this.rootRef),\n          role: 'combobox',\n          'aria-expanded': isOpen,\n          'aria-haspopup': 'listbox',\n          'aria-owns': isOpen ? _this.menuId : null,\n          'aria-labelledby': _this.labelId,\n          ...rest\n        };\n      };\n\n      this.keyDownHandlers = {\n        ArrowDown(event) {\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            const amount = event.shiftKey ? 5 : 1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowDown\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowDown\n            }, () => {\n              const itemCount = this.getItemCount();\n\n              if (itemCount > 0) {\n                const {\n                  highlightedIndex\n                } = this.getState();\n                const nextHighlightedIndex = getNextWrappingIndex(1, highlightedIndex, itemCount, index => this.getItemNodeFromIndex(index));\n                this.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowDown\n                });\n              }\n            });\n          }\n        },\n\n        ArrowUp(event) {\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            const amount = event.shiftKey ? -5 : -1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowUp\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowUp\n            }, () => {\n              const itemCount = this.getItemCount();\n\n              if (itemCount > 0) {\n                const {\n                  highlightedIndex\n                } = this.getState();\n                const nextHighlightedIndex = getNextWrappingIndex(-1, highlightedIndex, itemCount, index => this.getItemNodeFromIndex(index));\n                this.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowUp\n                });\n              }\n            });\n          }\n        },\n\n        Enter(event) {\n          if (event.which === 229) {\n            return;\n          }\n\n          const {\n            isOpen,\n            highlightedIndex\n          } = this.getState();\n\n          if (isOpen && highlightedIndex != null) {\n            event.preventDefault();\n            const item = this.items[highlightedIndex];\n            const itemNode = this.getItemNodeFromIndex(highlightedIndex);\n\n            if (item == null || itemNode && itemNode.hasAttribute('disabled')) {\n              return;\n            }\n\n            this.selectHighlightedItem({\n              type: keyDownEnter\n            });\n          }\n        },\n\n        Escape(event) {\n          event.preventDefault();\n          this.reset({\n            type: keyDownEscape,\n            ...(!this.state.isOpen && {\n              selectedItem: null,\n              inputValue: ''\n            })\n          });\n        }\n\n      };\n      this.buttonKeyDownHandlers = { ...this.keyDownHandlers,\n\n        ' '(event) {\n          event.preventDefault();\n          this.toggleMenu({\n            type: keyDownSpaceButton\n          });\n        }\n\n      };\n      this.inputKeyDownHandlers = { ...this.keyDownHandlers,\n\n        Home(event) {\n          const {\n            isOpen\n          } = this.getState();\n\n          if (!isOpen) {\n            return;\n          }\n\n          event.preventDefault();\n          const itemCount = this.getItemCount();\n\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting downwards from 0 if that's disabled.\n\n\n          const newHighlightedIndex = getNextNonDisabledIndex(1, 0, itemCount, index => this.getItemNodeFromIndex(index), false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownHome\n          });\n        },\n\n        End(event) {\n          const {\n            isOpen\n          } = this.getState();\n\n          if (!isOpen) {\n            return;\n          }\n\n          event.preventDefault();\n          const itemCount = this.getItemCount();\n\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting upwards from last index if that's disabled.\n\n\n          const newHighlightedIndex = getNextNonDisabledIndex(-1, itemCount - 1, itemCount, index => this.getItemNodeFromIndex(index), false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownEnd\n          });\n        }\n\n      };\n\n      this.getToggleButtonProps = function (_temp3) {\n        let {\n          onClick,\n          onPress,\n          onKeyDown,\n          onKeyUp,\n          onBlur,\n          ...rest\n        } = _temp3 === void 0 ? {} : _temp3;\n\n        const {\n          isOpen\n        } = _this.getState();\n\n        const enabledEventHandlers = {\n          onClick: callAllEventHandlers(onClick, _this.buttonHandleClick),\n          onKeyDown: callAllEventHandlers(onKeyDown, _this.buttonHandleKeyDown),\n          onKeyUp: callAllEventHandlers(onKeyUp, _this.buttonHandleKeyUp),\n          onBlur: callAllEventHandlers(onBlur, _this.buttonHandleBlur)\n        };\n        const eventHandlers = rest.disabled ? {} : enabledEventHandlers;\n        return {\n          type: 'button',\n          role: 'button',\n          'aria-label': isOpen ? 'close menu' : 'open menu',\n          'aria-haspopup': true,\n          'data-toggle': true,\n          ...eventHandlers,\n          ...rest\n        };\n      };\n\n      this.buttonHandleKeyUp = event => {\n        // Prevent click event from emitting in Firefox\n        event.preventDefault();\n      };\n\n      this.buttonHandleKeyDown = event => {\n        const key = normalizeArrowKey(event);\n\n        if (this.buttonKeyDownHandlers[key]) {\n          this.buttonKeyDownHandlers[key].call(this, event);\n        }\n      };\n\n      this.buttonHandleClick = event => {\n        event.preventDefault(); // handle odd case for Safari and Firefox which\n        // don't give the button the focus properly.\n\n        /* istanbul ignore if (can't reasonably test this) */\n\n        if (this.props.environment.document.activeElement === this.props.environment.document.body) {\n          event.target.focus();\n        } // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n        // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n        // when building for production and should therefore have no impact on production code.\n\n\n        if (process.env.NODE_ENV === 'test') {\n          this.toggleMenu({\n            type: clickButton\n          });\n        } else {\n          // Ensure that toggle of menu occurs after the potential blur event in iOS\n          this.internalSetTimeout(() => this.toggleMenu({\n            type: clickButton\n          }));\n        }\n      };\n\n      this.buttonHandleBlur = event => {\n        const blurTarget = event.target; // Save blur target for comparison with activeElement later\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n\n        this.internalSetTimeout(() => {\n          if (!this.isMouseDown && (this.props.environment.document.activeElement == null || this.props.environment.document.activeElement.id !== this.inputId) && this.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n          ) {\n            this.reset({\n              type: blurButton\n            });\n          }\n        });\n      };\n\n      this.getLabelProps = props => {\n        return {\n          htmlFor: this.inputId,\n          id: this.labelId,\n          ...props\n        };\n      };\n\n      this.getInputProps = function (_temp4) {\n        let {\n          onKeyDown,\n          onBlur,\n          onChange,\n          onInput,\n          onChangeText,\n          ...rest\n        } = _temp4 === void 0 ? {} : _temp4;\n        let onChangeKey;\n        let eventHandlers = {};\n        /* istanbul ignore next (preact) */\n\n        {\n          onChangeKey = 'onChange';\n        }\n\n        const {\n          inputValue,\n          isOpen,\n          highlightedIndex\n        } = _this.getState();\n\n        if (!rest.disabled) {\n          eventHandlers = {\n            [onChangeKey]: callAllEventHandlers(onChange, onInput, _this.inputHandleChange),\n            onKeyDown: callAllEventHandlers(onKeyDown, _this.inputHandleKeyDown),\n            onBlur: callAllEventHandlers(onBlur, _this.inputHandleBlur)\n          };\n        }\n\n        return {\n          'aria-autocomplete': 'list',\n          'aria-activedescendant': isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0 ? _this.getItemId(highlightedIndex) : null,\n          'aria-controls': isOpen ? _this.menuId : null,\n          'aria-labelledby': _this.labelId,\n          // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n          // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n          autoComplete: 'off',\n          value: inputValue,\n          id: _this.inputId,\n          ...eventHandlers,\n          ...rest\n        };\n      };\n\n      this.inputHandleKeyDown = event => {\n        const key = normalizeArrowKey(event);\n\n        if (key && this.inputKeyDownHandlers[key]) {\n          this.inputKeyDownHandlers[key].call(this, event);\n        }\n      };\n\n      this.inputHandleChange = event => {\n        this.internalSetState({\n          type: changeInput,\n          isOpen: true,\n          inputValue: event.target.value,\n          highlightedIndex: this.props.defaultHighlightedIndex\n        });\n      };\n\n      this.inputHandleBlur = () => {\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n        this.internalSetTimeout(() => {\n          const downshiftButtonIsActive = this.props.environment.document && !!this.props.environment.document.activeElement && !!this.props.environment.document.activeElement.dataset && this.props.environment.document.activeElement.dataset.toggle && this._rootNode && this._rootNode.contains(this.props.environment.document.activeElement);\n\n          if (!this.isMouseDown && !downshiftButtonIsActive) {\n            this.reset({\n              type: blurInput\n            });\n          }\n        });\n      };\n\n      this.menuRef = node => {\n        this._menuNode = node;\n      };\n\n      this.getMenuProps = function (_temp5, _temp6) {\n        let {\n          refKey = 'ref',\n          ref,\n          ...props\n        } = _temp5 === void 0 ? {} : _temp5;\n        let {\n          suppressRefError = false\n        } = _temp6 === void 0 ? {} : _temp6;\n        _this.getMenuProps.called = true;\n        _this.getMenuProps.refKey = refKey;\n        _this.getMenuProps.suppressRefError = suppressRefError;\n        return {\n          [refKey]: handleRefs(ref, _this.menuRef),\n          role: 'listbox',\n          'aria-labelledby': props && props['aria-label'] ? null : _this.labelId,\n          id: _this.menuId,\n          ...props\n        };\n      };\n\n      this.getItemProps = function (_temp7) {\n        let {\n          onMouseMove,\n          onMouseDown,\n          onClick,\n          onPress,\n          index,\n          item = process.env.NODE_ENV === 'production' ?\n          /* istanbul ignore next */\n          undefined : requiredProp('getItemProps', 'item'),\n          ...rest\n        } = _temp7 === void 0 ? {} : _temp7;\n\n        if (index === undefined) {\n          _this.items.push(item);\n\n          index = _this.items.indexOf(item);\n        } else {\n          _this.items[index] = item;\n        }\n\n        const onSelectKey = 'onClick';\n        const customClickHandler = onClick;\n        const enabledEventHandlers = {\n          // onMouseMove is used over onMouseEnter here. onMouseMove\n          // is only triggered on actual mouse movement while onMouseEnter\n          // can fire on DOM changes, interrupting keyboard navigation\n          onMouseMove: callAllEventHandlers(onMouseMove, () => {\n            if (index === _this.getState().highlightedIndex) {\n              return;\n            }\n\n            _this.setHighlightedIndex(index, {\n              type: itemMouseEnter\n            }); // We never want to manually scroll when changing state based\n            // on `onMouseMove` because we will be moving the element out\n            // from under the user which is currently scrolling/moving the\n            // cursor\n\n\n            _this.avoidScrolling = true;\n\n            _this.internalSetTimeout(() => _this.avoidScrolling = false, 250);\n          }),\n          onMouseDown: callAllEventHandlers(onMouseDown, event => {\n            // This prevents the activeElement from being changed\n            // to the item so it can remain with the current activeElement\n            // which is a more common use case.\n            event.preventDefault();\n          }),\n          [onSelectKey]: callAllEventHandlers(customClickHandler, () => {\n            _this.selectItemAtIndex(index, {\n              type: clickItem\n            });\n          })\n        }; // Passing down the onMouseDown handler to prevent redirect\n        // of the activeElement if clicking on disabled items\n\n        const eventHandlers = rest.disabled ? {\n          onMouseDown: enabledEventHandlers.onMouseDown\n        } : enabledEventHandlers;\n        return {\n          id: _this.getItemId(index),\n          role: 'option',\n          'aria-selected': _this.getState().highlightedIndex === index,\n          ...eventHandlers,\n          ...rest\n        };\n      };\n\n      this.clearItems = () => {\n        this.items = [];\n      };\n\n      this.reset = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_ref => {\n          let {\n            selectedItem\n          } = _ref;\n          return {\n            isOpen: _this.props.defaultIsOpen,\n            highlightedIndex: _this.props.defaultHighlightedIndex,\n            inputValue: _this.props.itemToString(selectedItem),\n            ...otherStateToSet\n          };\n        }, cb);\n      };\n\n      this.toggleMenu = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_ref2 => {\n          let {\n            isOpen\n          } = _ref2;\n          return {\n            isOpen: !isOpen,\n            ...(isOpen && {\n              highlightedIndex: _this.props.defaultHighlightedIndex\n            }),\n            ...otherStateToSet\n          };\n        }, () => {\n          const {\n            isOpen,\n            highlightedIndex\n          } = _this.getState();\n\n          if (isOpen) {\n            if (_this.getItemCount() > 0 && typeof highlightedIndex === 'number') {\n              _this.setHighlightedIndex(highlightedIndex, otherStateToSet);\n            }\n          }\n\n          cbToCb(cb)();\n        });\n      };\n\n      this.openMenu = cb => {\n        this.internalSetState({\n          isOpen: true\n        }, cb);\n      };\n\n      this.closeMenu = cb => {\n        this.internalSetState({\n          isOpen: false\n        }, cb);\n      };\n\n      this.updateStatus = debounce(() => {\n        const state = this.getState();\n        const item = this.items[state.highlightedIndex];\n        const resultCount = this.getItemCount();\n        const status = this.props.getA11yStatusMessage({\n          itemToString: this.props.itemToString,\n          previousResultCount: this.previousResultCount,\n          resultCount,\n          highlightedItem: item,\n          ...state\n        });\n        this.previousResultCount = resultCount;\n        setStatus(status, this.props.environment.document);\n      }, 200);\n      // fancy destructuring + defaults + aliases\n      // this basically says each value of state should either be set to\n      // the initial value or the default value if the initial value is not provided\n      const {\n        defaultHighlightedIndex,\n        initialHighlightedIndex: _highlightedIndex = defaultHighlightedIndex,\n        defaultIsOpen,\n        initialIsOpen: _isOpen = defaultIsOpen,\n        initialInputValue: _inputValue = '',\n        initialSelectedItem: _selectedItem = null\n      } = this.props;\n\n      const _state = this.getState({\n        highlightedIndex: _highlightedIndex,\n        isOpen: _isOpen,\n        inputValue: _inputValue,\n        selectedItem: _selectedItem\n      });\n\n      if (_state.selectedItem != null && this.props.initialInputValue === undefined) {\n        _state.inputValue = this.props.itemToString(_state.selectedItem);\n      }\n\n      this.state = _state;\n    }\n\n    /**\n     * Clear all running timeouts\n     */\n    internalClearTimeouts() {\n      this.timeoutIds.forEach(id => {\n        clearTimeout(id);\n      });\n      this.timeoutIds = [];\n    }\n    /**\n     * Gets the state based on internal state or props\n     * If a state value is passed via props, then that\n     * is the value given, otherwise it's retrieved from\n     * stateToMerge\n     *\n     * @param {Object} stateToMerge defaults to this.state\n     * @return {Object} the state\n     */\n\n\n    getState(stateToMerge) {\n      if (stateToMerge === void 0) {\n        stateToMerge = this.state;\n      }\n\n      return getState(stateToMerge, this.props);\n    }\n\n    getItemCount() {\n      // things read better this way. They're in priority order:\n      // 1. `this.itemCount`\n      // 2. `this.props.itemCount`\n      // 3. `this.items.length`\n      let itemCount = this.items.length;\n\n      if (this.itemCount != null) {\n        itemCount = this.itemCount;\n      } else if (this.props.itemCount !== undefined) {\n        itemCount = this.props.itemCount;\n      }\n\n      return itemCount;\n    }\n\n    getItemNodeFromIndex(index) {\n      return this.props.environment.document.getElementById(this.getItemId(index));\n    }\n\n    scrollHighlightedItemIntoView() {\n      /* istanbul ignore else (react-native) */\n      {\n        const node = this.getItemNodeFromIndex(this.getState().highlightedIndex);\n        this.props.scrollIntoView(node, this._menuNode);\n      }\n    }\n\n    moveHighlightedIndex(amount, otherStateToSet) {\n      const itemCount = this.getItemCount();\n      const {\n        highlightedIndex\n      } = this.getState();\n\n      if (itemCount > 0) {\n        const nextHighlightedIndex = getNextWrappingIndex(amount, highlightedIndex, itemCount, index => this.getItemNodeFromIndex(index));\n        this.setHighlightedIndex(nextHighlightedIndex, otherStateToSet);\n      }\n    }\n\n    getStateAndHelpers() {\n      const {\n        highlightedIndex,\n        inputValue,\n        selectedItem,\n        isOpen\n      } = this.getState();\n      const {\n        itemToString\n      } = this.props;\n      const {\n        id\n      } = this;\n      const {\n        getRootProps,\n        getToggleButtonProps,\n        getLabelProps,\n        getMenuProps,\n        getInputProps,\n        getItemProps,\n        openMenu,\n        closeMenu,\n        toggleMenu,\n        selectItem,\n        selectItemAtIndex,\n        selectHighlightedItem,\n        setHighlightedIndex,\n        clearSelection,\n        clearItems,\n        reset,\n        setItemCount,\n        unsetItemCount,\n        internalSetState: setState\n      } = this;\n      return {\n        // prop getters\n        getRootProps,\n        getToggleButtonProps,\n        getLabelProps,\n        getMenuProps,\n        getInputProps,\n        getItemProps,\n        // actions\n        reset,\n        openMenu,\n        closeMenu,\n        toggleMenu,\n        selectItem,\n        selectItemAtIndex,\n        selectHighlightedItem,\n        setHighlightedIndex,\n        clearSelection,\n        clearItems,\n        setItemCount,\n        unsetItemCount,\n        setState,\n        // props\n        itemToString,\n        // derived\n        id,\n        // state\n        highlightedIndex,\n        inputValue,\n        isOpen,\n        selectedItem\n      };\n    } //////////////////////////// ROOT\n\n\n    componentDidMount() {\n      /* istanbul ignore if (react-native) */\n      if (process.env.NODE_ENV !== 'production' && !false && this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n        validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n      }\n      /* istanbul ignore if (react-native) */\n\n\n      {\n        // this.isMouseDown helps us track whether the mouse is currently held down.\n        // This is useful when the user clicks on an item in the list, but holds the mouse\n        // down long enough for the list to disappear (because the blur event fires on the input)\n        // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n        // trigger hiding the menu.\n        const onMouseDown = () => {\n          this.isMouseDown = true;\n        };\n\n        const onMouseUp = event => {\n          this.isMouseDown = false; // if the target element or the activeElement is within a downshift node\n          // then we don't want to reset downshift\n\n          const contextWithinDownshift = targetWithinDownshift(event.target, [this._rootNode, this._menuNode], this.props.environment);\n\n          if (!contextWithinDownshift && this.getState().isOpen) {\n            this.reset({\n              type: mouseUp\n            }, () => this.props.onOuterClick(this.getStateAndHelpers()));\n          }\n        }; // Touching an element in iOS gives focus and hover states, but touching out of\n        // the element will remove hover, and persist the focus state, resulting in the\n        // blur event not being triggered.\n        // this.isTouchMove helps us track whether the user is tapping or swiping on a touch screen.\n        // If the user taps outside of Downshift, the component should be reset,\n        // but not if the user is swiping\n\n\n        const onTouchStart = () => {\n          this.isTouchMove = false;\n        };\n\n        const onTouchMove = () => {\n          this.isTouchMove = true;\n        };\n\n        const onTouchEnd = event => {\n          const contextWithinDownshift = targetWithinDownshift(event.target, [this._rootNode, this._menuNode], this.props.environment, false);\n\n          if (!this.isTouchMove && !contextWithinDownshift && this.getState().isOpen) {\n            this.reset({\n              type: touchEnd\n            }, () => this.props.onOuterClick(this.getStateAndHelpers()));\n          }\n        };\n\n        const {\n          environment\n        } = this.props;\n        environment.addEventListener('mousedown', onMouseDown);\n        environment.addEventListener('mouseup', onMouseUp);\n        environment.addEventListener('touchstart', onTouchStart);\n        environment.addEventListener('touchmove', onTouchMove);\n        environment.addEventListener('touchend', onTouchEnd);\n\n        this.cleanup = () => {\n          this.internalClearTimeouts();\n          this.updateStatus.cancel();\n          environment.removeEventListener('mousedown', onMouseDown);\n          environment.removeEventListener('mouseup', onMouseUp);\n          environment.removeEventListener('touchstart', onTouchStart);\n          environment.removeEventListener('touchmove', onTouchMove);\n          environment.removeEventListener('touchend', onTouchEnd);\n        };\n      }\n    }\n\n    shouldScroll(prevState, prevProps) {\n      const {\n        highlightedIndex: currentHighlightedIndex\n      } = this.props.highlightedIndex === undefined ? this.getState() : this.props;\n      const {\n        highlightedIndex: prevHighlightedIndex\n      } = prevProps.highlightedIndex === undefined ? prevState : prevProps;\n      const scrollWhenOpen = currentHighlightedIndex && this.getState().isOpen && !prevState.isOpen;\n      const scrollWhenNavigating = currentHighlightedIndex !== prevHighlightedIndex;\n      return scrollWhenOpen || scrollWhenNavigating;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateControlledUnchanged(this.state, prevProps, this.props);\n        /* istanbul ignore if (react-native) */\n\n        if (this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n          validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n        }\n      }\n\n      if (isControlledProp(this.props, 'selectedItem') && this.props.selectedItemChanged(prevProps.selectedItem, this.props.selectedItem)) {\n        this.internalSetState({\n          type: controlledPropUpdatedSelectedItem,\n          inputValue: this.props.itemToString(this.props.selectedItem)\n        });\n      }\n\n      if (!this.avoidScrolling && this.shouldScroll(prevState, prevProps)) {\n        this.scrollHighlightedItemIntoView();\n      }\n      /* istanbul ignore else (react-native) */\n\n\n      {\n        this.updateStatus();\n      }\n    }\n\n    componentWillUnmount() {\n      this.cleanup(); // avoids memory leak\n    }\n\n    render() {\n      const children = unwrapArray(this.props.children, noop); // because the items are rerendered every time we call the children\n      // we clear this out each render and it will be populated again as\n      // getItemProps is called.\n\n      this.clearItems(); // we reset this so we know whether the user calls getRootProps during\n      // this render. If they do then we don't need to do anything,\n      // if they don't then we need to clone the element they return and\n      // apply the props for them.\n\n      this.getRootProps.called = false;\n      this.getRootProps.refKey = undefined;\n      this.getRootProps.suppressRefError = undefined; // we do something similar for getMenuProps\n\n      this.getMenuProps.called = false;\n      this.getMenuProps.refKey = undefined;\n      this.getMenuProps.suppressRefError = undefined; // we do something similar for getLabelProps\n\n      this.getLabelProps.called = false; // and something similar for getInputProps\n\n      this.getInputProps.called = false;\n      const element = unwrapArray(children(this.getStateAndHelpers()));\n\n      if (!element) {\n        return null;\n      }\n\n      if (this.getRootProps.called || this.props.suppressRefError) {\n        if (process.env.NODE_ENV !== 'production' && !this.getRootProps.suppressRefError && !this.props.suppressRefError) {\n          validateGetRootPropsCalledCorrectly(element, this.getRootProps);\n        }\n\n        return element;\n      } else if (isDOMElement(element)) {\n        // they didn't apply the root props, but we can clone\n        // this and apply the props ourselves\n        return /*#__PURE__*/cloneElement(element, this.getRootProps(getElementProps(element)));\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        // they didn't apply the root props, but they need to\n        // otherwise we can't query around the autocomplete\n        throw new Error('downshift: If you return a non-DOM element, you must apply the getRootProps function');\n      }\n      /* istanbul ignore next */\n\n\n      return undefined;\n    }\n\n  }\n\n  Downshift.defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultIsOpen: false,\n    getA11yStatusMessage: getA11yStatusMessage$1,\n    itemToString: i => {\n      if (i == null) {\n        return '';\n      }\n\n      if (process.env.NODE_ENV !== 'production' && isPlainObject(i) && !i.hasOwnProperty('toString')) {\n        // eslint-disable-next-line no-console\n        console.warn('downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.', 'The object that was passed:', i);\n      }\n\n      return String(i);\n    },\n    onStateChange: noop,\n    onInputValueChange: noop,\n    onUserAction: noop,\n    onChange: noop,\n    onSelect: noop,\n    onOuterClick: noop,\n    selectedItemChanged: (prevItem, item) => prevItem !== item,\n    environment:\n    /* istanbul ignore next (ssr) */\n    typeof window === 'undefined' ? {} : window,\n    stateReducer: (state, stateToSet) => stateToSet,\n    suppressRefError: false,\n    scrollIntoView\n  };\n  Downshift.stateChangeTypes = stateChangeTypes$3;\n  return Downshift;\n})();\n\nprocess.env.NODE_ENV !== \"production\" ? Downshift.propTypes = {\n  children: PropTypes.func,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultIsOpen: PropTypes.bool,\n  initialHighlightedIndex: PropTypes.number,\n  initialSelectedItem: PropTypes.any,\n  initialInputValue: PropTypes.string,\n  initialIsOpen: PropTypes.bool,\n  getA11yStatusMessage: PropTypes.func,\n  itemToString: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  onUserAction: PropTypes.func,\n  onOuterClick: PropTypes.func,\n  selectedItemChanged: PropTypes.func,\n  stateReducer: PropTypes.func,\n  itemCount: PropTypes.number,\n  id: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  }),\n  suppressRefError: PropTypes.bool,\n  scrollIntoView: PropTypes.func,\n  // things we keep in state for uncontrolled components\n  // but can accept as props for controlled components\n\n  /* eslint-disable react/no-unused-prop-types */\n  selectedItem: PropTypes.any,\n  isOpen: PropTypes.bool,\n  inputValue: PropTypes.string,\n  highlightedIndex: PropTypes.number,\n  labelId: PropTypes.string,\n  inputId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func\n  /* eslint-enable react/no-unused-prop-types */\n\n} : void 0;\nvar Downshift$1 = Downshift;\n\nfunction validateGetMenuPropsCalledCorrectly(node, _ref3) {\n  let {\n    refKey\n  } = _ref3;\n\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(`downshift: The ref prop \"${refKey}\" from getMenuProps was not applied correctly on your menu element.`);\n  }\n}\n\nfunction validateGetRootPropsCalledCorrectly(element, _ref4) {\n  let {\n    refKey\n  } = _ref4;\n  const refKeySpecified = refKey !== 'ref';\n  const isComposite = !isDOMElement(element);\n\n  if (isComposite && !refKeySpecified && !isForwardRef(element)) {\n    // eslint-disable-next-line no-console\n    console.error('downshift: You returned a non-DOM element. You must specify a refKey in getRootProps');\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(`downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \"${refKey}\"`);\n  }\n\n  if (!isForwardRef(element) && !getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(`downshift: You must apply the ref prop \"${refKey}\" from getRootProps onto your root element.`);\n  }\n}\n\nconst dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: ''\n};\n\nfunction callOnChangeProps(action, state, newState) {\n  const {\n    props,\n    type\n  } = action;\n  const changes = {};\n  Object.keys(state).forEach(key => {\n    invokeOnChangeHandler(key, action, state, newState);\n\n    if (newState[key] !== state[key]) {\n      changes[key] = newState[key];\n    }\n  });\n\n  if (props.onStateChange && Object.keys(changes).length) {\n    props.onStateChange({\n      type,\n      ...changes\n    });\n  }\n}\n\nfunction invokeOnChangeHandler(key, action, state, newState) {\n  const {\n    props,\n    type\n  } = action;\n  const handler = `on${capitalizeString(key)}Change`;\n\n  if (props[handler] && newState[key] !== undefined && newState[key] !== state[key]) {\n    props[handler]({\n      type,\n      ...newState\n    });\n  }\n}\n/**\n * Default state reducer that returns the changes.\n *\n * @param {Object} s state.\n * @param {Object} a action with changes.\n * @returns {Object} changes.\n */\n\n\nfunction stateReducer(s, a) {\n  return a.changes;\n}\n/**\n * Returns a message to be added to aria-live region when item is selected.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\n\nfunction getA11ySelectionMessage(selectionParameters) {\n  const {\n    selectedItem,\n    itemToString: itemToStringLocal\n  } = selectionParameters;\n  return selectedItem ? `${itemToStringLocal(selectedItem)} has been selected.` : '';\n}\n/**\n * Debounced call for updating the a11y message.\n */\n\n\nconst updateA11yStatus = debounce((getA11yMessage, document) => {\n  setStatus(getA11yMessage(), document);\n}, 200); // istanbul ignore next\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction useElementIds(_ref) {\n  let {\n    id = `downshift-${generateId()}`,\n    labelId,\n    menuId,\n    getItemId,\n    toggleButtonId,\n    inputId\n  } = _ref;\n  const elementIdsRef = useRef({\n    labelId: labelId || `${id}-label`,\n    menuId: menuId || `${id}-menu`,\n    getItemId: getItemId || (index => `${id}-item-${index}`),\n    toggleButtonId: toggleButtonId || `${id}-toggle-button`,\n    inputId: inputId || `${id}-input`\n  });\n  return elementIdsRef.current;\n}\n\nfunction getItemIndex(index, item, items) {\n  if (index !== undefined) {\n    return index;\n  }\n\n  if (items.length === 0) {\n    return -1;\n  }\n\n  return items.indexOf(item);\n}\n\nfunction itemToString(item) {\n  return item ? String(item) : '';\n}\n\nfunction isAcceptedCharacterKey(key) {\n  return /^\\S{1}$/.test(key);\n}\n\nfunction capitalizeString(string) {\n  return `${string.slice(0, 1).toUpperCase()}${string.slice(1)}`;\n}\n\nfunction useLatestRef(val) {\n  const ref = useRef(val); // technically this is not \"concurrent mode safe\" because we're manipulating\n  // the value during render (so it's not idempotent). However, the places this\n  // hook is used is to support memoizing callbacks which will be called\n  // *during* render, so we need the latest values *during* render.\n  // If not for this, then we'd probably want to use useLayoutEffect instead.\n\n  ref.current = val;\n  return ref;\n}\n/**\n * Computes the controlled state using a the previous state, props,\n * two reducers, one from downshift and an optional one from the user.\n * Also calls the onChange handlers for state values that have changed.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\n\nfunction useEnhancedReducer(reducer, initialState, props) {\n  const prevStateRef = useRef();\n  const actionRef = useRef();\n  const enhancedReducer = useCallback((state, action) => {\n    actionRef.current = action;\n    state = getState(state, action.props);\n    const changes = reducer(state, action);\n    const newState = action.props.stateReducer(state, { ...action,\n      changes\n    });\n    return newState;\n  }, [reducer]);\n  const [state, dispatch] = useReducer(enhancedReducer, initialState);\n  const propsRef = useLatestRef(props);\n  const dispatchWithProps = useCallback(action => dispatch({\n    props: propsRef.current,\n    ...action\n  }), [propsRef]);\n  const action = actionRef.current;\n  useEffect(() => {\n    if (action && prevStateRef.current && prevStateRef.current !== state) {\n      callOnChangeProps(action, getState(prevStateRef.current, action.props), state);\n    }\n\n    prevStateRef.current = state;\n  }, [state, props, action]);\n  return [state, dispatchWithProps];\n}\n/**\n * Wraps the useEnhancedReducer and applies the controlled prop values before\n * returning the new state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\n\nfunction useControlledReducer$1(reducer, initialState, props) {\n  const [state, dispatch] = useEnhancedReducer(reducer, initialState, props);\n  return [getState(state, props), dispatch];\n}\n\nconst defaultProps$3 = {\n  itemToString,\n  stateReducer,\n  getA11ySelectionMessage,\n  scrollIntoView,\n  circularNavigation: false,\n  environment:\n  /* istanbul ignore next (ssr) */\n  typeof window === 'undefined' ? {} : window\n};\n\nfunction getDefaultValue$1(props, propKey, defaultStateValues) {\n  if (defaultStateValues === void 0) {\n    defaultStateValues = dropdownDefaultStateValues;\n  }\n\n  const defaultValue = props[`default${capitalizeString(propKey)}`];\n\n  if (defaultValue !== undefined) {\n    return defaultValue;\n  }\n\n  return defaultStateValues[propKey];\n}\n\nfunction getInitialValue$1(props, propKey, defaultStateValues) {\n  if (defaultStateValues === void 0) {\n    defaultStateValues = dropdownDefaultStateValues;\n  }\n\n  const value = props[propKey];\n\n  if (value !== undefined) {\n    return value;\n  }\n\n  const initialValue = props[`initial${capitalizeString(propKey)}`];\n\n  if (initialValue !== undefined) {\n    return initialValue;\n  }\n\n  return getDefaultValue$1(props, propKey, defaultStateValues);\n}\n\nfunction getInitialState$2(props) {\n  const selectedItem = getInitialValue$1(props, 'selectedItem');\n  const isOpen = getInitialValue$1(props, 'isOpen');\n  const highlightedIndex = getInitialValue$1(props, 'highlightedIndex');\n  const inputValue = getInitialValue$1(props, 'inputValue');\n  return {\n    highlightedIndex: highlightedIndex < 0 && selectedItem && isOpen ? props.items.indexOf(selectedItem) : highlightedIndex,\n    isOpen,\n    selectedItem,\n    inputValue\n  };\n}\n\nfunction getHighlightedIndexOnOpen(props, state, offset, getItemNodeFromIndex) {\n  const {\n    items,\n    initialHighlightedIndex,\n    defaultHighlightedIndex\n  } = props;\n  const {\n    selectedItem,\n    highlightedIndex\n  } = state;\n\n  if (items.length === 0) {\n    return -1;\n  } // initialHighlightedIndex will give value to highlightedIndex on initial state only.\n\n\n  if (initialHighlightedIndex !== undefined && highlightedIndex === initialHighlightedIndex) {\n    return initialHighlightedIndex;\n  }\n\n  if (defaultHighlightedIndex !== undefined) {\n    return defaultHighlightedIndex;\n  }\n\n  if (selectedItem) {\n    if (offset === 0) {\n      return items.indexOf(selectedItem);\n    }\n\n    return getNextWrappingIndex(offset, items.indexOf(selectedItem), items.length, getItemNodeFromIndex, false);\n  }\n\n  if (offset === 0) {\n    return -1;\n  }\n\n  return offset < 0 ? items.length - 1 : 0;\n}\n/**\n * Reuse the movement tracking of mouse and touch events.\n *\n * @param {boolean} isOpen Whether the dropdown is open or not.\n * @param {Array<Object>} downshiftElementRefs Downshift element refs to track movement (toggleButton, menu etc.)\n * @param {Object} environment Environment where component/hook exists.\n * @param {Function} handleBlur Handler on blur from mouse or touch.\n * @returns {Object} Ref containing whether mouseDown or touchMove event is happening\n */\n\n\nfunction useMouseAndTouchTracker(isOpen, downshiftElementRefs, environment, handleBlur) {\n  const mouseAndTouchTrackersRef = useRef({\n    isMouseDown: false,\n    isTouchMove: false\n  });\n  useEffect(() => {\n    // The same strategy for checking if a click occurred inside or outside downsift\n    // as in downshift.js.\n    const onMouseDown = () => {\n      mouseAndTouchTrackersRef.current.isMouseDown = true;\n    };\n\n    const onMouseUp = event => {\n      mouseAndTouchTrackersRef.current.isMouseDown = false;\n\n      if (isOpen && !targetWithinDownshift(event.target, downshiftElementRefs.map(ref => ref.current), environment)) {\n        handleBlur();\n      }\n    };\n\n    const onTouchStart = () => {\n      mouseAndTouchTrackersRef.current.isTouchMove = false;\n    };\n\n    const onTouchMove = () => {\n      mouseAndTouchTrackersRef.current.isTouchMove = true;\n    };\n\n    const onTouchEnd = event => {\n      if (isOpen && !mouseAndTouchTrackersRef.current.isTouchMove && !targetWithinDownshift(event.target, downshiftElementRefs.map(ref => ref.current), environment, false)) {\n        handleBlur();\n      }\n    };\n\n    environment.addEventListener('mousedown', onMouseDown);\n    environment.addEventListener('mouseup', onMouseUp);\n    environment.addEventListener('touchstart', onTouchStart);\n    environment.addEventListener('touchmove', onTouchMove);\n    environment.addEventListener('touchend', onTouchEnd);\n    return function cleanup() {\n      environment.removeEventListener('mousedown', onMouseDown);\n      environment.removeEventListener('mouseup', onMouseUp);\n      environment.removeEventListener('touchstart', onTouchStart);\n      environment.removeEventListener('touchmove', onTouchMove);\n      environment.removeEventListener('touchend', onTouchEnd);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, environment]);\n  return mouseAndTouchTrackersRef;\n}\n/* istanbul ignore next */\n// eslint-disable-next-line import/no-mutable-exports\n\n\nlet useGetterPropsCalledChecker = () => noop;\n/**\n * Custom hook that checks if getter props are called correctly.\n *\n * @param  {...any} propKeys Getter prop names to be handled.\n * @returns {Function} Setter function called inside getter props to set call information.\n */\n\n/* istanbul ignore next */\n\n\nif (process.env.NODE_ENV !== 'production') {\n  useGetterPropsCalledChecker = function () {\n    const isInitialMountRef = useRef(true);\n\n    for (var _len = arguments.length, propKeys = new Array(_len), _key = 0; _key < _len; _key++) {\n      propKeys[_key] = arguments[_key];\n    }\n\n    const getterPropsCalledRef = useRef(propKeys.reduce((acc, propKey) => {\n      acc[propKey] = {};\n      return acc;\n    }, {}));\n    useEffect(() => {\n      Object.keys(getterPropsCalledRef.current).forEach(propKey => {\n        const propCallInfo = getterPropsCalledRef.current[propKey];\n\n        if (isInitialMountRef.current) {\n          if (!Object.keys(propCallInfo).length) {\n            // eslint-disable-next-line no-console\n            console.error(`downshift: You forgot to call the ${propKey} getter function on your component / element.`);\n            return;\n          }\n        }\n\n        const {\n          suppressRefError,\n          refKey,\n          elementRef\n        } = propCallInfo;\n\n        if ((!elementRef || !elementRef.current) && !suppressRefError) {\n          // eslint-disable-next-line no-console\n          console.error(`downshift: The ref prop \"${refKey}\" from ${propKey} was not applied correctly on your element.`);\n        }\n      });\n      isInitialMountRef.current = false;\n    });\n    const setGetterPropCallInfo = useCallback((propKey, suppressRefError, refKey, elementRef) => {\n      getterPropsCalledRef.current[propKey] = {\n        suppressRefError,\n        refKey,\n        elementRef\n      };\n    }, []);\n    return setGetterPropCallInfo;\n  };\n}\n\nfunction useA11yMessageSetter(getA11yMessage, dependencyArray, _ref2) {\n  let {\n    isInitialMount,\n    highlightedIndex,\n    items,\n    environment,\n    ...rest\n  } = _ref2;\n  // Sets a11y status message on changes in state.\n  useEffect(() => {\n    if (isInitialMount || false) {\n      return;\n    }\n\n    updateA11yStatus(() => getA11yMessage({\n      highlightedIndex,\n      highlightedItem: items[highlightedIndex],\n      resultCount: items.length,\n      ...rest\n    }), environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencyArray);\n}\n\nfunction useScrollIntoView(_ref3) {\n  let {\n    highlightedIndex,\n    isOpen,\n    itemRefs,\n    getItemNodeFromIndex,\n    menuElement,\n    scrollIntoView: scrollIntoViewProp\n  } = _ref3;\n  // used not to scroll on highlight by mouse.\n  const shouldScrollRef = useRef(true); // Scroll on highlighted item if change comes from keyboard.\n\n  useIsomorphicLayoutEffect(() => {\n    if (highlightedIndex < 0 || !isOpen || !Object.keys(itemRefs.current).length) {\n      return;\n    }\n\n    if (shouldScrollRef.current === false) {\n      shouldScrollRef.current = true;\n    } else {\n      scrollIntoViewProp(getItemNodeFromIndex(highlightedIndex), menuElement);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [highlightedIndex]);\n  return shouldScrollRef;\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nlet useControlPropsValidator = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  useControlPropsValidator = _ref4 => {\n    let {\n      isInitialMount,\n      props,\n      state\n    } = _ref4;\n    // used for checking when props are moving from controlled to uncontrolled.\n    const prevPropsRef = useRef(props);\n    useEffect(() => {\n      if (isInitialMount) {\n        return;\n      }\n\n      validateControlledUnchanged(state, prevPropsRef.current, props);\n      prevPropsRef.current = props;\n    }, [state, props, isInitialMount]);\n  };\n}\n\n/* eslint-disable complexity */\n\nfunction downshiftCommonReducer(state, action, stateChangeTypes) {\n  const {\n    type,\n    props\n  } = action;\n  let changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemMouseMove:\n      changes = {\n        highlightedIndex: action.disabled ? -1 : action.index\n      };\n      break;\n\n    case stateChangeTypes.MenuMouseLeave:\n      changes = {\n        highlightedIndex: -1\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n        highlightedIndex: state.isOpen ? -1 : getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case stateChangeTypes.FunctionSetHighlightedIndex:\n      changes = {\n        highlightedIndex: action.highlightedIndex\n      };\n      break;\n\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        selectedItem: getDefaultValue$1(props, 'selectedItem'),\n        inputValue: getDefaultValue$1(props, 'inputValue')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return { ...state,\n    ...changes\n  };\n}\n/* eslint-enable complexity */\n\nfunction getItemIndexByCharacterKey(_a) {\n    var keysSoFar = _a.keysSoFar, highlightedIndex = _a.highlightedIndex, items = _a.items, itemToString = _a.itemToString, getItemNodeFromIndex = _a.getItemNodeFromIndex;\n    var lowerCasedKeysSoFar = keysSoFar.toLowerCase();\n    for (var index = 0; index < items.length; index++) {\n        var offsetIndex = (index + highlightedIndex + 1) % items.length;\n        var item = items[offsetIndex];\n        if (item !== undefined &&\n            itemToString(item)\n                .toLowerCase()\n                .startsWith(lowerCasedKeysSoFar)) {\n            var element = getItemNodeFromIndex(offsetIndex);\n            if (!(element === null || element === void 0 ? void 0 : element.hasAttribute('disabled'))) {\n                return offsetIndex;\n            }\n        }\n    }\n    return highlightedIndex;\n}\nvar propTypes$2 = {\n    items: PropTypes.array.isRequired,\n    itemToString: PropTypes.func,\n    getA11yStatusMessage: PropTypes.func,\n    getA11ySelectionMessage: PropTypes.func,\n    circularNavigation: PropTypes.bool,\n    highlightedIndex: PropTypes.number,\n    defaultHighlightedIndex: PropTypes.number,\n    initialHighlightedIndex: PropTypes.number,\n    isOpen: PropTypes.bool,\n    defaultIsOpen: PropTypes.bool,\n    initialIsOpen: PropTypes.bool,\n    selectedItem: PropTypes.any,\n    initialSelectedItem: PropTypes.any,\n    defaultSelectedItem: PropTypes.any,\n    id: PropTypes.string,\n    labelId: PropTypes.string,\n    menuId: PropTypes.string,\n    getItemId: PropTypes.func,\n    toggleButtonId: PropTypes.string,\n    stateReducer: PropTypes.func,\n    onSelectedItemChange: PropTypes.func,\n    onHighlightedIndexChange: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onIsOpenChange: PropTypes.func,\n    environment: PropTypes.shape({\n        addEventListener: PropTypes.func,\n        removeEventListener: PropTypes.func,\n        document: PropTypes.shape({\n            getElementById: PropTypes.func,\n            activeElement: PropTypes.any,\n            body: PropTypes.any\n        })\n    })\n};\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specift if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\nfunction getA11yStatusMessage(_a) {\n    var isOpen = _a.isOpen, resultCount = _a.resultCount, previousResultCount = _a.previousResultCount;\n    if (!isOpen) {\n        return '';\n    }\n    if (!resultCount) {\n        return 'No results are available.';\n    }\n    if (resultCount !== previousResultCount) {\n        return \"\".concat(resultCount, \" result\").concat(resultCount === 1 ? ' is' : 's are', \" available, use up and down arrow keys to navigate. Press Enter or Space Bar keys to select.\");\n    }\n    return '';\n}\nvar defaultProps$2 = __assign(__assign({}, defaultProps$3), { getA11yStatusMessage: getA11yStatusMessage });\n// eslint-disable-next-line import/no-mutable-exports\nvar validatePropTypes$2 = noop;\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n    validatePropTypes$2 = function (options, caller) {\n        PropTypes.checkPropTypes(propTypes$2, options, 'prop', caller.name);\n    };\n}\n\nconst MenuKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_down__' : 0;\nconst MenuKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_up__' : 1;\nconst MenuKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_escape__' : 2;\nconst MenuKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_home__' : 3;\nconst MenuKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_end__' : 4;\nconst MenuKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_enter__' : 5;\nconst MenuKeyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_space_button__' : 6;\nconst MenuKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_character__' : 7;\nconst MenuBlur = process.env.NODE_ENV !== \"production\" ? '__menu_blur__' : 8;\nconst MenuMouseLeave$1 = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 9;\nconst ItemMouseMove$1 = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 10;\nconst ItemClick$1 = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 11;\nconst ToggleButtonClick$1 = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 12;\nconst ToggleButtonKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_down__' : 13;\nconst ToggleButtonKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_up__' : 14;\nconst ToggleButtonKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_character__' : 15;\nconst FunctionToggleMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 16;\nconst FunctionOpenMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 17;\nconst FunctionCloseMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 18;\nconst FunctionSetHighlightedIndex$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 19;\nconst FunctionSelectItem$1 = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 20;\nconst FunctionSetInputValue$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 21;\nconst FunctionReset$2 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 22;\n\nvar stateChangeTypes$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MenuKeyDownArrowDown: MenuKeyDownArrowDown,\n  MenuKeyDownArrowUp: MenuKeyDownArrowUp,\n  MenuKeyDownEscape: MenuKeyDownEscape,\n  MenuKeyDownHome: MenuKeyDownHome,\n  MenuKeyDownEnd: MenuKeyDownEnd,\n  MenuKeyDownEnter: MenuKeyDownEnter,\n  MenuKeyDownSpaceButton: MenuKeyDownSpaceButton,\n  MenuKeyDownCharacter: MenuKeyDownCharacter,\n  MenuBlur: MenuBlur,\n  MenuMouseLeave: MenuMouseLeave$1,\n  ItemMouseMove: ItemMouseMove$1,\n  ItemClick: ItemClick$1,\n  ToggleButtonClick: ToggleButtonClick$1,\n  ToggleButtonKeyDownArrowDown: ToggleButtonKeyDownArrowDown,\n  ToggleButtonKeyDownArrowUp: ToggleButtonKeyDownArrowUp,\n  ToggleButtonKeyDownCharacter: ToggleButtonKeyDownCharacter,\n  FunctionToggleMenu: FunctionToggleMenu$1,\n  FunctionOpenMenu: FunctionOpenMenu$1,\n  FunctionCloseMenu: FunctionCloseMenu$1,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex$1,\n  FunctionSelectItem: FunctionSelectItem$1,\n  FunctionSetInputValue: FunctionSetInputValue$1,\n  FunctionReset: FunctionReset$2\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftSelectReducer(state, action) {\n  const {\n    type,\n    props,\n    shiftKey\n  } = action;\n  let changes;\n\n  switch (type) {\n    case ItemClick$1:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index]\n      };\n      break;\n\n    case ToggleButtonKeyDownCharacter:\n      {\n        const lowercasedKey = action.key;\n        const inputValue = `${state.inputValue}${lowercasedKey}`;\n        const itemIndex = getItemIndexByCharacterKey({\n          keysSoFar: inputValue,\n          highlightedIndex: state.selectedItem ? props.items.indexOf(state.selectedItem) : -1,\n          items: props.items,\n          itemToString: props.itemToString,\n          getItemNodeFromIndex: action.getItemNodeFromIndex\n        });\n        changes = {\n          inputValue,\n          ...(itemIndex >= 0 && {\n            selectedItem: props.items[itemIndex]\n          })\n        };\n      }\n      break;\n\n    case ToggleButtonKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n\n    case ToggleButtonKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n\n    case MenuKeyDownEnter:\n    case MenuKeyDownSpaceButton:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        ...(state.highlightedIndex >= 0 && {\n          selectedItem: props.items[state.highlightedIndex]\n        })\n      };\n      break;\n\n    case MenuKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case MenuKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case MenuKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuKeyDownCharacter:\n      {\n        const lowercasedKey = action.key;\n        const inputValue = `${state.inputValue}${lowercasedKey}`;\n        const highlightedIndex = getItemIndexByCharacterKey({\n          keysSoFar: inputValue,\n          highlightedIndex: state.highlightedIndex,\n          items: props.items,\n          itemToString: props.itemToString,\n          getItemNodeFromIndex: action.getItemNodeFromIndex\n        });\n        changes = {\n          inputValue,\n          ...(highlightedIndex >= 0 && {\n            highlightedIndex\n          })\n        };\n      }\n      break;\n\n    case MenuKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n\n    case MenuKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n\n    case FunctionSelectItem$1:\n      changes = {\n        selectedItem: action.selectedItem\n      };\n      break;\n\n    default:\n      return downshiftCommonReducer(state, action, stateChangeTypes$2);\n  }\n\n  return { ...state,\n    ...changes\n  };\n}\n/* eslint-enable complexity */\n\n/* eslint-disable max-statements */\nuseSelect.stateChangeTypes = stateChangeTypes$2;\n\nfunction useSelect(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes$2(userProps, useSelect); // Props defaults and destructuring.\n\n  const props = { ...defaultProps$2,\n    ...userProps\n  };\n  const {\n    items,\n    scrollIntoView,\n    environment,\n    initialIsOpen,\n    defaultIsOpen,\n    itemToString,\n    getA11ySelectionMessage,\n    getA11yStatusMessage\n  } = props; // Initial state depending on controlled props.\n\n  const initialState = getInitialState$2(props);\n  const [state, dispatch] = useControlledReducer$1(downshiftSelectReducer, initialState, props);\n  const {\n    isOpen,\n    highlightedIndex,\n    selectedItem,\n    inputValue\n  } = state; // Element efs.\n\n  const toggleButtonRef = useRef(null);\n  const menuRef = useRef(null);\n  const itemRefs = useRef({}); // used not to trigger menu blur action in some scenarios.\n\n  const shouldBlurRef = useRef(true); // used to keep the inputValue clearTimeout object between renders.\n\n  const clearTimeoutRef = useRef(null); // prevent id re-generation between renders.\n\n  const elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.\n\n  const previousResultCountRef = useRef();\n  const isInitialMountRef = useRef(true); // utility callback to get item element.\n\n  const latest = useLatestRef({\n    state,\n    props\n  }); // Some utils.\n\n  const getItemNodeFromIndex = useCallback(index => itemRefs.current[elementIds.getItemId(index)], [elementIds]); // Effects.\n  // Sets a11y status message on changes in state.\n\n  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], {\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items,\n    environment,\n    itemToString,\n    ...state\n  }); // Sets a11y status message on changes in selectedItem.\n\n  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], {\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items,\n    environment,\n    itemToString,\n    ...state\n  }); // Scroll on highlighted item if change comes from keyboard.\n\n  const shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex,\n    isOpen,\n    itemRefs,\n    scrollIntoView,\n    getItemNodeFromIndex\n  }); // Sets cleanup for the keysSoFar callback, debounded after 500ms.\n\n  useEffect(() => {\n    // init the clean function here as we need access to dispatch.\n    clearTimeoutRef.current = debounce(outerDispatch => {\n      outerDispatch({\n        type: FunctionSetInputValue$1,\n        inputValue: ''\n      });\n    }, 500); // Cancel any pending debounced calls on mount\n\n    return () => {\n      clearTimeoutRef.current.cancel();\n    };\n  }, []); // Invokes the keysSoFar callback set up above.\n\n  useEffect(() => {\n    if (!inputValue) {\n      return;\n    }\n\n    clearTimeoutRef.current(dispatch);\n  }, [dispatch, inputValue]);\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props,\n    state\n  });\n  /* Controls the focus on the menu or the toggle button. */\n\n  useEffect(() => {\n    // Don't focus menu on first render.\n    if (isInitialMountRef.current) {\n      // Unless it was initialised as open.\n      if ((initialIsOpen || defaultIsOpen || isOpen) && menuRef.current) {\n        menuRef.current.focus();\n      }\n\n      return;\n    } // Focus menu on open.\n\n\n    if (isOpen) {\n      // istanbul ignore else\n      if (menuRef.current) {\n        menuRef.current.focus();\n      }\n\n      return;\n    } // Focus toggleButton on close, but not if it was closed with (Shift+)Tab.\n\n\n    if (environment.document.activeElement === menuRef.current) {\n      // istanbul ignore else\n      if (toggleButtonRef.current) {\n        shouldBlurRef.current = false;\n        toggleButtonRef.current.focus();\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen]);\n  useEffect(() => {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    previousResultCountRef.current = items.length;\n  }); // Add mouse/touch events to document.\n\n  const mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [menuRef, toggleButtonRef], environment, () => {\n    dispatch({\n      type: MenuBlur\n    });\n  });\n  const setGetterPropCallInfo = useGetterPropsCalledChecker('getMenuProps', 'getToggleButtonProps'); // Make initial ref false.\n\n  useEffect(() => {\n    isInitialMountRef.current = false;\n  }, []); // Reset itemRefs on close.\n\n  useEffect(() => {\n    if (!isOpen) {\n      itemRefs.current = {};\n    }\n  }, [isOpen]); // Event handler functions.\n\n  const toggleButtonKeyDownHandlers = useMemo(() => ({\n    ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: ToggleButtonKeyDownArrowDown,\n        getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    },\n\n    ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: ToggleButtonKeyDownArrowUp,\n        getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    }\n\n  }), [dispatch, getItemNodeFromIndex]);\n  const menuKeyDownHandlers = useMemo(() => ({\n    ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownArrowDown,\n        getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    },\n\n    ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownArrowUp,\n        getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    },\n\n    Home(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownHome,\n        getItemNodeFromIndex\n      });\n    },\n\n    End(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownEnd,\n        getItemNodeFromIndex\n      });\n    },\n\n    Escape() {\n      dispatch({\n        type: MenuKeyDownEscape\n      });\n    },\n\n    Enter(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownEnter\n      });\n    },\n\n    ' '(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownSpaceButton\n      });\n    }\n\n  }), [dispatch, getItemNodeFromIndex]); // Action functions.\n\n  const toggleMenu = useCallback(() => {\n    dispatch({\n      type: FunctionToggleMenu$1\n    });\n  }, [dispatch]);\n  const closeMenu = useCallback(() => {\n    dispatch({\n      type: FunctionCloseMenu$1\n    });\n  }, [dispatch]);\n  const openMenu = useCallback(() => {\n    dispatch({\n      type: FunctionOpenMenu$1\n    });\n  }, [dispatch]);\n  const setHighlightedIndex = useCallback(newHighlightedIndex => {\n    dispatch({\n      type: FunctionSetHighlightedIndex$1,\n      highlightedIndex: newHighlightedIndex\n    });\n  }, [dispatch]);\n  const selectItem = useCallback(newSelectedItem => {\n    dispatch({\n      type: FunctionSelectItem$1,\n      selectedItem: newSelectedItem\n    });\n  }, [dispatch]);\n  const reset = useCallback(() => {\n    dispatch({\n      type: FunctionReset$2\n    });\n  }, [dispatch]);\n  const setInputValue = useCallback(newInputValue => {\n    dispatch({\n      type: FunctionSetInputValue$1,\n      inputValue: newInputValue\n    });\n  }, [dispatch]); // Getter functions.\n\n  const getLabelProps = useCallback(labelProps => ({\n    id: elementIds.labelId,\n    htmlFor: elementIds.toggleButtonId,\n    ...labelProps\n  }), [elementIds]);\n  const getMenuProps = useCallback(function (_temp, _temp2) {\n    let {\n      onMouseLeave,\n      refKey = 'ref',\n      onKeyDown,\n      onBlur,\n      ref,\n      ...rest\n    } = _temp === void 0 ? {} : _temp;\n    let {\n      suppressRefError = false\n    } = _temp2 === void 0 ? {} : _temp2;\n    const latestState = latest.current.state;\n\n    const menuHandleKeyDown = event => {\n      const key = normalizeArrowKey(event);\n\n      if (key && menuKeyDownHandlers[key]) {\n        menuKeyDownHandlers[key](event);\n      } else if (isAcceptedCharacterKey(key)) {\n        dispatch({\n          type: MenuKeyDownCharacter,\n          key,\n          getItemNodeFromIndex\n        });\n      }\n    };\n\n    const menuHandleBlur = () => {\n      // if the blur was a result of selection, we don't trigger this action.\n      if (shouldBlurRef.current === false) {\n        shouldBlurRef.current = true;\n        return;\n      }\n\n      const shouldBlur = !mouseAndTouchTrackersRef.current.isMouseDown;\n      /* istanbul ignore else */\n\n      if (shouldBlur) {\n        dispatch({\n          type: MenuBlur\n        });\n      }\n    };\n\n    const menuHandleMouseLeave = () => {\n      dispatch({\n        type: MenuMouseLeave$1\n      });\n    };\n\n    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);\n    return {\n      [refKey]: handleRefs(ref, menuNode => {\n        menuRef.current = menuNode;\n      }),\n      id: elementIds.menuId,\n      role: 'listbox',\n      'aria-labelledby': elementIds.labelId,\n      tabIndex: -1,\n      ...(latestState.isOpen && latestState.highlightedIndex > -1 && {\n        'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)\n      }),\n      onMouseLeave: callAllEventHandlers(onMouseLeave, menuHandleMouseLeave),\n      onKeyDown: callAllEventHandlers(onKeyDown, menuHandleKeyDown),\n      onBlur: callAllEventHandlers(onBlur, menuHandleBlur),\n      ...rest\n    };\n  }, [dispatch, latest, menuKeyDownHandlers, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);\n  const getToggleButtonProps = useCallback(function (_temp3, _temp4) {\n    let {\n      onClick,\n      onKeyDown,\n      refKey = 'ref',\n      ref,\n      ...rest\n    } = _temp3 === void 0 ? {} : _temp3;\n    let {\n      suppressRefError = false\n    } = _temp4 === void 0 ? {} : _temp4;\n\n    const toggleButtonHandleClick = () => {\n      dispatch({\n        type: ToggleButtonClick$1\n      });\n    };\n\n    const toggleButtonHandleKeyDown = event => {\n      const key = normalizeArrowKey(event);\n\n      if (key && toggleButtonKeyDownHandlers[key]) {\n        toggleButtonKeyDownHandlers[key](event);\n      } else if (isAcceptedCharacterKey(key)) {\n        dispatch({\n          type: ToggleButtonKeyDownCharacter,\n          key,\n          getItemNodeFromIndex\n        });\n      }\n    };\n\n    const toggleProps = {\n      [refKey]: handleRefs(ref, toggleButtonNode => {\n        toggleButtonRef.current = toggleButtonNode;\n      }),\n      id: elementIds.toggleButtonId,\n      'aria-haspopup': 'listbox',\n      'aria-expanded': latest.current.state.isOpen,\n      'aria-labelledby': `${elementIds.labelId} ${elementIds.toggleButtonId}`,\n      ...rest\n    };\n\n    if (!rest.disabled) {\n      toggleProps.onClick = callAllEventHandlers(onClick, toggleButtonHandleClick);\n      toggleProps.onKeyDown = callAllEventHandlers(onKeyDown, toggleButtonHandleKeyDown);\n    }\n\n    setGetterPropCallInfo('getToggleButtonProps', suppressRefError, refKey, toggleButtonRef);\n    return toggleProps;\n  }, [dispatch, latest, toggleButtonKeyDownHandlers, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);\n  const getItemProps = useCallback(function (_temp5) {\n    let {\n      item,\n      index,\n      onMouseMove,\n      onClick,\n      refKey = 'ref',\n      ref,\n      disabled,\n      ...rest\n    } = _temp5 === void 0 ? {} : _temp5;\n    const {\n      state: latestState,\n      props: latestProps\n    } = latest.current;\n\n    const itemHandleMouseMove = () => {\n      if (index === latestState.highlightedIndex) {\n        return;\n      }\n\n      shouldScrollRef.current = false;\n      dispatch({\n        type: ItemMouseMove$1,\n        index,\n        disabled\n      });\n    };\n\n    const itemHandleClick = () => {\n      dispatch({\n        type: ItemClick$1,\n        index\n      });\n    };\n\n    const itemIndex = getItemIndex(index, item, latestProps.items);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either item or item index in getItemProps!');\n    }\n\n    const itemProps = {\n      disabled,\n      role: 'option',\n      'aria-selected': `${itemIndex === latestState.highlightedIndex}`,\n      id: elementIds.getItemId(itemIndex),\n      [refKey]: handleRefs(ref, itemNode => {\n        if (itemNode) {\n          itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;\n        }\n      }),\n      ...rest\n    };\n\n    if (!disabled) {\n      itemProps.onClick = callAllEventHandlers(onClick, itemHandleClick);\n    }\n\n    itemProps.onMouseMove = callAllEventHandlers(onMouseMove, itemHandleMouseMove);\n    return itemProps;\n  }, [dispatch, latest, shouldScrollRef, elementIds]);\n  return {\n    // prop getters.\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    // actions.\n    toggleMenu,\n    openMenu,\n    closeMenu,\n    setHighlightedIndex,\n    selectItem,\n    reset,\n    setInputValue,\n    // state.\n    highlightedIndex,\n    isOpen,\n    selectedItem,\n    inputValue\n  };\n}\n\nconst InputKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_down__' : 0;\nconst InputKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_up__' : 1;\nconst InputKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__input_keydown_escape__' : 2;\nconst InputKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__input_keydown_home__' : 3;\nconst InputKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__input_keydown_end__' : 4;\nconst InputKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__input_keydown_enter__' : 5;\nconst InputChange = process.env.NODE_ENV !== \"production\" ? '__input_change__' : 6;\nconst InputBlur = process.env.NODE_ENV !== \"production\" ? '__input_blur__' : 7;\nconst MenuMouseLeave = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 8;\nconst ItemMouseMove = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 9;\nconst ItemClick = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 10;\nconst ToggleButtonClick = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 11;\nconst FunctionToggleMenu = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 12;\nconst FunctionOpenMenu = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 13;\nconst FunctionCloseMenu = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 14;\nconst FunctionSetHighlightedIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 15;\nconst FunctionSelectItem = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 16;\nconst FunctionSetInputValue = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 17;\nconst FunctionReset$1 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 18;\nconst ControlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__controlled_prop_updated_selected_item__' : 19;\n\nvar stateChangeTypes$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  InputKeyDownArrowDown: InputKeyDownArrowDown,\n  InputKeyDownArrowUp: InputKeyDownArrowUp,\n  InputKeyDownEscape: InputKeyDownEscape,\n  InputKeyDownHome: InputKeyDownHome,\n  InputKeyDownEnd: InputKeyDownEnd,\n  InputKeyDownEnter: InputKeyDownEnter,\n  InputChange: InputChange,\n  InputBlur: InputBlur,\n  MenuMouseLeave: MenuMouseLeave,\n  ItemMouseMove: ItemMouseMove,\n  ItemClick: ItemClick,\n  ToggleButtonClick: ToggleButtonClick,\n  FunctionToggleMenu: FunctionToggleMenu,\n  FunctionOpenMenu: FunctionOpenMenu,\n  FunctionCloseMenu: FunctionCloseMenu,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex,\n  FunctionSelectItem: FunctionSelectItem,\n  FunctionSetInputValue: FunctionSetInputValue,\n  FunctionReset: FunctionReset$1,\n  ControlledPropUpdatedSelectedItem: ControlledPropUpdatedSelectedItem\n});\n\nfunction getInitialState$1(props) {\n  const initialState = getInitialState$2(props);\n  const {\n    selectedItem\n  } = initialState;\n  let {\n    inputValue\n  } = initialState;\n\n  if (inputValue === '' && selectedItem && props.defaultInputValue === undefined && props.initialInputValue === undefined && props.inputValue === undefined) {\n    inputValue = props.itemToString(selectedItem);\n  }\n\n  return { ...initialState,\n    inputValue\n  };\n}\n\nconst propTypes$1 = {\n  items: PropTypes.array.isRequired,\n  itemToString: PropTypes.func,\n  getA11yStatusMessage: PropTypes.func,\n  getA11ySelectionMessage: PropTypes.func,\n  circularNavigation: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  inputValue: PropTypes.string,\n  defaultInputValue: PropTypes.string,\n  initialInputValue: PropTypes.string,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  inputId: PropTypes.string,\n  toggleButtonId: PropTypes.string,\n  stateReducer: PropTypes.func,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\n/**\n * The useCombobox version of useControlledReducer, which also\n * checks if the controlled prop selectedItem changed between\n * renders. If so, it will also update inputValue with its\n * string equivalent. It uses the common useEnhancedReducer to\n * compute the rest of the state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\nfunction useControlledReducer(reducer, initialState, props) {\n  const previousSelectedItemRef = useRef();\n  const [state, dispatch] = useEnhancedReducer(reducer, initialState, props); // ToDo: if needed, make same approach as selectedItemChanged from Downshift.\n\n  useEffect(() => {\n    if (isControlledProp(props, 'selectedItem')) {\n      if (previousSelectedItemRef.current !== props.selectedItem) {\n        dispatch({\n          type: ControlledPropUpdatedSelectedItem,\n          inputValue: props.itemToString(props.selectedItem)\n        });\n      }\n\n      previousSelectedItemRef.current = state.selectedItem === previousSelectedItemRef.current ? props.selectedItem : state.selectedItem;\n    }\n  });\n  return [getState(state, props), dispatch];\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nlet validatePropTypes$1 = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes$1 = (options, caller) => {\n    PropTypes.checkPropTypes(propTypes$1, options, 'prop', caller.name);\n  };\n}\n\nconst defaultProps$1 = { ...defaultProps$3,\n  getA11yStatusMessage: getA11yStatusMessage$1,\n  circularNavigation: true\n};\n\n/* eslint-disable complexity */\n\nfunction downshiftUseComboboxReducer(state, action) {\n  const {\n    type,\n    props,\n    shiftKey\n  } = action;\n  let changes;\n\n  switch (type) {\n    case ItemClick:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n\n    case InputKeyDownArrowDown:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n          isOpen: props.items.length >= 0\n        };\n      }\n\n      break;\n\n    case InputKeyDownArrowUp:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n          isOpen: props.items.length >= 0\n        };\n      }\n\n      break;\n\n    case InputKeyDownEnter:\n      changes = { ...(state.isOpen && state.highlightedIndex >= 0 && {\n          selectedItem: props.items[state.highlightedIndex],\n          isOpen: getDefaultValue$1(props, 'isOpen'),\n          highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n          inputValue: props.itemToString(props.items[state.highlightedIndex])\n        })\n      };\n      break;\n\n    case InputKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1,\n        ...(!state.isOpen && {\n          selectedItem: null,\n          inputValue: ''\n        })\n      };\n      break;\n\n    case InputKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case InputKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case InputBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1,\n        ...(state.highlightedIndex >= 0 && action.selectItem && {\n          selectedItem: props.items[state.highlightedIndex],\n          inputValue: props.itemToString(props.items[state.highlightedIndex])\n        })\n      };\n      break;\n\n    case InputChange:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        inputValue: action.inputValue\n      };\n      break;\n\n    case FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n\n    case ControlledPropUpdatedSelectedItem:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    default:\n      return downshiftCommonReducer(state, action, stateChangeTypes$1);\n  }\n\n  return { ...state,\n    ...changes\n  };\n}\n/* eslint-enable complexity */\n\n/* eslint-disable max-statements */\nuseCombobox.stateChangeTypes = stateChangeTypes$1;\n\nfunction useCombobox(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes$1(userProps, useCombobox); // Props defaults and destructuring.\n\n  const props = { ...defaultProps$1,\n    ...userProps\n  };\n  const {\n    initialIsOpen,\n    defaultIsOpen,\n    items,\n    scrollIntoView,\n    environment,\n    getA11yStatusMessage,\n    getA11ySelectionMessage,\n    itemToString\n  } = props; // Initial state depending on controlled props.\n\n  const initialState = getInitialState$1(props);\n  const [state, dispatch] = useControlledReducer(downshiftUseComboboxReducer, initialState, props);\n  const {\n    isOpen,\n    highlightedIndex,\n    selectedItem,\n    inputValue\n  } = state; // Element refs.\n\n  const menuRef = useRef(null);\n  const itemRefs = useRef({});\n  const inputRef = useRef(null);\n  const toggleButtonRef = useRef(null);\n  const comboboxRef = useRef(null);\n  const isInitialMountRef = useRef(true); // prevent id re-generation between renders.\n\n  const elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.\n\n  const previousResultCountRef = useRef(); // utility callback to get item element.\n\n  const latest = useLatestRef({\n    state,\n    props\n  });\n  const getItemNodeFromIndex = useCallback(index => itemRefs.current[elementIds.getItemId(index)], [elementIds]); // Effects.\n  // Sets a11y status message on changes in state.\n\n  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], {\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items,\n    environment,\n    itemToString,\n    ...state\n  }); // Sets a11y status message on changes in selectedItem.\n\n  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], {\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items,\n    environment,\n    itemToString,\n    ...state\n  }); // Scroll on highlighted item if change comes from keyboard.\n\n  const shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex,\n    isOpen,\n    itemRefs,\n    scrollIntoView,\n    getItemNodeFromIndex\n  });\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props,\n    state\n  }); // Focus the input on first render if required.\n\n  useEffect(() => {\n    const focusOnOpen = initialIsOpen || defaultIsOpen || isOpen;\n\n    if (focusOnOpen && inputRef.current) {\n      inputRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  useEffect(() => {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    previousResultCountRef.current = items.length;\n  }); // Add mouse/touch events to document.\n\n  const mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [comboboxRef, menuRef, toggleButtonRef], environment, () => {\n    dispatch({\n      type: InputBlur,\n      selectItem: false\n    });\n  });\n  const setGetterPropCallInfo = useGetterPropsCalledChecker('getInputProps', 'getComboboxProps', 'getMenuProps'); // Make initial ref false.\n\n  useEffect(() => {\n    isInitialMountRef.current = false;\n  }, []); // Reset itemRefs on close.\n\n  useEffect(() => {\n    if (!isOpen) {\n      itemRefs.current = {};\n    }\n  }, [isOpen]);\n  /* Event handler functions */\n\n  const inputKeyDownHandlers = useMemo(() => ({\n    ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownArrowDown,\n        shiftKey: event.shiftKey,\n        getItemNodeFromIndex\n      });\n    },\n\n    ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownArrowUp,\n        shiftKey: event.shiftKey,\n        getItemNodeFromIndex\n      });\n    },\n\n    Home(event) {\n      if (!latest.current.state.isOpen) {\n        return;\n      }\n\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownHome,\n        getItemNodeFromIndex\n      });\n    },\n\n    End(event) {\n      if (!latest.current.state.isOpen) {\n        return;\n      }\n\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownEnd,\n        getItemNodeFromIndex\n      });\n    },\n\n    Escape(event) {\n      const latestState = latest.current.state;\n\n      if (latestState.isOpen || latestState.inputValue || latestState.selectedItem || latestState.highlightedIndex > -1) {\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownEscape\n        });\n      }\n    },\n\n    Enter(event) {\n      const latestState = latest.current.state; // if closed or no highlighted index, do nothing.\n\n      if (!latestState.isOpen || latestState.highlightedIndex < 0 || event.which === 229 // if IME composing, wait for next Enter keydown event.\n      ) {\n        return;\n      }\n\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownEnter,\n        getItemNodeFromIndex\n      });\n    }\n\n  }), [dispatch, latest, getItemNodeFromIndex]); // Getter props.\n\n  const getLabelProps = useCallback(labelProps => ({\n    id: elementIds.labelId,\n    htmlFor: elementIds.inputId,\n    ...labelProps\n  }), [elementIds]);\n  const getMenuProps = useCallback(function (_temp, _temp2) {\n    let {\n      onMouseLeave,\n      refKey = 'ref',\n      ref,\n      ...rest\n    } = _temp === void 0 ? {} : _temp;\n    let {\n      suppressRefError = false\n    } = _temp2 === void 0 ? {} : _temp2;\n    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);\n    return {\n      [refKey]: handleRefs(ref, menuNode => {\n        menuRef.current = menuNode;\n      }),\n      id: elementIds.menuId,\n      role: 'listbox',\n      'aria-labelledby': elementIds.labelId,\n      onMouseLeave: callAllEventHandlers(onMouseLeave, () => {\n        dispatch({\n          type: MenuMouseLeave\n        });\n      }),\n      ...rest\n    };\n  }, [dispatch, setGetterPropCallInfo, elementIds]);\n  const getItemProps = useCallback(function (_temp3) {\n    let {\n      item,\n      index,\n      refKey = 'ref',\n      ref,\n      onMouseMove,\n      onMouseDown,\n      onClick,\n      onPress,\n      disabled,\n      ...rest\n    } = _temp3 === void 0 ? {} : _temp3;\n    const {\n      props: latestProps,\n      state: latestState\n    } = latest.current;\n    const itemIndex = getItemIndex(index, item, latestProps.items);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either item or item index in getItemProps!');\n    }\n\n    const onSelectKey = 'onClick';\n    const customClickHandler = onClick;\n\n    const itemHandleMouseMove = () => {\n      if (index === latestState.highlightedIndex) {\n        return;\n      }\n\n      shouldScrollRef.current = false;\n      dispatch({\n        type: ItemMouseMove,\n        index,\n        disabled\n      });\n    };\n\n    const itemHandleClick = () => {\n      dispatch({\n        type: ItemClick,\n        index\n      });\n    };\n\n    const itemHandleMouseDown = e => e.preventDefault();\n\n    return {\n      [refKey]: handleRefs(ref, itemNode => {\n        if (itemNode) {\n          itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;\n        }\n      }),\n      disabled,\n      role: 'option',\n      'aria-selected': `${itemIndex === latestState.highlightedIndex}`,\n      id: elementIds.getItemId(itemIndex),\n      ...(!disabled && {\n        [onSelectKey]: callAllEventHandlers(customClickHandler, itemHandleClick)\n      }),\n      onMouseMove: callAllEventHandlers(onMouseMove, itemHandleMouseMove),\n      onMouseDown: callAllEventHandlers(onMouseDown, itemHandleMouseDown),\n      ...rest\n    };\n  }, [dispatch, latest, shouldScrollRef, elementIds]);\n  const getToggleButtonProps = useCallback(function (_temp4) {\n    let {\n      onClick,\n      onPress,\n      refKey = 'ref',\n      ref,\n      ...rest\n    } = _temp4 === void 0 ? {} : _temp4;\n\n    const toggleButtonHandleClick = () => {\n      dispatch({\n        type: ToggleButtonClick\n      });\n\n      if (!latest.current.state.isOpen && inputRef.current) {\n        inputRef.current.focus();\n      }\n    };\n\n    return {\n      [refKey]: handleRefs(ref, toggleButtonNode => {\n        toggleButtonRef.current = toggleButtonNode;\n      }),\n      id: elementIds.toggleButtonId,\n      tabIndex: -1,\n      ...(!rest.disabled && { ...({\n          onClick: callAllEventHandlers(onClick, toggleButtonHandleClick)\n        })\n      }),\n      ...rest\n    };\n  }, [dispatch, latest, elementIds]);\n  const getInputProps = useCallback(function (_temp5, _temp6) {\n    let {\n      onKeyDown,\n      onChange,\n      onInput,\n      onBlur,\n      onChangeText,\n      refKey = 'ref',\n      ref,\n      ...rest\n    } = _temp5 === void 0 ? {} : _temp5;\n    let {\n      suppressRefError = false\n    } = _temp6 === void 0 ? {} : _temp6;\n    setGetterPropCallInfo('getInputProps', suppressRefError, refKey, inputRef);\n    const latestState = latest.current.state;\n\n    const inputHandleKeyDown = event => {\n      const key = normalizeArrowKey(event);\n\n      if (key && inputKeyDownHandlers[key]) {\n        inputKeyDownHandlers[key](event);\n      }\n    };\n\n    const inputHandleChange = event => {\n      dispatch({\n        type: InputChange,\n        inputValue: event.target.value\n      });\n    };\n\n    const inputHandleBlur = () => {\n      /* istanbul ignore else */\n      if (latestState.isOpen && !mouseAndTouchTrackersRef.current.isMouseDown) {\n        dispatch({\n          type: InputBlur,\n          selectItem: true\n        });\n      }\n    };\n    /* istanbul ignore next (preact) */\n\n\n    const onChangeKey = 'onChange';\n    let eventHandlers = {};\n\n    if (!rest.disabled) {\n      eventHandlers = {\n        [onChangeKey]: callAllEventHandlers(onChange, onInput, inputHandleChange),\n        onKeyDown: callAllEventHandlers(onKeyDown, inputHandleKeyDown),\n        onBlur: callAllEventHandlers(onBlur, inputHandleBlur)\n      };\n    }\n\n    return {\n      [refKey]: handleRefs(ref, inputNode => {\n        inputRef.current = inputNode;\n      }),\n      id: elementIds.inputId,\n      'aria-autocomplete': 'list',\n      'aria-controls': elementIds.menuId,\n      ...(latestState.isOpen && latestState.highlightedIndex > -1 && {\n        'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)\n      }),\n      'aria-labelledby': elementIds.labelId,\n      // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n      // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n      autoComplete: 'off',\n      value: latestState.inputValue,\n      ...eventHandlers,\n      ...rest\n    };\n  }, [dispatch, inputKeyDownHandlers, latest, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds]);\n  const getComboboxProps = useCallback(function (_temp7, _temp8) {\n    let {\n      refKey = 'ref',\n      ref,\n      ...rest\n    } = _temp7 === void 0 ? {} : _temp7;\n    let {\n      suppressRefError = false\n    } = _temp8 === void 0 ? {} : _temp8;\n    setGetterPropCallInfo('getComboboxProps', suppressRefError, refKey, comboboxRef);\n    return {\n      [refKey]: handleRefs(ref, comboboxNode => {\n        comboboxRef.current = comboboxNode;\n      }),\n      role: 'combobox',\n      'aria-haspopup': 'listbox',\n      'aria-owns': elementIds.menuId,\n      'aria-expanded': latest.current.state.isOpen,\n      ...rest\n    };\n  }, [latest, setGetterPropCallInfo, elementIds]); // returns\n\n  const toggleMenu = useCallback(() => {\n    dispatch({\n      type: FunctionToggleMenu\n    });\n  }, [dispatch]);\n  const closeMenu = useCallback(() => {\n    dispatch({\n      type: FunctionCloseMenu\n    });\n  }, [dispatch]);\n  const openMenu = useCallback(() => {\n    dispatch({\n      type: FunctionOpenMenu\n    });\n  }, [dispatch]);\n  const setHighlightedIndex = useCallback(newHighlightedIndex => {\n    dispatch({\n      type: FunctionSetHighlightedIndex,\n      highlightedIndex: newHighlightedIndex\n    });\n  }, [dispatch]);\n  const selectItem = useCallback(newSelectedItem => {\n    dispatch({\n      type: FunctionSelectItem,\n      selectedItem: newSelectedItem\n    });\n  }, [dispatch]);\n  const setInputValue = useCallback(newInputValue => {\n    dispatch({\n      type: FunctionSetInputValue,\n      inputValue: newInputValue\n    });\n  }, [dispatch]);\n  const reset = useCallback(() => {\n    dispatch({\n      type: FunctionReset$1\n    });\n  }, [dispatch]);\n  return {\n    // prop getters.\n    getItemProps,\n    getLabelProps,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getToggleButtonProps,\n    // actions.\n    toggleMenu,\n    openMenu,\n    closeMenu,\n    setHighlightedIndex,\n    setInputValue,\n    selectItem,\n    reset,\n    // state.\n    highlightedIndex,\n    isOpen,\n    selectedItem,\n    inputValue\n  };\n}\n\nconst defaultStateValues = {\n  activeIndex: -1,\n  selectedItems: []\n};\n/**\n * Returns the initial value for a state key in the following order:\n * 1. controlled prop, 2. initial prop, 3. default prop, 4. default\n * value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\n\nfunction getInitialValue(props, propKey) {\n  return getInitialValue$1(props, propKey, defaultStateValues);\n}\n/**\n * Returns the default value for a state key in the following order:\n * 1. controlled prop, 2. default prop, 3. default value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\n\n\nfunction getDefaultValue(props, propKey) {\n  return getDefaultValue$1(props, propKey, defaultStateValues);\n}\n/**\n * Gets the initial state based on the provided props. It uses initial, default\n * and controlled props related to state in order to compute the initial value.\n *\n * @param {Object} props Props passed to the hook.\n * @returns {Object} The initial state.\n */\n\n\nfunction getInitialState(props) {\n  const activeIndex = getInitialValue(props, 'activeIndex');\n  const selectedItems = getInitialValue(props, 'selectedItems');\n  return {\n    activeIndex,\n    selectedItems\n  };\n}\n/**\n * Returns true if dropdown keydown operation is permitted. Should not be\n * allowed on keydown with modifier keys (ctrl, alt, shift, meta), on\n * input element with text content that is either highlighted or selection\n * cursor is not at the starting position.\n *\n * @param {KeyboardEvent} event The event from keydown.\n * @returns {boolean} Whether the operation is allowed.\n */\n\n\nfunction isKeyDownOperationPermitted(event) {\n  if (event.shiftKey || event.metaKey || event.ctrlKey || event.altKey) {\n    return false;\n  }\n\n  const element = event.target;\n\n  if (element instanceof HTMLInputElement && // if element is a text input\n  element.value !== '' && ( // and we have text in it\n  // and cursor is either not at the start or is currently highlighting text.\n  element.selectionStart !== 0 || element.selectionEnd !== 0)) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Returns a message to be added to aria-live region when item is removed.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\n\nfunction getA11yRemovalMessage(selectionParameters) {\n  const {\n    removedSelectedItem,\n    itemToString: itemToStringLocal\n  } = selectionParameters;\n  return `${itemToStringLocal(removedSelectedItem)} has been removed.`;\n}\n\nconst propTypes = {\n  selectedItems: PropTypes.array,\n  initialSelectedItems: PropTypes.array,\n  defaultSelectedItems: PropTypes.array,\n  itemToString: PropTypes.func,\n  getA11yRemovalMessage: PropTypes.func,\n  stateReducer: PropTypes.func,\n  activeIndex: PropTypes.number,\n  initialActiveIndex: PropTypes.number,\n  defaultActiveIndex: PropTypes.number,\n  onActiveIndexChange: PropTypes.func,\n  onSelectedItemsChange: PropTypes.func,\n  keyNavigationNext: PropTypes.string,\n  keyNavigationPrevious: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\nconst defaultProps = {\n  itemToString: defaultProps$3.itemToString,\n  stateReducer: defaultProps$3.stateReducer,\n  environment: defaultProps$3.environment,\n  getA11yRemovalMessage,\n  keyNavigationNext: 'ArrowRight',\n  keyNavigationPrevious: 'ArrowLeft'\n}; // eslint-disable-next-line import/no-mutable-exports\n\nlet validatePropTypes = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes = (options, caller) => {\n    PropTypes.checkPropTypes(propTypes, options, 'prop', caller.name);\n  };\n}\n\nconst SelectedItemClick = process.env.NODE_ENV !== \"production\" ? '__selected_item_click__' : 0;\nconst SelectedItemKeyDownDelete = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_delete__' : 1;\nconst SelectedItemKeyDownBackspace = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_backspace__' : 2;\nconst SelectedItemKeyDownNavigationNext = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_navigation_next__' : 3;\nconst SelectedItemKeyDownNavigationPrevious = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_navigation_previous__' : 4;\nconst DropdownKeyDownNavigationPrevious = process.env.NODE_ENV !== \"production\" ? '__dropdown_keydown_navigation_previous__' : 5;\nconst DropdownKeyDownBackspace = process.env.NODE_ENV !== \"production\" ? '__dropdown_keydown_backspace__' : 6;\nconst DropdownClick = process.env.NODE_ENV !== \"production\" ? '__dropdown_click__' : 7;\nconst FunctionAddSelectedItem = process.env.NODE_ENV !== \"production\" ? '__function_add_selected_item__' : 8;\nconst FunctionRemoveSelectedItem = process.env.NODE_ENV !== \"production\" ? '__function_remove_selected_item__' : 9;\nconst FunctionSetSelectedItems = process.env.NODE_ENV !== \"production\" ? '__function_set_selected_items__' : 10;\nconst FunctionSetActiveIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_active_index__' : 11;\nconst FunctionReset = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 12;\n\nvar stateChangeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  SelectedItemClick: SelectedItemClick,\n  SelectedItemKeyDownDelete: SelectedItemKeyDownDelete,\n  SelectedItemKeyDownBackspace: SelectedItemKeyDownBackspace,\n  SelectedItemKeyDownNavigationNext: SelectedItemKeyDownNavigationNext,\n  SelectedItemKeyDownNavigationPrevious: SelectedItemKeyDownNavigationPrevious,\n  DropdownKeyDownNavigationPrevious: DropdownKeyDownNavigationPrevious,\n  DropdownKeyDownBackspace: DropdownKeyDownBackspace,\n  DropdownClick: DropdownClick,\n  FunctionAddSelectedItem: FunctionAddSelectedItem,\n  FunctionRemoveSelectedItem: FunctionRemoveSelectedItem,\n  FunctionSetSelectedItems: FunctionSetSelectedItems,\n  FunctionSetActiveIndex: FunctionSetActiveIndex,\n  FunctionReset: FunctionReset\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftMultipleSelectionReducer(state, action) {\n  const {\n    type,\n    index,\n    props,\n    selectedItem\n  } = action;\n  const {\n    activeIndex,\n    selectedItems\n  } = state;\n  let changes;\n\n  switch (type) {\n    case SelectedItemClick:\n      changes = {\n        activeIndex: index\n      };\n      break;\n\n    case SelectedItemKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: activeIndex - 1 < 0 ? 0 : activeIndex - 1\n      };\n      break;\n\n    case SelectedItemKeyDownNavigationNext:\n      changes = {\n        activeIndex: activeIndex + 1 >= selectedItems.length ? -1 : activeIndex + 1\n      };\n      break;\n\n    case SelectedItemKeyDownBackspace:\n    case SelectedItemKeyDownDelete:\n      {\n        let newActiveIndex = activeIndex;\n\n        if (selectedItems.length === 1) {\n          newActiveIndex = -1;\n        } else if (activeIndex === selectedItems.length - 1) {\n          newActiveIndex = selectedItems.length - 2;\n        }\n\n        changes = {\n          selectedItems: [...selectedItems.slice(0, activeIndex), ...selectedItems.slice(activeIndex + 1)],\n          ...{\n            activeIndex: newActiveIndex\n          }\n        };\n        break;\n      }\n\n    case DropdownKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: selectedItems.length - 1\n      };\n      break;\n\n    case DropdownKeyDownBackspace:\n      changes = {\n        selectedItems: selectedItems.slice(0, selectedItems.length - 1)\n      };\n      break;\n\n    case FunctionAddSelectedItem:\n      changes = {\n        selectedItems: [...selectedItems, selectedItem]\n      };\n      break;\n\n    case DropdownClick:\n      changes = {\n        activeIndex: -1\n      };\n      break;\n\n    case FunctionRemoveSelectedItem:\n      {\n        let newActiveIndex = activeIndex;\n        const selectedItemIndex = selectedItems.indexOf(selectedItem);\n\n        if (selectedItemIndex >= 0) {\n          if (selectedItems.length === 1) {\n            newActiveIndex = -1;\n          } else if (selectedItemIndex === selectedItems.length - 1) {\n            newActiveIndex = selectedItems.length - 2;\n          }\n\n          changes = {\n            selectedItems: [...selectedItems.slice(0, selectedItemIndex), ...selectedItems.slice(selectedItemIndex + 1)],\n            activeIndex: newActiveIndex\n          };\n        }\n\n        break;\n      }\n\n    case FunctionSetSelectedItems:\n      {\n        const {\n          selectedItems: newSelectedItems\n        } = action;\n        changes = {\n          selectedItems: newSelectedItems\n        };\n        break;\n      }\n\n    case FunctionSetActiveIndex:\n      {\n        const {\n          activeIndex: newActiveIndex\n        } = action;\n        changes = {\n          activeIndex: newActiveIndex\n        };\n        break;\n      }\n\n    case FunctionReset:\n      changes = {\n        activeIndex: getDefaultValue(props, 'activeIndex'),\n        selectedItems: getDefaultValue(props, 'selectedItems')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return { ...state,\n    ...changes\n  };\n}\n\nuseMultipleSelection.stateChangeTypes = stateChangeTypes;\n\nfunction useMultipleSelection(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes(userProps, useMultipleSelection); // Props defaults and destructuring.\n\n  const props = { ...defaultProps,\n    ...userProps\n  };\n  const {\n    getA11yRemovalMessage,\n    itemToString,\n    environment,\n    keyNavigationNext,\n    keyNavigationPrevious\n  } = props; // Reducer init.\n\n  const [state, dispatch] = useControlledReducer$1(downshiftMultipleSelectionReducer, getInitialState(props), props);\n  const {\n    activeIndex,\n    selectedItems\n  } = state; // Refs.\n\n  const isInitialMountRef = useRef(true);\n  const dropdownRef = useRef(null);\n  const previousSelectedItemsRef = useRef(selectedItems);\n  const selectedItemRefs = useRef();\n  selectedItemRefs.current = [];\n  const latest = useLatestRef({\n    state,\n    props\n  }); // Effects.\n\n  /* Sets a11y status message on changes in selectedItem. */\n\n  useEffect(() => {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    if (selectedItems.length < previousSelectedItemsRef.current.length) {\n      const removedSelectedItem = previousSelectedItemsRef.current.find(item => selectedItems.indexOf(item) < 0);\n      setStatus(getA11yRemovalMessage({\n        itemToString,\n        resultCount: selectedItems.length,\n        removedSelectedItem,\n        activeIndex,\n        activeSelectedItem: selectedItems[activeIndex]\n      }), environment.document);\n    }\n\n    previousSelectedItemsRef.current = selectedItems; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedItems.length]); // Sets focus on active item.\n\n  useEffect(() => {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    if (activeIndex === -1 && dropdownRef.current) {\n      dropdownRef.current.focus();\n    } else if (selectedItemRefs.current[activeIndex]) {\n      selectedItemRefs.current[activeIndex].focus();\n    }\n  }, [activeIndex]);\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props,\n    state\n  });\n  const setGetterPropCallInfo = useGetterPropsCalledChecker('getDropdownProps'); // Make initial ref false.\n\n  useEffect(() => {\n    isInitialMountRef.current = false;\n  }, []); // Event handler functions.\n\n  const selectedItemKeyDownHandlers = useMemo(() => ({\n    [keyNavigationPrevious]() {\n      dispatch({\n        type: SelectedItemKeyDownNavigationPrevious\n      });\n    },\n\n    [keyNavigationNext]() {\n      dispatch({\n        type: SelectedItemKeyDownNavigationNext\n      });\n    },\n\n    Delete() {\n      dispatch({\n        type: SelectedItemKeyDownDelete\n      });\n    },\n\n    Backspace() {\n      dispatch({\n        type: SelectedItemKeyDownBackspace\n      });\n    }\n\n  }), [dispatch, keyNavigationNext, keyNavigationPrevious]);\n  const dropdownKeyDownHandlers = useMemo(() => ({\n    [keyNavigationPrevious](event) {\n      if (isKeyDownOperationPermitted(event)) {\n        dispatch({\n          type: DropdownKeyDownNavigationPrevious\n        });\n      }\n    },\n\n    Backspace(event) {\n      if (isKeyDownOperationPermitted(event)) {\n        dispatch({\n          type: DropdownKeyDownBackspace\n        });\n      }\n    }\n\n  }), [dispatch, keyNavigationPrevious]); // Getter props.\n\n  const getSelectedItemProps = useCallback(function (_temp) {\n    let {\n      refKey = 'ref',\n      ref,\n      onClick,\n      onKeyDown,\n      selectedItem,\n      index,\n      ...rest\n    } = _temp === void 0 ? {} : _temp;\n    const {\n      state: latestState\n    } = latest.current;\n    const itemIndex = getItemIndex(index, selectedItem, latestState.selectedItems);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either selectedItem or index in getSelectedItemProps!');\n    }\n\n    const selectedItemHandleClick = () => {\n      dispatch({\n        type: SelectedItemClick,\n        index\n      });\n    };\n\n    const selectedItemHandleKeyDown = event => {\n      const key = normalizeArrowKey(event);\n\n      if (key && selectedItemKeyDownHandlers[key]) {\n        selectedItemKeyDownHandlers[key](event);\n      }\n    };\n\n    return {\n      [refKey]: handleRefs(ref, selectedItemNode => {\n        if (selectedItemNode) {\n          selectedItemRefs.current.push(selectedItemNode);\n        }\n      }),\n      tabIndex: index === latestState.activeIndex ? 0 : -1,\n      onClick: callAllEventHandlers(onClick, selectedItemHandleClick),\n      onKeyDown: callAllEventHandlers(onKeyDown, selectedItemHandleKeyDown),\n      ...rest\n    };\n  }, [dispatch, latest, selectedItemKeyDownHandlers]);\n  const getDropdownProps = useCallback(function (_temp2, _temp3) {\n    let {\n      refKey = 'ref',\n      ref,\n      onKeyDown,\n      onClick,\n      preventKeyAction = false,\n      ...rest\n    } = _temp2 === void 0 ? {} : _temp2;\n    let {\n      suppressRefError = false\n    } = _temp3 === void 0 ? {} : _temp3;\n    setGetterPropCallInfo('getDropdownProps', suppressRefError, refKey, dropdownRef);\n\n    const dropdownHandleKeyDown = event => {\n      const key = normalizeArrowKey(event);\n\n      if (key && dropdownKeyDownHandlers[key]) {\n        dropdownKeyDownHandlers[key](event);\n      }\n    };\n\n    const dropdownHandleClick = () => {\n      dispatch({\n        type: DropdownClick\n      });\n    };\n\n    return {\n      [refKey]: handleRefs(ref, dropdownNode => {\n        if (dropdownNode) {\n          dropdownRef.current = dropdownNode;\n        }\n      }),\n      ...(!preventKeyAction && {\n        onKeyDown: callAllEventHandlers(onKeyDown, dropdownHandleKeyDown),\n        onClick: callAllEventHandlers(onClick, dropdownHandleClick)\n      }),\n      ...rest\n    };\n  }, [dispatch, dropdownKeyDownHandlers, setGetterPropCallInfo]); // returns\n\n  const addSelectedItem = useCallback(selectedItem => {\n    dispatch({\n      type: FunctionAddSelectedItem,\n      selectedItem\n    });\n  }, [dispatch]);\n  const removeSelectedItem = useCallback(selectedItem => {\n    dispatch({\n      type: FunctionRemoveSelectedItem,\n      selectedItem\n    });\n  }, [dispatch]);\n  const setSelectedItems = useCallback(newSelectedItems => {\n    dispatch({\n      type: FunctionSetSelectedItems,\n      selectedItems: newSelectedItems\n    });\n  }, [dispatch]);\n  const setActiveIndex = useCallback(newActiveIndex => {\n    dispatch({\n      type: FunctionSetActiveIndex,\n      activeIndex: newActiveIndex\n    });\n  }, [dispatch]);\n  const reset = useCallback(() => {\n    dispatch({\n      type: FunctionReset\n    });\n  }, [dispatch]);\n  return {\n    getSelectedItemProps,\n    getDropdownProps,\n    addSelectedItem,\n    removeSelectedItem,\n    setSelectedItems,\n    setActiveIndex,\n    reset,\n    selectedItems,\n    activeIndex\n  };\n}\n\nexport { Downshift$1 as default, resetIdCounter, useCombobox, useMultipleSelection, useSelect };\n", "// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n// add support for visualViewport object currently implemented in chrome\ninterface visualViewport {\n  height: number\n  width: number\n}\n\ntype ScrollLogicalPosition = 'start' | 'center' | 'end' | 'nearest'\n// This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\ntype ScrollMode = 'always' | 'if-needed'\n// New option that skips auto-scrolling all nodes with overflow: hidden set\n// See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\ntype SkipOverflowHiddenElements = boolean\n\ninterface Options {\n  block?: ScrollLogicalPosition\n  inline?: ScrollLogicalPosition\n  scrollMode?: ScrollMode\n  boundary?: CustomScrollBoundary\n  skipOverflowHiddenElements?: SkipOverflowHiddenElements\n}\n\n// Custom behavior, not in any spec\ntype CustomScrollBoundaryCallback = (parent: Element) => boolean\ntype CustomScrollBoundary = Element | CustomScrollBoundaryCallback | null\ninterface CustomScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nfunction isElement(el: any): el is Element {\n  return typeof el === 'object' && el != null && el.nodeType === 1\n}\n\nfunction canOverflow(\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nfunction getFrameElement(el: Element) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nfunction isHiddenByFrame(el: Element): boolean {\n  const frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nfunction isScrollable(el: Element, skipOverflowHiddenElements?: boolean) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    const style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nfunction alignNearest(\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nfunction getParentElement(element: Node): Element | null {\n  const parent = element.parentElement\n  if (parent == null) {\n    return (element.getRootNode() as ShadowRoot).host || null\n  }\n  return parent\n}\n\nexport default (target: Element, options: Options): CustomScrollAction[] => {\n  //TODO: remove this hack when microbundle will support typescript >= 4.0\n  const windowWithViewport = window as unknown as Window & {\n    visualViewport: visualViewport\n  }\n\n  const { scrollMode, block, inline, boundary, skipOverflowHiddenElements } =\n    options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  const checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  const scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  const frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = getParentElement(cursor)\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  const viewportWidth = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.width\n    : innerWidth\n  const viewportHeight = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.height\n    : innerHeight\n\n  // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n  const viewportX = window.scrollX || pageXOffset\n  const viewportY = window.scrollY || pageYOffset\n\n  const {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop\n      : block === 'end'\n      ? targetBottom\n      : targetTop + targetHeight / 2 // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2\n      : inline === 'end'\n      ? targetRight\n      : targetLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  const computations: CustomScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    const frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    const { height, width, top, right, bottom, left } =\n      frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    const frameStyle = getComputedStyle(frame)\n    const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    const borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    const borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    const scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    const scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    const scaleX =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth === 0\n          ? 0\n          : width / (frame as HTMLElement).offsetWidth\n        : 0\n    const scaleY =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight === 0\n          ? 0\n          : height / (frame as HTMLElement).offsetHeight\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          viewportY,\n          viewportY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          viewportY + targetBlock,\n          viewportY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          viewportX,\n          viewportX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          viewportX + targetInline,\n          viewportX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + viewportY)\n      inlineScroll = Math.max(0, inlineScroll + viewportX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      const { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll = Math.max(\n        0,\n        Math.min(\n          scrollTop + blockScroll / scaleY,\n          frame.scrollHeight - height / scaleY + scrollbarHeight\n        )\n      )\n      inlineScroll = Math.max(\n        0,\n        Math.min(\n          scrollLeft + inlineScroll / scaleX,\n          frame.scrollWidth - width / scaleX + scrollbarWidth\n        )\n      )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n", "import { createStore, StateActions, StoreApi } from '@udecode/plate-core';\nimport { UseVirtualFloatingOptions } from '@udecode/plate-floating';\nimport { Range } from 'slate';\nimport { ComboboxOnSelectItem, NoData, TComboboxItem } from './types';\n\nexport type ComboboxStateById<TData = NoData> = {\n  /**\n   * Combobox id.\n   */\n  id: string;\n\n  /**\n   * Items filter function by text.\n   * @default (value) => value.text.toLowerCase().startsWith(search.toLowerCase())\n   */\n  filter?: (search: string) => (item: TComboboxItem<TData>) => boolean;\n\n  /**\n   * Sort filtered items before applying maxSuggestions.\n   */\n  sort?: (\n    search: string\n  ) => (a: TComboboxItem<TData>, b: TComboboxItem<TData>) => number;\n\n  /**\n   * Max number of items.\n   * @default items.length\n   */\n  maxSuggestions?: number;\n\n  /**\n   * Trigger that activates the combobox.\n   */\n  trigger: string;\n\n  /**\n   * Regular expression for search, for example to allow whitespace\n   */\n  searchPattern?: string;\n\n  /**\n   * Called when an item is selected.\n   */\n  onSelectItem: ComboboxOnSelectItem<TData> | null;\n\n  /**\n   * Is opening/closing the combobox controlled by the client.\n   */\n  controlled?: boolean;\n};\n\nexport type ComboboxStoreById<TData = NoData> = StoreApi<\n  string,\n  ComboboxStateById<TData>,\n  StateActions<ComboboxStateById<TData>>\n>;\n\nexport type ComboboxState<TData = NoData> = {\n  /**\n   * Active id (combobox id which is opened).\n   */\n  activeId: string | null;\n\n  /**\n   * Object whose keys are combobox ids and values are config stores\n   * (e.g. one for tag, one for mention,...).\n   */\n  byId: Record<string, ComboboxStoreById>;\n\n  /**\n   * Unfiltered items.\n   */\n  items: TComboboxItem<TData>[];\n\n  /**\n   * Filtered items\n   */\n  filteredItems: TComboboxItem<TData>[];\n\n  /**\n   * Highlighted index.\n   */\n  highlightedIndex: number;\n\n  /**\n   * Overrides `useFloating` options.\n   */\n  floatingOptions: Partial<UseVirtualFloatingOptions>;\n\n  /**\n   * Range from the trigger to the cursor.\n   */\n  targetRange: Range | null;\n\n  /**\n   * Text after the trigger.\n   */\n  text: string | null;\n};\n\nconst createComboboxStore = (state: ComboboxStateById) =>\n  createStore(`combobox-${state.id}`)(state);\n\nexport const comboboxStore = createStore('combobox')<ComboboxState>({\n  activeId: null,\n  byId: {},\n  floatingOptions: {},\n  highlightedIndex: 0,\n  items: [],\n  filteredItems: [],\n  targetRange: null,\n  text: null,\n})\n  .extendActions((set, get) => ({\n    setComboboxById: <TData = NoData>(state: ComboboxStateById<TData>) => {\n      if (get.byId()[state.id]) return;\n\n      set.state((draft) => {\n        draft.byId[state.id] = createComboboxStore(\n          (state as unknown) as ComboboxStateById\n        );\n      });\n    },\n    open: (state: Pick<ComboboxState, 'activeId' | 'targetRange' | 'text'>) => {\n      set.mergeState(state);\n    },\n    reset: () => {\n      set.state((draft) => {\n        draft.activeId = null;\n        draft.highlightedIndex = 0;\n        draft.filteredItems = [];\n        draft.items = [];\n        draft.text = null;\n        draft.targetRange = null;\n      });\n    },\n  }))\n  .extendSelectors((state) => ({\n    isOpen: () => !!state.activeId,\n  }));\n\nexport const useComboboxSelectors = comboboxStore.use;\nexport const comboboxSelectors = comboboxStore.get;\nexport const comboboxActions = comboboxStore.set;\n\nexport const getComboboxStoreById = (id: string | null) =>\n  id ? comboboxSelectors.byId()[id] : null;\n\nexport const useActiveComboboxStore = () => {\n  const activeId = useComboboxSelectors.activeId();\n  const comboboxes = useComboboxSelectors.byId();\n\n  return activeId ? comboboxes[activeId] : null;\n};\n", "import {\n  escapeRegExp,\n  getEditorString,\n  getPointBefore,\n  getRange,\n  TEditor,\n  Value,\n} from '@udecode/plate-core';\nimport { Point } from 'slate';\n\n/**\n * Get text and range from trigger to cursor.\n * Starts with trigger and ends with non-whitespace character.\n */\nexport const getTextFromTrigger = <V extends Value>(\n  editor: TEditor<V>,\n  {\n    at,\n    trigger,\n    searchPattern = `\\\\S+`,\n  }: { at: Point; trigger: string; searchPattern?: string }\n) => {\n  const escapedTrigger = escapeRegExp(trigger);\n  const triggerRegex = new RegExp(`(?:^|\\\\s)${escapedTrigger}`);\n\n  let start: Point | undefined = at;\n  let end: Point | undefined;\n\n  while (true) {\n    end = start;\n\n    if (!start) break;\n\n    start = getPointBefore(editor, start);\n    const charRange = start && getRange(editor, start, end);\n    const charText = getEditorString(editor, charRange);\n\n    if (!charText.match(searchPattern)) {\n      start = end;\n      break;\n    }\n  }\n\n  // Range from start to cursor\n  const range = start && getRange(editor, start, at);\n  const text = getEditorString(editor, range);\n\n  if (!range || !text.match(triggerRegex)) return;\n\n  return {\n    range,\n    textAfterTrigger: text.substring(trigger.length),\n  };\n};\n\n// export const matchesTriggerAndPattern = (\n//   editor: TEditor<V>,\n//   { at, trigger, pattern }: { at: Point; trigger: string; pattern: string }\n// ) => {\n//   // Point at the start of line\n//   const lineStart = getPointBefore(editor, at, { unit: 'line' });\n//\n//   // Range from before to start\n//   const beforeRange = lineStart && getRange(editor, lineStart, at);\n//\n//   // Before text\n//   const beforeText = getEditorString(editor, beforeRange);\n//\n//   // Starts with char and ends with word characters\n//   const escapedTrigger = escapeRegExp(trigger);\n//\n//   const beforeRegex = new RegExp(`(?:^|\\\\s)${escapedTrigger}(${pattern})$`);\n//\n//   // Match regex on before text\n//   const match = !!beforeText && beforeText.match(beforeRegex);\n//\n//   // Point at the start of mention\n//   const mentionStart = match\n//     ? getPointBefore(editor, at, {\n//         unit: 'character',\n//         distance: match[1].length + trigger.length,\n//       })\n//     : null;\n//\n//   // Range from mention to start\n//   const mentionRange = mentionStart && getRange(editor, mentionStart, at);\n//\n//   return {\n//     range: mentionRange,\n//     match,\n//   };\n// };\n", "import { isCollapsed, PlateEditor, Value } from '@udecode/plate-core';\nimport { Range } from 'slate';\nimport { getTextFromTrigger } from './utils/getTextFromTrigger';\nimport { comboboxActions, comboboxSelectors } from './combobox.store';\n\n/**\n * For each combobox state (byId):\n * - if the selection is collapsed\n * - if the cursor follows the trigger\n * - if there is text without whitespaces after the trigger\n * - open the combobox: set id, search, targetRange in the store\n * Close the combobox if needed\n */\nexport const onChangeCombobox = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E\n) => () => {\n  const byId = comboboxSelectors.byId();\n  const activeId = comboboxSelectors.activeId();\n\n  let shouldClose = true;\n\n  for (const store of Object.values(byId)) {\n    const id = store.get.id();\n    const controlled = store.get.controlled?.();\n\n    if (controlled) {\n      // do not close controlled comboboxes\n      if (activeId === id) {\n        shouldClose = false;\n        break;\n      } else {\n        // do not open controlled comboboxes\n        continue;\n      }\n    }\n\n    const { selection } = editor;\n    if (!selection || !isCollapsed(selection)) {\n      continue;\n    }\n\n    const trigger = store.get.trigger();\n    const searchPattern = store.get.searchPattern?.();\n\n    const isCursorAfterTrigger = getTextFromTrigger(editor, {\n      at: Range.start(selection),\n      trigger,\n      searchPattern,\n    });\n    if (!isCursorAfterTrigger) {\n      continue;\n    }\n\n    const { range, textAfterTrigger } = isCursorAfterTrigger;\n\n    comboboxActions.open({\n      activeId: id,\n      text: textAfterTrigger,\n      targetRange: range,\n    });\n\n    shouldClose = false;\n    break;\n  }\n\n  if (shouldClose && comboboxSelectors.isOpen()) {\n    comboboxActions.reset();\n  }\n};\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\n// We make this a function so it can be tested in describe block mocks with Jest.\nvar IS_MAC = () => typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\n// We make this a function so it can be tested in describe block mocks with Jest.\nvar ALIASES = () => ({\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC() ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n});\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES()[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;", "/**\n * Returns the next index in the list of an item that is not disabled.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.\n */\nexport const getNextNonDisabledIndex = (\n  moveAmount: number,\n  baseIndex: number,\n  itemCount: number,\n  getItemNodeFromIndex: any,\n  circular: boolean\n): number => {\n  const currentElementNode = getItemNodeFromIndex(baseIndex);\n  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {\n    return baseIndex;\n  }\n\n  if (moveAmount > 0) {\n    for (let index = baseIndex + 1; index < itemCount; index++) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  } else {\n    for (let index = baseIndex - 1; index >= 0; index--) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  }\n\n  if (circular) {\n    return moveAmount > 0\n      ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false)\n      : getNextNonDisabledIndex(\n          -1,\n          itemCount - 1,\n          itemCount,\n          getItemNodeFromIndex,\n          false\n        );\n  }\n\n  return -1;\n};\n", "import { getNextNonDisabledIndex } from './getNextNonDisabledIndex';\n\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index after the move.\n */\nexport const getNextWrappingIndex = (\n  moveAmount: number,\n  baseIndex: number,\n  itemCount: number,\n  getItemNodeFromIndex: any,\n  circular = true\n) => {\n  if (itemCount === 0) {\n    return -1;\n  }\n\n  const itemsLastIndex = itemCount - 1;\n\n  // noinspection SuspiciousTypeOfGuard\n  if (\n    typeof baseIndex !== 'number' ||\n    baseIndex < 0 ||\n    baseIndex >= itemCount\n  ) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  let newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = circular ? itemsLastIndex : 0;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = circular ? 0 : itemsLastIndex;\n  }\n\n  const nonDisabledNewIndex = getNextNonDisabledIndex(\n    moveAmount,\n    newIndex,\n    itemCount,\n    getItemNodeFromIndex,\n    circular\n  );\n\n  if (nonDisabledNewIndex === -1) {\n    return baseIndex >= itemCount ? -1 : baseIndex;\n  }\n\n  return nonDisabledNewIndex;\n};\n", "import {\n  Hotkeys,\n  KeyboardHandlerReturnType,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\nimport { getNextWrappingIndex } from './utils/getNextWrappingIndex';\nimport {\n  comboboxActions,\n  comboboxSelectors,\n  getComboboxStoreById,\n} from './combobox.store';\n\n/**\n * If the combobox is open, handle:\n * - down (next item)\n * - up (previous item)\n * - escape (reset combobox)\n * - tab, enter (select item)\n */\nexport const onKeyDownCombobox = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E\n): KeyboardHandlerReturnType => (event) => {\n  const {\n    highlightedIndex,\n    filteredItems,\n    activeId,\n  } = comboboxSelectors.state();\n  const isOpen = comboboxSelectors.isOpen();\n\n  if (!isOpen) return;\n\n  const store = getComboboxStoreById(activeId);\n  if (!store) return;\n\n  const onSelectItem = store.get.onSelectItem();\n\n  if (isHotkey('down', event)) {\n    event.preventDefault();\n\n    const newIndex = getNextWrappingIndex(\n      1,\n      highlightedIndex,\n      filteredItems.length,\n      () => {},\n      true\n    );\n    comboboxActions.highlightedIndex(newIndex);\n    return;\n  }\n  if (isHotkey('up', event)) {\n    event.preventDefault();\n\n    const newIndex = getNextWrappingIndex(\n      -1,\n      highlightedIndex,\n      filteredItems.length,\n      () => {},\n      true\n    );\n    comboboxActions.highlightedIndex(newIndex);\n    return;\n  }\n  if (isHotkey('escape', event)) {\n    event.preventDefault();\n    comboboxActions.reset();\n    return;\n  }\n\n  if (Hotkeys.isTab(editor, event) || isHotkey('enter', event)) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (filteredItems[highlightedIndex]) {\n      onSelectItem?.(editor, filteredItems[highlightedIndex]);\n    }\n  }\n};\n", "import { createPluginFactory } from '@udecode/plate-core';\nimport { onChangeCombobox } from './onChangeCombobox';\nimport { onKeyDownCombobox } from './onKeyDownCombobox';\n\nexport const KEY_COMBOBOX = 'combobox';\n\nexport const createComboboxPlugin = createPluginFactory({\n  key: KEY_COMBOBOX,\n  handlers: {\n    onChange: onChangeCombobox,\n    onKeyDown: onKeyDownCombobox,\n  },\n});\n", "import { useMemo } from 'react';\nimport { useCombobox } from 'downshift';\nimport { useComboboxSelectors } from '../combobox.store';\n\nexport const useComboboxControls = () => {\n  const isOpen = useComboboxSelectors.isOpen();\n  const highlightedIndex = useComboboxSelectors.highlightedIndex();\n  const filteredItems = useComboboxSelectors.filteredItems();\n\n  const {\n    closeMenu,\n    getMenuProps,\n    getComboboxProps,\n    getInputProps,\n    getItemProps,\n  } = useCombobox({\n    isOpen,\n    highlightedIndex,\n    items: filteredItems,\n    circularNavigation: true,\n  });\n  getMenuProps({}, { suppressRefError: true });\n  getComboboxProps({}, { suppressRefError: true });\n  getInputProps({}, { suppressRefError: true });\n\n  return useMemo(\n    () => ({\n      closeMenu,\n      getMenuProps,\n      getItemProps,\n    }),\n    [closeMenu, getItemProps, getMenuProps]\n  );\n};\n", "import { Data } from '@udecode/plate-combobox';\nimport { createStyles } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { ComboboxStyleProps } from './Combobox.types';\n\nexport const getComboboxStyles = <TData extends Data>(\n  props: ComboboxStyleProps<TData>\n) => {\n  const item = [\n    tw`flex items-center px-2 cursor-pointer`,\n    css`\n      font-size: 14px;\n      border-radius: 0;\n      min-height: 36px;\n      user-select: none;\n      color: rgb(32, 31, 30);\n    `,\n  ];\n\n  return createStyles({ prefixClassNames: 'Combobox', ...props }, [\n    {\n      root: [\n        tw`bg-white m-0 p-0 overflow-scroll`,\n        css`\n          width: 300px;\n          max-height: 288px;\n          border-radius: 0 0 2px 2px;\n          box-shadow: rgba(0, 0, 0, 0.133) 0 3.2px 7.2px 0,\n            rgba(0, 0, 0, 0.11) 0 0.6px 1.8px 0;\n\n          z-index: 500;\n        `,\n      ],\n      item: [\n        ...item,\n        css`\n          background: transparent;\n\n          :hover {\n            background: rgb(243, 242, 241);\n          }\n        `,\n      ],\n      highlightedItem: [\n        ...item,\n        css`\n          background: rgb(237, 235, 233);\n\n          :hover {\n            background: rgb(237, 235, 233);\n          }\n        `,\n      ],\n    },\n  ]);\n};\n", "import React, { useCallback, useEffect } from 'react';\nimport {\n  comboboxActions,\n  comboboxSelectors,\n  Data,\n  getComboboxStoreById,\n  NoData,\n  TComboboxItem,\n  useActiveComboboxStore,\n  useComboboxControls,\n  useComboboxSelectors,\n} from '@udecode/plate-combobox';\nimport {\n  useEventEditorSelectors,\n  usePlateEditorState,\n} from '@udecode/plate-core';\nimport {\n  flip,\n  getRangeBoundingClientRect,\n  offset,\n  shift,\n  useVirtualFloating,\n} from '@udecode/plate-floating';\nimport { PortalBody } from '@udecode/plate-styled-components';\nimport { getComboboxStyles } from './Combobox.styles';\nimport { ComboboxProps } from './Combobox.types';\n\nconst ComboboxContent = <TData extends Data = NoData>(\n  props: Omit<\n    ComboboxProps<TData>,\n    | 'id'\n    | 'trigger'\n    | 'searchPattern'\n    | 'onSelectItem'\n    | 'controlled'\n    | 'maxSuggestions'\n    | 'filter'\n    | 'sort'\n  >\n) => {\n  const { component: Component, items, portalElement, onRenderItem } = props;\n\n  const targetRange = useComboboxSelectors.targetRange();\n  const filteredItems = useComboboxSelectors.filteredItems();\n  const highlightedIndex = useComboboxSelectors.highlightedIndex();\n  const floatingOptions = useComboboxSelectors.floatingOptions();\n  const editor = usePlateEditorState();\n  const combobox = useComboboxControls();\n  const activeComboboxStore = useActiveComboboxStore()!;\n  const text = useComboboxSelectors.text() ?? '';\n  const storeItems = useComboboxSelectors.items();\n  const filter = activeComboboxStore.use.filter?.();\n  const sort = activeComboboxStore.use.sort?.();\n  const maxSuggestions =\n    activeComboboxStore.use.maxSuggestions?.() ?? storeItems.length;\n\n  // Update items\n  useEffect(() => {\n    items && comboboxActions.items(items);\n  }, [items]);\n\n  // Filter items\n  useEffect(() => {\n    comboboxActions.filteredItems(\n      storeItems\n        .filter(\n          filter\n            ? filter(text)\n            : (value) => value.text.toLowerCase().startsWith(text.toLowerCase())\n        )\n        .sort(sort?.(text))\n        .slice(0, maxSuggestions)\n    );\n  }, [filter, sort, storeItems, maxSuggestions, text]);\n\n  // Get target range rect\n  const getBoundingClientRect = useCallback(\n    () => getRangeBoundingClientRect(editor, targetRange),\n    [editor, targetRange]\n  );\n\n  // Update popper position\n  const { style, floating } = useVirtualFloating({\n    placement: 'bottom-start',\n    getBoundingClientRect,\n    middleware: [offset(4), shift(), flip()],\n    ...floatingOptions,\n  });\n\n  const menuProps = combobox\n    ? combobox.getMenuProps({}, { suppressRefError: true })\n    : { ref: null };\n\n  const { root, item: styleItem, highlightedItem } = getComboboxStyles(\n    props as any\n  );\n\n  return (\n    <PortalBody element={portalElement}>\n      <ul\n        {...menuProps}\n        ref={floating}\n        style={style}\n        css={root.css}\n        className={root.className}\n      >\n        {Component ? Component({ store: activeComboboxStore }) : null}\n\n        {filteredItems.map((item, index) => {\n          const Item = onRenderItem\n            ? onRenderItem({ search: text, item: item as TComboboxItem<TData> })\n            : item.text;\n\n          const highlighted = index === highlightedIndex;\n\n          return (\n            <div\n              key={item.key}\n              css={!highlighted ? styleItem?.css : highlightedItem?.css}\n              className={\n                !highlighted ? styleItem?.className : highlightedItem?.className\n              }\n              {...combobox.getItemProps({\n                item,\n                index,\n              })}\n              onMouseDown={(e) => {\n                e.preventDefault();\n\n                const onSelectItem = getComboboxStoreById(\n                  comboboxSelectors.activeId()\n                )?.get.onSelectItem();\n                onSelectItem?.(editor, item);\n              }}\n            >\n              {Item}\n            </div>\n          );\n        })}\n      </ul>\n    </PortalBody>\n  );\n};\n\n/**\n * Register the combobox id, trigger, onSelectItem\n * Renders the combobox if active.\n */\nexport const Combobox = <TData extends Data = NoData>({\n  id,\n  trigger,\n  searchPattern,\n  onSelectItem,\n  controlled,\n  maxSuggestions,\n  filter,\n  sort,\n  floatingOptions,\n  disabled: _disabled,\n  ...props\n}: ComboboxProps<TData>) => {\n  const storeItems = useComboboxSelectors.items();\n  const disabled = _disabled ?? (!storeItems.length && !props.items?.length);\n\n  const editor = usePlateEditorState();\n  const focusedEditorId = useEventEditorSelectors.focus?.();\n  const combobox = useComboboxControls();\n  const activeId = useComboboxSelectors.activeId();\n\n  useEffect(() => {\n    if (floatingOptions) {\n      comboboxActions.floatingOptions(floatingOptions);\n    }\n  }, [floatingOptions]);\n\n  useEffect(() => {\n    comboboxActions.setComboboxById({\n      id,\n      trigger,\n      searchPattern,\n      controlled,\n      onSelectItem,\n      maxSuggestions,\n      filter,\n      sort,\n    });\n  }, [\n    id,\n    trigger,\n    searchPattern,\n    controlled,\n    onSelectItem,\n    maxSuggestions,\n    filter,\n    sort,\n  ]);\n\n  if (\n    !combobox ||\n    !editor.selection ||\n    focusedEditorId !== editor.id ||\n    activeId !== id ||\n    disabled\n  ) {\n    return null;\n  }\n\n  return <ComboboxContent {...props} />;\n};\n"],
  "mappings": "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",
  "names": ["isForwardRef", "el", "nodeType", "canOverflow", "overflow", "skipOverflowHiddenElements", "t", "isScrollable", "clientHeight", "scrollHeight", "clientWidth", "scrollWidth", "style", "getComputedStyle", "overflowY", "overflowX", "frame", "ownerDocument", "defaultView", "frameElement", "e", "scrollingEdgeStart", "scrollingEdgeEnd", "scrollingSize", "scrollingBorderStart", "scrollingBorderEnd", "elementEdgeStart", "elementEdgeEnd", "elementSize", "target", "options", "windowWithViewport", "window", "scrollMode", "block", "inline", "boundary", "checkBoundary", "node", "isElement", "element", "parent", "scrollingElement", "document", "documentElement", "frames", "cursor", "parentElement", "getRootNode", "host", "push", "body", "viewportWidth", "visualViewport", "width", "innerWidth", "viewportHeight", "height", "innerHeight", "scrollX", "pageXOffset", "viewportY", "scrollY", "pageYOffset", "_target$getBoundingCl", "getBoundingClientRect", "targetHeight", "targetWidth", "targetTop", "top", "targetRight", "right", "targetBottom", "bottom", "targetLeft", "left", "targetBlock", "targetInline", "computations", "index", "length", "_frame$getBoundingCli", "frameStyle", "borderLeft", "parseInt", "borderLeftWidth", "borderTop", "borderTopWidth", "borderRightWidth", "borderBottom", "borderBottomWidth", "blockScroll", "inlineScroll", "scrollbarWidth", "offsetWidth", "borderRight", "scrollbarHeight", "offsetHeight", "scaleX", "scaleY", "alignNearest", "viewportX", "Math", "max", "scrollLeft", "scrollTop", "min", "Downshift", "i", "itemToString", "PropTypes", "document", "state", "action", "defaultStateValues", "offset", "stateChangeTypes", "itemToString", "PropTypes", "scrollIntoView", "getA11ySelectionMessage", "getA11yStatusMessage", "e", "getA11yRemovalMessage", "createComboboxStore", "state", "createStore", "id", "comboboxStore", "activeId", "byId", "floatingOptions", "highlightedIndex", "items", "filteredItems", "targetRange", "text", "extendActions", "set", "get", "setComboboxById", "draft", "open", "mergeState", "reset", "extendSelectors", "isOpen", "useComboboxSelectors", "use", "comboboxSelectors", "comboboxActions", "getComboboxStoreById", "useActiveComboboxStore", "comboboxes", "getTextFromTrigger", "editor", "at", "trigger", "searchPattern", "escapedTrigger", "escapeRegExp", "triggerRegex", "RegExp", "start", "end", "getPointBefore", "charRange", "getRange", "charText", "getEditorString", "match", "range", "textAfterTrigger", "substring", "length", "onChangeCombobox", "shouldClose", "store", "Object", "values", "controlled", "selection", "isCollapsed", "isCursorAfterTrigger", "Range", "isHotkey", "check", "e", "getNextNonDisabledIndex", "moveAmount", "baseIndex", "itemCount", "getItemNodeFromIndex", "circular", "currentElementNode", "hasAttribute", "index", "getNextWrappingIndex", "itemsLastIndex", "newIndex", "nonDisabledNewIndex", "onKeyDownCombobox", "event", "onSelectItem", "preventDefault", "Hotkeys", "isTab", "stopPropagation", "KEY_COMBOBOX", "createComboboxPlugin", "createPluginFactory", "key", "handlers", "onChange", "onKeyDown", "useComboboxControls", "closeMenu", "getMenuProps", "getComboboxProps", "getInputProps", "getItemProps", "useCombobox", "circularNavigation", "suppressRefError", "useMemo", "getComboboxStyles", "props", "item", "css", "createStyles", "prefixClassNames", "root", "highlightedItem", "ComboboxContent", "component", "Component", "items", "portalElement", "onRenderItem", "targetRange", "useComboboxSelectors", "filteredItems", "highlightedIndex", "floatingOptions", "editor", "usePlateEditorState", "combobox", "useComboboxControls", "activeComboboxStore", "useActiveComboboxStore", "text", "storeItems", "filter", "use", "sort", "maxSuggestions", "length", "useEffect", "comboboxActions", "value", "toLowerCase", "startsWith", "slice", "getBoundingClientRect", "useCallback", "getRangeBoundingClientRect", "style", "floating", "useVirtualFloating", "placement", "middleware", "offset", "shift", "flip", "menuProps", "getMenuProps", "suppressRefError", "ref", "styleItem", "React", "className", "store", "map", "index", "Item", "search", "highlighted", "key", "getItemProps", "e", "preventDefault", "onSelectItem", "getComboboxStoreById", "comboboxSelectors", "activeId", "get", "Combobox", "id", "trigger", "searchPattern", "controlled", "disabled", "_disabled", "focusedEditorId", "useEventEditorSelectors", "focus", "setComboboxById", "selection"]
}
