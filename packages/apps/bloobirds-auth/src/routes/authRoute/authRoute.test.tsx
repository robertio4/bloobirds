// Generated by CodiumAI

/*
Code Analysis

Objective:
The objective of the AuthRoute function is to render a page with two columns, one containing a form and the other containing promotional content for Bloobirds' platform.

Inputs:
The AuthRoute function does not take any inputs.

Flow:
1. The function returns a div with the class "authPageContent".
2. Within this div, there are two child divs, one with the class "formColumn" and the other with the class "asideColumn".
3. The "formColumn" div contains the Outlet component, which renders the appropriate child route component based on the current URL.
4. The "asideColumn" div contains promotional content for Bloobirds' platform, including a title, text, link to their website, and an image.

Outputs:
The main output of the AuthRoute function is the rendered page with the form and promotional content.

Additional aspects:
- The function imports styles from a CSS module and an SVG image.
- The promotional content includes a bolded callout within the title.
- The promotional content includes a decorative triangle image.
*/
import { render } from '@testing-library/react';

import AuthRoute from './authRoute.tsx';
import '@testing-library/jest-dom';

describe('AuthRoute_function', () => {
  // Tests that the AuthRoute component renders without errors.
  it('test_auth_route_renders_without_errors', () => {
    expect(() => {
      render(<AuthRoute />);
    }).not.toThrow();
  });

  // Tests that the styles and content of the AuthRoute component are displayed correctly.
  it('test_auth_route_styles_displayed_correctly', () => {
    const { getByText, getByAltText } = render(<AuthRoute />);
    expect(getByText(/Make your/i)).toBeInTheDocument();
    expect(getByText(/CRM investment worth it/i)).toBeInTheDocument();
    expect(getByText(/Bloobirdsâ€™ platform adds sales/i)).toBeInTheDocument();
    expect(getByText(/Visit our website/i)).toHaveAttribute('href', 'https://www.bloobirds.com');
    expect(getByAltText('triangle_decoration')).toBeInTheDocument();
  });

  // Tests that the link in the aside content of the AuthRoute component opens the correct website.
  it('test_auth_route_aside_link_opens_correct_website', () => {
    const { getByText } = render(<AuthRoute />);
    const link = getByText(/Visit our website/i);
    expect(link).toHaveAttribute('href', 'https://www.bloobirds.com');
  });
});
