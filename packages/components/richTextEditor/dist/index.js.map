{"version":3,"file":"index.js","sources":["../src/plugins/replacePlugins.ts","../src/config/typescript.ts","../src/plugins/linkPlugin/FloatingLink/OpenLinkButton.tsx","../src/plugins/linkPlugin/FloatingLink/UnlinkButton.tsx","../src/plugins/imagePlugin/defaults.ts","../src/plugins/linkPlugin/FloatingLink/upsertLink.ts","../src/plugins/linkPlugin/FloatingLink/submitFloatingLink.ts","../src/plugins/linkPlugin/FloatingLink/useFloatingLinkEnter.ts","../src/plugins/linkPlugin/FloatingLink/useFloatingLinkEdit.ts","../src/plugins/linkPlugin/FloatingLink/useFloatingLinkInsert.ts","../src/plugins/linkPlugin/FloatingLink/FloatingLink.tsx","../../../../node_modules/style-inject/dist/style-inject.es.js","../src/plugins/linkPlugin/PlateFloatingLink.tsx","../src/plugins/elementsPlugins.tsx","../src/plugins/createDirPlugin.ts","../src/plugins/createDirectionPlugin.ts","../src/plugins/rawHTMLBlockPlugin/defaults.ts","../src/plugins/rawHTMLBlockPlugin/transforms/insertRawHTMLBlock.ts","../src/plugins/rawHTMLBlockPlugin/createRawHTMLBlockPlugin.tsx","../src/plugins/slotsBlockPlugin/defaults.ts","../src/plugins/slotsBlockPlugin/transforms/insertSlotsBlock.ts","../src/plugins/slotsBlockPlugin/createSlotsBlockPlugin.tsx","../src/plugins/templateVariablesPlugin/defaults.ts","../src/plugins/meetingLinkPlugin/defaults.ts","../src/plugins/meetingLinkPlugin/withTemplateMeetingLinksOverrides.ts","../src/plugins/meetingLinkPlugin/createTemplateMeetingLinksPlugin.tsx","../src/plugins/templateVariablesPlugin/transforms/insertTemplateVariable.ts","../src/plugins/templateVariablesPlugin/withTemplateVariableOverrides.ts","../src/plugins/templateVariablesPlugin/createTemplateVariablesPlugin.tsx","../src/plugins/utils.ts","../src/plugins/templateVariablesPlugin/queries/hasMissingVariables.ts","../src/plugins/controlPlugins.ts","../src/plugins/imagePlugin/transforms/insertImage.ts","../src/plugins/imagePlugin/withImageEmbed.ts","../src/plugins/imagePlugin/withImageUpload.ts","../src/plugins/imagePlugin/withImage.ts","../src/plugins/imagePlugin/createImagePlugin.tsx","../src/plugins/imagePlugin/transforms/insertImageLink.ts","../src/plugins/replyHistoryPlugin/defaults.ts","../src/plugins/replyHistoryPlugin/createReplyHistoryPlugin.tsx","../src/plugins/replyHistoryPlugin/transforms/insertReplyHistory.ts","../src/components/imageLink/Image.tsx","../src/components/imageLink/imageLink.tsx","../src/components/meetingLink/missingMeetingLink.tsx","../src/components/meetingLink/meetingLink.tsx","../src/components/rawHTMLBlock/rawHTMLBlock.tsx","../src/components/replyHistory/replyHistory.tsx","../src/components/slotsBlock/slotsBlock.tsx","../src/components/templateVariable/missingVariable.tsx","../src/components/templateVariable/templateVariable.tsx","../src/components/editorToolbar/ColorPicker/ColorButton.tsx","../src/components/editorToolbar/ColorPicker/Colors.tsx","../src/components/editorToolbar/ColorPicker/CustomColors.tsx","../src/components/editorToolbar/ColorPicker/ColorPicker.tsx","../src/components/editorToolbar/ColorPickerToolbarDropdown.tsx","../src/components/editorToolbar/MarkToolbarButton.tsx","../src/components/editorToolbar/SelectSignatureDropdown.tsx","../src/components/editorToolbar/SizeDropdownMenu.tsx","../src/components/editorToolbar/editorToolbar.tsx","../src/components/index.ts","../src/components/ballonToolbar/MarkBallonToolbar.tsx","../src/components/saveSnippetButton/saveSnippetButton.tsx","../src/plugins/snippetPlugin/getSnippetOnSelectItem.tsx","../src/plugins/snippetPlugin/SnippetCombobox.tsx","../src/plateWrapper.tsx","../src/richTextEditor.tsx","../src/plugins/createCustomParagraphPlugin.ts","../src/plugins/snippetPlugin/index.tsx","../src/useRichTextEditorPlugins.ts","../src/serialize.tsx"],"sourcesContent":["import {\n  AutoformatBlockRule,\n  AutoformatPlugin,\n  createAutoformatPlugin,\n  ELEMENT_BLOCKQUOTE,\n  ELEMENT_CODE_BLOCK,\n  ELEMENT_CODE_LINE,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_LI,\n  ELEMENT_OL,\n  ELEMENT_UL,\n  getParentNode,\n  isElement,\n  isType,\n  toggleList,\n  unwrapList,\n} from '@udecode/plate';\nimport { MyEditor, MyPlatePlugin, MyValue } from '../config/typescript';\n\nexport const preFormat: AutoformatBlockRule<MyValue, MyEditor>['preFormat'] = editor =>\n  unwrapList(editor);\n\nexport const format = (editor: MyEditor, customFormatting: any) => {\n  if (editor?.selection) {\n    const parentEntry = getParentNode(editor, editor.selection);\n    if (!parentEntry) return;\n    const [node] = parentEntry;\n    if (\n      isElement(node) &&\n      !isType(editor, node, ELEMENT_CODE_BLOCK) &&\n      !isType(editor, node, ELEMENT_CODE_LINE)\n    ) {\n      customFormatting();\n    }\n  }\n};\n\nexport const formatList = (editor: MyEditor, elementType: string) => {\n  format(editor, () =>\n    toggleList(editor, {\n      type: elementType,\n    }),\n  );\n};\n\nconst autoformatPlugin: Partial<MyPlatePlugin<AutoformatPlugin<MyValue, MyEditor>>> = {\n  options: {\n    rules: [\n      {\n        mode: 'block',\n        type: ELEMENT_H1,\n        match: '# ',\n        preFormat,\n      },\n      {\n        mode: 'block',\n        type: ELEMENT_H2,\n        match: '## ',\n        preFormat,\n      },\n      {\n        mode: 'block',\n        type: ELEMENT_LI,\n        match: ['* ', '- '],\n        preFormat,\n        format: editor => formatList(editor, ELEMENT_UL),\n      },\n      {\n        mode: 'block',\n        type: ELEMENT_LI,\n        match: ['1. ', '1) '],\n        preFormat,\n        format: editor => formatList(editor, ELEMENT_OL),\n      },\n      {\n        mode: 'block',\n        type: ELEMENT_BLOCKQUOTE,\n        match: '> ',\n        preFormat,\n      },\n    ],\n  },\n};\n\nconst createReplacePlugins = () => [\n  createAutoformatPlugin<AutoformatPlugin<MyValue, MyEditor>, MyValue>(autoformatPlugin),\n];\n\nexport default createReplacePlugins;\n","import {\n  AutoformatRule,\n  createPlateEditor,\n  CreatePlateEditorOptions,\n  createPluginFactory,\n  createPlugins,\n  createTEditor,\n  Decorate,\n  DecorateEntry,\n  DOMHandler,\n  EDescendant,\n  EElement,\n  EElementEntry,\n  EElementOrText,\n  ELEMENT_BLOCKQUOTE,\n  ELEMENT_CODE_BLOCK,\n  ELEMENT_CODE_LINE,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_HR,\n  ELEMENT_IMAGE,\n  ELEMENT_LI,\n  ELEMENT_LINK,\n  ELEMENT_MEDIA_EMBED,\n  ELEMENT_MENTION,\n  ELEMENT_MENTION_INPUT,\n  ELEMENT_OL,\n  ELEMENT_PARAGRAPH,\n  ELEMENT_TABLE,\n  ELEMENT_TD,\n  ELEMENT_TODO_LI,\n  ELEMENT_TR,\n  ELEMENT_UL,\n  EMarks,\n  ENode,\n  ENodeEntry,\n  EText,\n  ETextEntry,\n  /* getPlateActions,\n  getPlateEditorRef,\n  getPlateSelectors, */\n  getTEditor,\n  InjectComponent,\n  InjectProps,\n  KeyboardHandler,\n  NoInfer,\n  OnChange,\n  OverrideByKey,\n  PlateEditor,\n  PlatePlugin,\n  PlatePluginInsertData,\n  PlatePluginProps,\n  PlateProps,\n  PluginOptions,\n  SerializeHtml,\n  TElement,\n  TImageElement,\n  TLinkElement,\n  TMediaEmbedElement,\n  TMentionElement,\n  TMentionInputElement,\n  TNodeEntry,\n  TReactEditor,\n  TTableElement,\n  TText,\n  TTodoListItemElement,\n  useEditorRef,\n  useEditorState,\n  usePlateEditorRef,\n  usePlateEditorState,\n  usePlateSelectors,\n  WithOverride,\n  PlatePluginComponent,\n} from '@udecode/plate';\n//import { ELEMENT_EXCALIDRAW, TExcalidrawElement } from '@udecode/plate-ui-excalidraw';\nimport { CSSProperties } from 'styled-components';\n\n/**\n * Text\n */\n\nexport type EmptyText = {\n  text: '';\n};\n\nexport type PlainText = {\n  text: string;\n};\n\nexport interface RichText extends TText {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  code?: boolean;\n  kbd?: boolean;\n  subscript?: boolean;\n  backgroundColor?: CSSProperties['backgroundColor'];\n  fontFamily?: CSSProperties['fontFamily'];\n  color?: CSSProperties['color'];\n  fontSize?: CSSProperties['fontSize'];\n  fontWeight?: CSSProperties['fontWeight'];\n}\n\n/**\n * Inline Elements\n */\n\nexport interface MyLinkElement extends TLinkElement {\n  type: typeof ELEMENT_LINK;\n  children: RichText[];\n}\n\nexport interface MyMentionInputElement extends TMentionInputElement {\n  type: typeof ELEMENT_MENTION_INPUT;\n  children: [PlainText];\n}\n\nexport interface MyMentionElement extends TMentionElement {\n  type: typeof ELEMENT_MENTION;\n  children: [EmptyText];\n}\n\nexport type MyInlineElement = MyLinkElement | MyMentionElement | MyMentionInputElement;\nexport type MyInlineDescendant = MyInlineElement | RichText;\nexport type MyInlineChildren = MyInlineDescendant[];\n\n/**\n * Block props\n */\n\nexport interface MyIndentProps {\n  indent?: number;\n}\n\nexport interface MyIndentListProps extends MyIndentProps {\n  listStart?: number;\n  listStyleType?: string;\n}\n\nexport interface MyLineHeightProps {\n  lineHeight?: CSSProperties['lineHeight'];\n}\n\nexport interface MyAlignProps {\n  textAlign?: CSSProperties['textAlign'];\n}\n\nexport interface MyBlockElement extends TElement, MyIndentListProps, MyLineHeightProps {\n  id?: string;\n}\n\n/**\n * Blocks\n */\n\nexport interface MyParagraphElement extends MyBlockElement {\n  type: typeof ELEMENT_PARAGRAPH;\n  children: MyInlineChildren;\n}\n\nexport interface MyH1Element extends MyBlockElement {\n  type: typeof ELEMENT_H1;\n  children: MyInlineChildren;\n}\n\nexport interface MyH2Element extends MyBlockElement {\n  type: typeof ELEMENT_H2;\n  children: MyInlineChildren;\n}\n\nexport interface MyH3Element extends MyBlockElement {\n  type: typeof ELEMENT_H3;\n  children: MyInlineChildren;\n}\n\nexport interface MyBlockquoteElement extends MyBlockElement {\n  type: typeof ELEMENT_BLOCKQUOTE;\n  children: MyInlineChildren;\n}\n\nexport interface MyCodeBlockElement extends MyBlockElement {\n  type: typeof ELEMENT_CODE_BLOCK;\n  children: MyCodeLineElement[];\n}\n\nexport interface MyCodeLineElement extends TElement {\n  type: typeof ELEMENT_CODE_LINE;\n  children: PlainText[];\n}\n\nexport interface MyTableElement extends TTableElement, MyBlockElement {\n  type: typeof ELEMENT_TABLE;\n  children: MyTableRowElement[];\n}\n\nexport interface MyTableRowElement extends TElement {\n  type: typeof ELEMENT_TR;\n  children: MyTableCellElement[];\n}\n\nexport interface MyTableCellElement extends TElement {\n  type: typeof ELEMENT_TD;\n  children: MyNestableBlock[];\n}\n\nexport interface MyBulletedListElement extends TElement, MyBlockElement {\n  type: typeof ELEMENT_UL;\n  children: MyListItemElement[];\n}\n\nexport interface MyNumberedListElement extends TElement, MyBlockElement {\n  type: typeof ELEMENT_OL;\n  children: MyListItemElement[];\n}\n\nexport interface MyListItemElement extends TElement, MyBlockElement {\n  type: typeof ELEMENT_LI;\n  children: MyInlineChildren;\n}\n\nexport interface MyTodoListElement extends TTodoListItemElement, MyBlockElement {\n  type: typeof ELEMENT_TODO_LI;\n  children: MyInlineChildren;\n}\n\nexport interface MyImageElement extends TImageElement, MyBlockElement {\n  type: typeof ELEMENT_IMAGE;\n  children: [EmptyText];\n}\n\nexport interface MyMediaEmbedElement extends TMediaEmbedElement, MyBlockElement {\n  type: typeof ELEMENT_MEDIA_EMBED;\n  children: [EmptyText];\n}\n\nexport interface MyHrElement extends MyBlockElement {\n  type: typeof ELEMENT_HR;\n  children: [EmptyText];\n}\n\n/* export interface MyExcalidrawElement extends TExcalidrawElement, MyBlockElement {\n  type: typeof ELEMENT_EXCALIDRAW;\n  children: [EmptyText];\n} */\n\nexport type MyNestableBlock = MyParagraphElement;\n\nexport type MyBlock = Exclude<MyElement, MyInlineElement>;\nexport type MyBlockEntry = TNodeEntry<MyBlock>;\n\nexport type MyRootBlock =\n  | MyParagraphElement\n  | MyH1Element\n  | MyH2Element\n  | MyH3Element\n  | MyBlockquoteElement\n  | MyCodeBlockElement\n  | MyTableElement\n  | MyBulletedListElement\n  | MyNumberedListElement\n  | MyTodoListElement\n  | MyImageElement\n  | MyMediaEmbedElement\n  | MyHrElement;\n//| MyExcalidrawElement;\n\nexport type MyValue = MyRootBlock[];\n\n/**\n * Editor types\n */\n\nexport type MyEditor = PlateEditor<MyValue> & { isDragging?: boolean };\nexport type MyReactEditor = TReactEditor<MyValue>;\nexport type MyNode = ENode<MyValue>;\nexport type MyNodeEntry = ENodeEntry<MyValue>;\nexport type MyElement = EElement<MyValue>;\nexport type MyElementEntry = EElementEntry<MyValue>;\nexport type MyText = EText<MyValue>;\nexport type MyTextEntry = ETextEntry<MyValue>;\nexport type MyElementOrText = EElementOrText<MyValue>;\nexport type MyDescendant = EDescendant<MyValue>;\nexport type MyMarks = EMarks<MyValue>;\nexport type MyMark = keyof MyMarks;\n\n/**\n * Plate types\n */\n\nexport type MyDecorate<P = PluginOptions> = Decorate<P, MyValue, MyEditor>;\nexport type MyDecorateEntry = DecorateEntry<MyValue>;\nexport type MyDOMHandler<P = PluginOptions> = DOMHandler<P, MyValue, MyEditor>;\nexport type MyInjectComponent = InjectComponent<MyValue>;\nexport type MyInjectProps = InjectProps<MyValue>;\nexport type MyKeyboardHandler<P = PluginOptions> = KeyboardHandler<P, MyValue, MyEditor>;\nexport type MyOnChange<P = PluginOptions> = OnChange<P, MyValue, MyEditor>;\nexport type MyOverrideByKey = OverrideByKey<MyValue, MyEditor>;\nexport type MyPlatePlugin<P = PluginOptions> = PlatePlugin<P, MyValue, MyEditor>;\nexport type MyPlatePluginInsertData = PlatePluginInsertData<MyValue>;\nexport type MyPlatePluginProps = PlatePluginProps<MyValue>;\nexport type MyPlateProps = PlateProps<MyValue, MyEditor>;\nexport type MySerializeHtml = SerializeHtml<MyValue>;\nexport type MyWithOverride<P = PluginOptions> = WithOverride<P, MyValue, MyEditor>;\n\n/**\n * Plate store, Slate context\n */\n\nexport const getMyEditor = (editor: MyEditor) => getTEditor<MyValue, MyEditor>(editor);\nexport const useMyEditorRef = () => useEditorRef<MyValue, MyEditor>();\nexport const useMyEditorState = () => useEditorState<MyValue, MyEditor>();\nexport const useMyPlateEditorRef = (id?: string) => usePlateEditorRef<MyValue, MyEditor>(id);\n//export const getMyPlateEditorRef = (id?: string) => getPlateEditorRef<MyValue, MyEditor>(id);\nexport const useMyPlateEditorState = (id?: string) => usePlateEditorState<MyValue, MyEditor>(id);\nexport const useMyPlateSelectors = (id?: string) => usePlateSelectors<MyValue, MyEditor>(id);\n//export const getMyPlateSelectors = (id?: string) => getPlateSelectors<MyValue, MyEditor>(id);\n//export const getMyPlateActions = (id?: string) => getPlateActions<MyValue, MyEditor>(id);\n\n/**\n * Utils\n */\nexport const createMyEditor = () => createTEditor() as MyEditor;\nexport const createMyPlateEditor = (options: CreatePlateEditorOptions<MyValue, MyEditor> = {}) =>\n  createPlateEditor<MyValue, MyEditor>(options);\nexport const createMyPluginFactory = <P = PluginOptions>(\n  defaultPlugin: PlatePlugin<NoInfer<P>, MyValue, MyEditor>,\n) => createPluginFactory(defaultPlugin);\nexport const createMyPlugins = (\n  plugins: MyPlatePlugin[],\n  options?: {\n    components?: Record<string, PlatePluginComponent>;\n    overrideByKey?: MyOverrideByKey;\n  },\n) => createPlugins<MyValue, MyEditor>(plugins, options);\n\nexport type MyAutoformatRule = AutoformatRule<MyValue, MyEditor>;\n","import { useMemo } from 'react';\n\nimport { addProtocolToURL } from '@bloobirds-it/utils';\nimport {\n  AsProps,\n  createComponentAs,\n  createElementAs,\n  findNode,\n  getPluginType,\n  HTMLPropsAs,\n  useEditorRef,\n  usePlateSelection,\n  ELEMENT_LINK,\n  TLinkElement,\n} from '@udecode/plate';\n\nexport const useOpenLinkButton = (props: HTMLPropsAs<'a'>): HTMLPropsAs<'a'> => {\n  const editor = useEditorRef();\n  const selection = usePlateSelection();\n\n  const entry = useMemo(\n    () =>\n      findNode<TLinkElement>(editor, {\n        match: { type: getPluginType(editor, ELEMENT_LINK) },\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [editor, selection],\n  );\n\n  if (!entry) {\n    return {};\n  }\n\n  const [link] = entry;\n\n  return {\n    'aria-label': 'Open link in a new tab',\n    target: '_blank',\n    href: addProtocolToURL(link.url),\n    onMouseOver: e => {\n      e.stopPropagation();\n    },\n    ...props,\n  };\n};\n\nexport const OpenLinkButton = createComponentAs<AsProps<'a'>>(props => {\n  const htmlProps = useOpenLinkButton(props);\n\n  return createElementAs('a', htmlProps);\n});\n","import { useCallback } from 'react';\n\nimport {\n  Button,\n  AsProps,\n  createComponentAs,\n  createElementAs,\n  focusEditor,\n  HTMLPropsAs,\n  useEditorRef,\n  unwrapLink,\n} from '@udecode/plate';\n\nexport const useUnlinkButton = (props: HTMLPropsAs<'button'>): HTMLPropsAs<'button'> => {\n  const editor = useEditorRef();\n\n  return {\n    onClick: useCallback(\n      e => {\n        unwrapLink(editor);\n        focusEditor(editor, editor.selection!);\n        e.preventDefault();\n      },\n      [editor],\n    ),\n    ...props,\n  };\n};\n\nexport const UnlinkButton = createComponentAs<AsProps<'button'>>(props => {\n  const htmlProps = useUnlinkButton(props);\n\n  return createElementAs(Button, htmlProps);\n});\n","export const ELEMENT_IMAGE_LINK = 'image-link';\n","import {\n  CreateLinkNodeOptions,\n  ELEMENT_IMAGE,\n  ELEMENT_LINK,\n  insertLink,\n  LinkPlugin,\n  TLinkElement,\n  unwrapLink,\n  upsertLinkText,\n  wrapLink,\n} from '@udecode/plate';\nimport {\n  findNode,\n  getAboveNode,\n  getEditorString,\n  getNodeLeaf,\n  getNodeProps,\n  getPluginOptions,\n  getPluginType,\n  insertNodes,\n  InsertNodesOptions,\n  isDefined,\n  isExpanded,\n  PlateEditor,\n  removeNodes,\n  setNodes,\n  UnwrapNodesOptions,\n  Value,\n  WrapNodesOptions,\n} from '@udecode/plate-core';\nimport { ELEMENT_IMAGE_LINK } from '../../imagePlugin/defaults';\n\nexport type UpsertLinkOptions<V extends Value = Value> = CreateLinkNodeOptions & {\n  /**\n   * If true, insert text when selection is in url.\n   */\n  insertTextInLink?: boolean;\n  insertNodesOptions?: InsertNodesOptions<V>;\n  unwrapNodesOptions?: UnwrapNodesOptions<V>;\n  wrapNodesOptions?: WrapNodesOptions<V>;\n  isUrl?: (url: string) => boolean;\n};\n\n/**\n * If selection in a link or is not url:\n * - insert text with url, exit\n * If selection is expanded or `update` in a link:\n * - remove link node, get link text\n * Then:\n * - insert link node\n */\nexport const upsertLink = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    url,\n    text,\n    target,\n    insertTextInLink,\n    insertNodesOptions,\n    isUrl = getPluginOptions<LinkPlugin, V>(editor, ELEMENT_LINK).isUrl,\n  }: UpsertLinkOptions<V>,\n) => {\n  const at = editor?.selection;\n\n  if (!at) return;\n\n  const linkAboveImage = getAboveNode<TLinkElement>(editor);\n\n  // link above image -> change image by link\n  if (linkAboveImage && linkAboveImage[0].type === ELEMENT_IMAGE) {\n    if (url !== linkAboveImage[0]?.url || target !== linkAboveImage[0]?.target) {\n      //removeNodes(editor, { at: editor.selection });\n      removeNodes(editor, { at: editor?.selection });\n      const text = { text: '' };\n      insertNodes<TLinkElement>(editor, {\n        type: getPluginType(editor, ELEMENT_IMAGE_LINK),\n        href: url,\n        url: linkAboveImage[0]?.url,\n        children: [text],\n      });\n    }\n\n    return true;\n  }\n\n  const linkAbove = getAboveNode<TLinkElement>(editor, {\n    at,\n    match: { type: getPluginType(editor, ELEMENT_LINK) },\n  });\n\n  // anchor and focus in link -> insert text\n  if (insertTextInLink && linkAbove) {\n    // we don't want to insert marks in links\n    editor.insertText(url);\n    return true;\n  }\n\n  if (!isUrl?.(url)) return;\n\n  if (isDefined(text) && !text.length) {\n    text = url;\n  }\n\n  // edit the link url and/or target\n  if (linkAbove) {\n    if (url !== linkAbove[0]?.url || target !== linkAbove[0]?.target) {\n      setNodes<TLinkElement>(\n        editor,\n        { url, target },\n        {\n          at: linkAbove[1],\n        },\n      );\n    }\n\n    upsertLinkText(editor, { url, text, target });\n\n    return true;\n  }\n\n  // selection contains at one edge edge or between the edges\n  const linkEntry = findNode<TLinkElement>(editor, {\n    at,\n    match: { type: getPluginType(editor, ELEMENT_LINK) },\n  });\n\n  const [linkNode, linkPath] = linkEntry ?? [];\n\n  let shouldReplaceText = false;\n\n  if (linkPath && text?.length) {\n    const linkText = getEditorString(editor, linkPath);\n\n    if (text !== linkText) {\n      shouldReplaceText = true;\n    }\n  }\n\n  const linkEntryImg = findNode<TLinkElement>(editor, {\n    at,\n    match: { type: getPluginType(editor, ELEMENT_IMAGE) },\n  });\n\n  if (isExpanded(at) || linkEntryImg) {\n    // anchor and focus in link\n    if (linkAbove) {\n      unwrapLink(editor, {\n        at: linkAbove[1],\n      });\n    } else {\n      unwrapLink(editor, {\n        split: true,\n      });\n    }\n\n    wrapLink(editor, {\n      url,\n      target,\n    });\n\n    upsertLinkText(editor, { url, target, text });\n\n    return true;\n  }\n\n  if (shouldReplaceText) {\n    removeNodes(editor, {\n      at: linkPath,\n    });\n  }\n\n  const props = getNodeProps(linkNode ?? ({} as any));\n\n  const path = editor.selection?.focus.path;\n  if (!path) return;\n\n  // link text should have the focused leaf marks\n  const leaf = getNodeLeaf(editor, path);\n\n  // if text is empty, text is url\n  if (!text?.length) {\n    text = url;\n  }\n\n  insertLink(\n    editor,\n    {\n      ...props,\n      url,\n      target,\n      children: [\n        {\n          ...leaf,\n          text,\n        },\n      ],\n    },\n    insertNodesOptions,\n  );\n  return true;\n};\n","import {\n  ELEMENT_LINK,\n  floatingLinkActions,\n  floatingLinkSelectors,\n  LinkPlugin,\n} from '@udecode/plate';\nimport { focusEditor, getPluginOptions, PlateEditor, Value } from '@udecode/plate-core';\n\nimport { upsertLink } from './upsertLink';\n\n/**\n * Insert link if url is valid.\n * Text is url if empty.\n * Close floating link.\n * Focus editor.\n */\nexport const submitFloatingLink = <V extends Value>(editor: PlateEditor<V>) => {\n  if (!editor?.selection) return;\n\n  const { isUrl, forceSubmit } = getPluginOptions<LinkPlugin, V>(editor, ELEMENT_LINK);\n\n  const url = floatingLinkSelectors.url();\n  const isValid = isUrl?.(url) || forceSubmit;\n  if (!isValid) return;\n\n  const text = floatingLinkSelectors.text();\n  const target = floatingLinkSelectors.newTab() ? undefined : '_self';\n\n  floatingLinkActions.hide();\n\n  upsertLink(editor, {\n    url,\n    text,\n    target,\n    isUrl: _url => (forceSubmit || !isUrl ? true : isUrl(_url)),\n  });\n\n  setTimeout(() => {\n    focusEditor(editor, editor.selection!);\n  }, 0);\n\n  return true;\n};\n","import { useFloatingLinkSelectors } from '@udecode/plate';\nimport { useEditorRef, useHotkeys } from '@udecode/plate-core';\n\nimport { submitFloatingLink } from './submitFloatingLink';\n\nexport const useFloatingLinkEnter = () => {\n  const editor = useEditorRef();\n\n  const open = useFloatingLinkSelectors().isOpen(editor.id);\n\n  useHotkeys(\n    '*',\n    e => {\n      if (e.key !== 'Enter') return;\n\n      if (submitFloatingLink(editor)) {\n        e.preventDefault();\n      }\n    },\n    {\n      enabled: open,\n      //@ts-ignore\n      enableOnFormTags: ['INPUT'],\n    },\n    [],\n  );\n};\n","import { useCallback, useEffect } from 'react';\n\nimport {\n  ELEMENT_LINK,\n  floatingLinkActions,\n  floatingLinkSelectors,\n  LinkPlugin,\n  triggerFloatingLinkEdit,\n  useFloatingLinkEscape,\n  useFloatingLinkSelectors,\n  useVirtualFloatingLink,\n} from '@udecode/plate';\nimport {\n  getAboveNode,\n  getEndPoint,\n  getPluginOptions,\n  getPluginType,\n  getStartPoint,\n  HTMLPropsAs,\n  someNode,\n  useComposedRef,\n  useEditorRef,\n  useHotkeys,\n  usePlateSelectors,\n} from '@udecode/plate-core';\nimport { getDefaultBoundingClientRect, getRangeBoundingClientRect } from '@udecode/plate-floating';\n\nimport { FloatingLinkProps } from './FloatingLink';\nimport { submitFloatingLink } from './submitFloatingLink';\nimport { useFloatingLinkEnter } from './useFloatingLinkEnter';\n\nexport const useFloatingLinkEdit = ({\n  floatingOptions,\n  ...props\n}: FloatingLinkProps): HTMLPropsAs<'div'> => {\n  const editor = useEditorRef();\n  const keyEditor = usePlateSelectors().keyEditor();\n  const mode = useFloatingLinkSelectors().mode();\n  const open = useFloatingLinkSelectors().isOpen(editor.id);\n\n  const { triggerFloatingLinkHotkeys } = getPluginOptions<LinkPlugin>(editor, ELEMENT_LINK);\n\n  const getBoundingClientRect = useCallback(() => {\n    const entry = getAboveNode(editor, {\n      match: { type: getPluginType(editor, ELEMENT_LINK) },\n    });\n\n    if (entry) {\n      const [, path] = entry;\n      return getRangeBoundingClientRect(editor, {\n        anchor: getStartPoint(editor, path),\n        focus: getEndPoint(editor, path),\n      });\n    }\n\n    return getDefaultBoundingClientRect();\n  }, [editor]);\n\n  const isOpen = open && mode === 'edit';\n\n  const { update, style, floating } = useVirtualFloatingLink({\n    editorId: editor.id,\n    open: isOpen,\n    getBoundingClientRect,\n    ...floatingOptions,\n  });\n\n  useEffect(() => {\n    if (\n      editor?.selection &&\n      someNode(editor, {\n        match: { type: getPluginType(editor, ELEMENT_LINK) },\n      })\n    ) {\n      floatingLinkActions.show('edit', editor.id);\n      update();\n      return;\n    }\n\n    if (floatingLinkSelectors.mode() === 'edit') {\n      floatingLinkActions.hide();\n    }\n  }, [editor, keyEditor, update]);\n\n  useHotkeys(\n    triggerFloatingLinkHotkeys!,\n    e => {\n      if (floatingLinkSelectors.mode() === 'edit' && triggerFloatingLinkEdit(editor)) {\n        e.preventDefault();\n      }\n    },\n    {\n      enableOnContentEditable: true,\n    },\n    [],\n  );\n\n  useFloatingLinkEnter();\n\n  useFloatingLinkEscape();\n\n  return {\n    style: {\n      ...style,\n      zIndex: 1,\n    },\n    ...props,\n    ref: useComposedRef<HTMLElement | null>(props.ref, floating),\n  };\n};\n","import { useEffect } from 'react';\n\nimport {\n  ELEMENT_LINK,\n  HTMLPropsAs,\n  LinkPlugin,\n  floatingLinkActions,\n  floatingLinkSelectors,\n  focusEditor,\n  getPluginOptions,\n  getSelectionBoundingClientRect,\n  triggerFloatingLinkInsert,\n  useComposedRef,\n  useEditorRef,\n  useFloatingLinkEscape,\n  useFloatingLinkSelectors,\n  useHotkeys,\n  useOnClickOutside,\n  useVirtualFloatingLink,\n} from '@udecode/plate';\nimport { useFocused } from 'slate-react';\n\nimport { FloatingLinkProps } from './FloatingLink';\nimport { submitFloatingLink } from './submitFloatingLink';\n\nexport const useFloatingLinkInsert = ({\n  floatingOptions,\n  ...props\n}: FloatingLinkProps): HTMLPropsAs<'div'> => {\n  const editor = useEditorRef();\n  const focused = useFocused();\n  const mode = useFloatingLinkSelectors().mode();\n  const open = useFloatingLinkSelectors().isOpen(editor.id);\n\n  const { triggerFloatingLinkHotkeys } = getPluginOptions<LinkPlugin>(editor, ELEMENT_LINK);\n\n  useHotkeys(\n    triggerFloatingLinkHotkeys!,\n    e => {\n      if (triggerFloatingLinkInsert(editor, { focused })) {\n        e.preventDefault();\n      }\n    },\n    {\n      enableOnContentEditable: true,\n    },\n    [focused],\n  );\n\n  const ref = useOnClickOutside(\n    () => {\n      if (floatingLinkSelectors.mode() === 'insert') {\n        submitFloatingLink(editor);\n      }\n    },\n    {\n      disabled: !open,\n    },\n  );\n\n  const { update, style, floating } = useVirtualFloatingLink({\n    editorId: editor.id,\n    open: open && mode === 'insert',\n    getBoundingClientRect: getSelectionBoundingClientRect,\n    whileElementsMounted: () => {},\n    ...floatingOptions,\n  });\n\n  // wait for update before focusing input\n  useEffect(() => {\n    if (open) {\n      update();\n      floatingLinkActions.updated(true);\n    } else {\n      floatingLinkActions.updated(false);\n    }\n  }, [open, update]);\n\n  useFloatingLinkEscape();\n\n  return {\n    style: {\n      ...style,\n      zIndex: 1,\n    },\n    ...props,\n    ref: useComposedRef<HTMLElement | null>(props.ref, floating, ref),\n  };\n};\n","import {\n  FloatingLinkNewTabInput,\n  FloatingLinkEditButton,\n  FloatingLinkTextInput,\n  FloatingLinkUrlInput,\n  UseVirtualFloatingOptions,\n} from '@udecode/plate';\nimport { createComponentAs, createElementAs, HTMLPropsAs } from '@udecode/plate-core';\n\nimport { OpenLinkButton } from './OpenLinkButton';\nimport { UnlinkButton } from './UnlinkButton';\nimport { useFloatingLinkEdit } from './useFloatingLinkEdit';\nimport { useFloatingLinkInsert } from './useFloatingLinkInsert';\n\nexport type FloatingLinkProps = HTMLPropsAs<'div'> & {\n  floatingOptions?: UseVirtualFloatingOptions;\n};\n\nexport const FloatingLinkEditRoot = createComponentAs<FloatingLinkProps>(props => {\n  const htmlProps = useFloatingLinkEdit(props);\n\n  if (htmlProps.style?.display === 'none') {\n    return null;\n  }\n\n  return createElementAs('div', htmlProps);\n});\n\nexport const FloatingLinkInsertRoot = createComponentAs<FloatingLinkProps>(props => {\n  const htmlProps = useFloatingLinkInsert(props);\n\n  if (htmlProps.style?.display === 'none') {\n    return null;\n  }\n\n  return createElementAs('div', htmlProps);\n});\n\nexport const FloatingLink = {\n  EditRoot: FloatingLinkEditRoot,\n  InsertRoot: FloatingLinkInsertRoot,\n  UrlInput: FloatingLinkUrlInput,\n  TextInput: FloatingLinkTextInput,\n  NewTabInput: FloatingLinkNewTabInput,\n  EditButton: FloatingLinkEditButton,\n  UnlinkButton,\n  OpenLinkButton,\n};\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { ELEMENT_IMAGE } from '@udecode/plate';\nimport { getAboveNode, TEditableProps, useEditorRef } from '@udecode/plate-core';\nimport {\n  LaunchIcon,\n  LinkIcon,\n  LinkOffIcon,\n  ShortTextIcon,\n  TLinkElement,\n  useFloatingLinkSelectors,\n} from '@udecode/plate-link';\nimport {\n  FloatingIconWrapper,\n  FloatingInputWrapper,\n  FloatingVerticalDivider,\n} from '@udecode/plate-ui-toolbar';\nimport { FloatingLink } from './FloatingLink';\nimport styles from './PlateFloatingLink.module.css';\n\nexport const PlateFloatingLink = ({ readOnly }: TEditableProps) => {\n  const isEditing = useFloatingLinkSelectors().isEditing();\n\n  const editor = useEditorRef();\n  const linkAbove = getAboveNode<TLinkElement>(editor);\n\n  if (readOnly) return null;\n  const input = (\n    <div className={styles.container}>\n      <FloatingInputWrapper>\n        <FloatingIconWrapper>\n          <LinkIcon width={18} />\n        </FloatingIconWrapper>\n\n        <FloatingLink.UrlInput className={styles.floatingInputCss} placeholder=\"Paste link\" />\n      </FloatingInputWrapper>\n\n      <div className={styles.line} />\n\n      {linkAbove?.[0].type !== ELEMENT_IMAGE && (\n        <FloatingInputWrapper>\n          <FloatingIconWrapper>\n            <ShortTextIcon width={18} />\n          </FloatingIconWrapper>\n          <FloatingLink.TextInput\n            className={styles.floatingInputCss}\n            placeholder=\"Text to display\"\n          />\n        </FloatingInputWrapper>\n      )}\n    </div>\n  );\n\n  const editContent = !isEditing ? (\n    <div className={styles.floatingRowCss}>\n      <FloatingLink.EditButton className={styles.plateButtonCss}>Edit link</FloatingLink.EditButton>\n\n      <FloatingVerticalDivider />\n\n      <FloatingLink.OpenLinkButton className={styles.floatingButtonCss}>\n        <LaunchIcon width={18} />\n      </FloatingLink.OpenLinkButton>\n\n      <FloatingVerticalDivider />\n\n      <FloatingLink.UnlinkButton className={styles.floatingButtonCss}>\n        <LinkOffIcon width={18} />\n      </FloatingLink.UnlinkButton>\n    </div>\n  ) : (\n    input\n  );\n\n  return (\n    <>\n      <FloatingLink.InsertRoot className={styles.floatingRootCss}>{input}</FloatingLink.InsertRoot>\n\n      <FloatingLink.EditRoot className={styles.floatingRootCss}>\n        {editContent}\n      </FloatingLink.EditRoot>\n    </>\n  );\n};\n","import {\n  createHeadingPlugin,\n  createBlockquotePlugin,\n  createLinkPlugin,\n  createListPlugin,\n  LinkPlugin,\n  RenderAfterEditable,\n} from '@udecode/plate';\n\nimport { createMyPlugins, MyPlatePlugin, MyValue } from '../config/typescript';\nimport { PlateFloatingLink } from './linkPlugin/PlateFloatingLink';\n\nexport const linkPlugin: Partial<MyPlatePlugin<LinkPlugin>> = {\n  renderAfterEditable: PlateFloatingLink as RenderAfterEditable<MyValue>,\n  options: {\n    forceSubmit: true,\n  },\n};\n\nconst createElementsPlugins = () =>\n  createMyPlugins([\n    createBlockquotePlugin(),\n    createHeadingPlugin(),\n    createLinkPlugin(linkPlugin),\n    createListPlugin(),\n  ]);\n\n\nexport default createElementsPlugins;\n","import {\n  createPluginFactory,\n  ELEMENT_DEFAULT,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n  getPluginType,\n  PlateEditor,\n} from '@udecode/plate';\n\nexport const KEY_DIR = 'dir';\n\nexport const withRTL = (editor: PlateEditor) => {\n  const { normalizeNode } = editor;\n\n  editor.normalizeNode = ([node, path]) => {\n    const rtl_rx = /[\\u0591-\\u07FF]/;\n    if (\n      // @ts-ignore\n      node?.type?.includes(\n        ELEMENT_DEFAULT,\n        ELEMENT_H1,\n        ELEMENT_H2,\n        ELEMENT_H3,\n        ELEMENT_H4,\n        ELEMENT_H5,\n        ELEMENT_H6,\n        'span',\n      ) &&\n      rtl_rx.test(node.children?.[0]?.text)\n    ) {\n      node.direction = 'rtl';\n      node.rtl = true;\n    }\n\n    return normalizeNode([node, path]);\n  };\n\n  return editor;\n};\n\n/**\n * Creates a plugin that adds alignment functionality to the editor.\n */\nexport const createDirPlugin = createPluginFactory({\n  key: KEY_DIR,\n  //@ts-ignore\n  withOverrides: withRTL,\n  then: editor => ({\n    inject: {\n      props: {\n        nodeKey: KEY_DIR,\n        defaultNodeValue: 'ltr',\n        styleKey: 'direction',\n        validNodeValues: ['rtl', 'ltr'],\n        validTypes: [getPluginType(editor, ELEMENT_DEFAULT)],\n      },\n    },\n    deserializeHtml: {\n      isElement: true,\n      rules: [\n        {\n          validNodeName: 'SPAN',\n        },\n      ],\n      getNode: (el, node) => {\n        const rtl_rx = /[\\u0591-\\u07FF]/;\n        if (rtl_rx.test(el.textContent)) {\n          return {\n            ...node,\n            direction: 'rtl',\n            rtl: true,\n            type: 'p',\n            children: [{ text: el.textContent }],\n          };\n        } else {\n          return node;\n        }\n      },\n    },\n  }),\n});\n","import {\n  createPluginFactory,\n  ELEMENT_DEFAULT,\n  getPluginType,\n  mapInjectPropsToPlugin,\n} from '@udecode/plate';\n\nexport const KEY_DIRECTION = 'direction';\n\n/**\n * Creates a plugin that adds alignment functionality to the editor.\n */\nexport const createDirectionPlugin = createPluginFactory({\n  key: KEY_DIRECTION,\n  then: editor => ({\n    inject: {\n      props: {\n        nodeKey: KEY_DIRECTION,\n        defaultNodeValue: 'ltr',\n        styleKey: 'direction',\n        validNodeValues: ['rtl', 'ltr'],\n        validTypes: [getPluginType(editor, ELEMENT_DEFAULT)],\n      },\n    },\n    then: (_, plugin) =>\n      mapInjectPropsToPlugin(editor, plugin, {\n        deserializeHtml: {\n          getNode: (el, node) => {\n            if (el.dir === 'rtl' || el.style?.textAlign === 'right') {\n              node[plugin.key] = 'rtl';\n              node.rtl = true;\n            }\n          },\n        },\n      }),\n  }),\n});\n","export const ELEMENT_RAW_HTML_BLOCK = 'raw-html-block';\n","import {\n  findNode,\n  getPluginType,\n  insertNodes,\n  removeNodes,\n  withoutNormalizing,\n} from '@udecode/plate';\n\nimport { ELEMENT_RAW_HTML_BLOCK } from '../defaults';\n\nexport const createRawHTMLBlock = (editor, html) => {\n  const type = getPluginType(editor, ELEMENT_RAW_HTML_BLOCK);\n  return {\n    id: 'signature',\n    html,\n    type,\n    children: [{ text: '' }],\n  };\n};\n\nexport const insertRawHTMLBlock = (editor, html, options) => {\n  const rawHTMLBlock = createRawHTMLBlock(editor, html);\n  insertNodes(editor, rawHTMLBlock, options);\n};\n\nexport const replaceHTMLBlock = (editor, id, type, html) => {\n  if (editor) {\n    const pluginType = getPluginType(editor, type);\n    const htmlBlock = findNode(editor, {\n      at: [],\n      match: { id, type: pluginType },\n    });\n\n    if (htmlBlock) {\n      const [node, path] = htmlBlock;\n\n      if (html?.length) {\n        withoutNormalizing(editor, () => {\n          removeNodes(editor, { at: path });\n          insertNodes(\n            editor,\n            { ...node, html, type: pluginType },\n            {\n              at: path,\n            },\n          );\n        });\n      }\n    } else {\n      withoutNormalizing(editor, () => {\n        insertNodes(editor, createRawHTMLBlock(editor, html));\n      });\n    }\n  }\n};\n","import { ELEMENT_RAW_HTML_BLOCK } from './defaults';\n\nexport const createRawHTMLBlockPlugin = () => ({\n  key: ELEMENT_RAW_HTML_BLOCK,\n  isElement: true,\n  isVoid: true,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: el => {\n        return {\n          type,\n          html: el.getAttribute('html'),\n        };\n      },\n      rules: [{ validNodeName: 'RAW-HTML-BLOCK' }],\n    },\n  }),\n  serializeHtml: ({ element }) => {\n    return <div style={{ padding: '16px 0' }} dangerouslySetInnerHTML={{ __html: element.html }} />;\n  },\n});\n","export const ELEMENT_SLOTS_FORM = 'slots-form';\n","import { getPluginType, insertNodes } from '@udecode/plate';\n\nimport { ELEMENT_SLOTS_FORM } from '../defaults';\n\nexport const createSlotsBlock = (editor, html) => {\n  const type = getPluginType(editor, ELEMENT_SLOTS_FORM);\n  return {\n    html,\n    type,\n    children: [{ text: '' }],\n  };\n};\n\nexport const insertSlotsBlock = (editor, html, options) => {\n  const slotsBlock = createSlotsBlock(editor, html);\n  insertNodes(editor, slotsBlock, options);\n};\n","import { ELEMENT_SLOTS_FORM } from './defaults';\n\nexport const createSlotsBlockPlugin = () => ({\n  key: ELEMENT_SLOTS_FORM,\n  isElement: true,\n  isVoid: true,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: el => {\n        return {\n          type,\n          html: el.getAttribute('html'),\n        };\n      },\n      rules: [{ validNodeName: 'SLOTS-FORM-BLOCK' }],\n    },\n  }),\n  serializeHtml: ({ element }) => {\n    return <div style={{ padding: '16px 0' }} dangerouslySetInnerHTML={{ __html: element.html }} />;\n  },\n});\n","export const ELEMENT_TEMPLATE_VARIABLE = 'variable';\nexport const ELEMENT_MISSING_VARIABLE = 'missing-variable';\nexport const ELEMENT_SNIPPET = 'snippet';\n","export const ELEMENT_MEETING_LINK = 'meeting-link';\nexport const ELEMENT_MISSING_MEETING_LINK = 'missing-meeting-link';\n","import { addHttpsIfNeeded } from '@bloobirds-it/utils';\nimport { ELEMENT_LINK, insertNodes, isElement, removeNodes } from '@udecode/plate';\n\nimport { ELEMENT_MEETING_LINK, ELEMENT_MISSING_MEETING_LINK } from './defaults';\n\nfunction getMeetingLinkURL(userMeetingLinks, node) {\n  const { linkId } = node;\n  if (linkId === '__default__') {\n    return userMeetingLinks?.find(meetingLink => meetingLink.defaultLink);\n  } else {\n    return userMeetingLinks?.find(meetingLink => meetingLink.id === linkId);\n  }\n}\n\nconst withTemplateMeetingLinksOverrides = (\n  editor,\n  { options: { replace, getUserRelatedMeetingLinks } },\n) => {\n  const { normalizeNode } = editor;\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (isElement(node) && node.type === ELEMENT_MEETING_LINK && replace) {\n      const userMeetingLinks = getUserRelatedMeetingLinks(\n        node.userId !== '__me__' ? node.userId : undefined,\n      );\n      const { url } = getMeetingLinkURL(userMeetingLinks, node) || {};\n      removeNodes(editor, { at: path });\n      if (url) {\n        insertNodes(\n          editor,\n          { ...node, ...{ type: ELEMENT_LINK, url: addHttpsIfNeeded(url) } },\n          { at: path },\n        );\n      } else {\n        insertNodes(editor, { ...node, ...{ type: ELEMENT_MISSING_MEETING_LINK } }, { at: path });\n      }\n    } else {\n      normalizeNode(entry);\n    }\n  };\n\n  return editor;\n};\n\nexport default withTemplateMeetingLinksOverrides;\n","import { useMemo } from 'react';\n\nimport { useActiveUserId, useMeetingLinks } from '@bloobirds-it/hooks';\nimport { toTitleCase } from '@bloobirds-it/utils';\n\nimport { ELEMENT_MEETING_LINK, ELEMENT_MISSING_MEETING_LINK } from './defaults';\nimport withTemplateMeetingLinksOverrides from './withTemplateMeetingLinksOverrides';\n\nexport const useTemplateMeetingLinksPlugin = replace => {\n  const activeUserId = useActiveUserId();\n  const { getUserMeetingLinks, isLoading } = useMeetingLinks();\n\n  function getUserRelatedMeetingLinks(userId) {\n    return getUserMeetingLinks(userId || activeUserId);\n  }\n\n  return useMemo(() => {\n    return {\n      key: ELEMENT_MEETING_LINK,\n      isElement: true,\n      isVoid: true,\n      isInline: true,\n      withOverrides: withTemplateMeetingLinksOverrides,\n      options: {\n        replace,\n        getUserRelatedMeetingLinks,\n      },\n      plugins: [\n        {\n          key: ELEMENT_MISSING_MEETING_LINK,\n          isElement: true,\n          isInline: true,\n        },\n      ],\n      then: (_, { type }) => ({\n        options: {\n          replace,\n          getUserRelatedMeetingLinks,\n        },\n        deserializeHtml: {\n          getNode: el => ({\n            type,\n            group: el.getAttribute('group'),\n            name: el.getAttribute('name'),\n            id: el.getAttribute('type'),\n          }),\n          rules: [{ validNodeName: 'MEETING_LINK' }],\n        },\n      }),\n      serializeHtml: ({ element }) => {\n        const group = toTitleCase(element.group);\n        const name = toTitleCase(element.name);\n        return <>{`${group}: ${name}`}</>;\n      },\n    };\n  }, [isLoading]);\n};\n","import {\n  deselect,\n  getNodeEntry,\n  getPluginType,\n  insertNodes,\n  insertText,\n  moveSelection,\n  PlateEditor,\n} from '@udecode/plate';\nimport { focusEditor } from '@udecode/plate-core';\nimport { Editor } from 'slate';\nimport { MyEditor } from 'src/config/typescript';\n\nimport { ELEMENT_MEETING_LINK } from '../../meetingLinkPlugin';\nimport { ELEMENT_TEMPLATE_VARIABLE } from '../defaults';\n\nconst getNodeText = editor => {\n  const isEditorFocused = !!editor?.selection;\n  if (isEditorFocused) {\n    const [node] = getNodeEntry(editor, editor?.selection);\n    //@ts-ignore\n    return node?.text || null;\n  }\n  return null;\n};\n\nexport const insertTemplateVariable = (\n  editor: MyEditor | PlateEditor,\n  data: {\n    id: string;\n    name: string;\n    group: string;\n  },\n  options?,\n) => {\n  const templateVariable = {\n    type: getPluginType(editor as PlateEditor, ELEMENT_TEMPLATE_VARIABLE),\n    children: [{ text: '' }],\n    ...data,\n  };\n\n  const initialText = getNodeText(editor);\n  insertNodes(\n    editor,\n    //@ts-ignore\n    templateVariable,\n    options,\n  );\n  const updatedText = getNodeText(editor);\n\n  const hasBeenReplaced = !!updatedText;\n  if (hasBeenReplaced) {\n    if (initialText) {\n      //@ts-ignore\n      const variableLength = updatedText.length - initialText.length;\n      moveSelection(editor, { unit: 'offset', distance: variableLength });\n      // TODO: Improve template variables micro-interactions,\n      //  by doing things like adding/removing spaces if they are already there\n    }\n  } else {\n    moveSelection(editor);\n    insertText(editor, ' ');\n  }\n\n  if (options) {\n    deselect(editor);\n  }\n\n  setTimeout(() => {\n    focusEditor(editor, editor.selection!);\n  }, 0);\n};\n\nexport const insertMeetingLink = (editor, data) => {\n  const meetingLink = {\n    type: getPluginType(editor, ELEMENT_MEETING_LINK),\n    children: [{ text: '' }],\n    ...data,\n  };\n\n  const initialText = getNodeText(editor);\n  insertNodes(editor, meetingLink);\n  const updatedText = getNodeText(editor);\n  const hasBeenReplaced = !!updatedText;\n\n  if (hasBeenReplaced) {\n    if (initialText) {\n      //@ts-ignore\n      const variableLength = updatedText.length - initialText.length;\n      moveSelection(editor, { unit: 'character', distance: variableLength });\n      // TODO: Improve template variables micro-interactions,\n      //  by doing things like adding/removing spaces if they are already there\n    }\n  } else {\n    moveSelection(editor);\n    insertText(editor, ' ');\n  }\n\n  setTimeout(() => {\n    focusEditor(editor, editor.selection!);\n  }, 0);\n};\n","import { insertNodes, isElement, removeNodes } from '@udecode/plate';\nimport { ELEMENT_MISSING_VARIABLE, ELEMENT_TEMPLATE_VARIABLE } from './defaults';\n\nconst withTemplateVariableOverrides = (editor, { options: { replace, values } }) => {\n  const { normalizeNode } = editor;\n\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (replace && isElement(node) && node.type === ELEMENT_TEMPLATE_VARIABLE) {\n      removeNodes(editor, { at: path });\n      const variable = values.find(v => [v.logicRole, v.id].includes(node.id));\n      if (variable?.value) {\n        insertNodes(\n          editor,\n          {\n            text: variable.value,\n          },\n          { at: path },\n        );\n      } else {\n        insertNodes(editor, { ...node, type: ELEMENT_MISSING_VARIABLE }, { at: path });\n      }\n    } else {\n      normalizeNode(entry);\n    }\n  };\n\n  return editor;\n};\n\nexport default withTemplateVariableOverrides;\n","import { useMemo } from 'react';\nimport { ELEMENT_TEMPLATE_VARIABLE, ELEMENT_MISSING_VARIABLE } from './defaults';\nimport withTemplateVariableOverrides from './withTemplateVariableOverrides';\nimport hash from 'object-hash';\nimport { createElementAs } from '@udecode/plate';\nimport { toTitleCase } from '@bloobirds-it/utils';\nimport { useBaseEmailVariableValue } from '@bloobirds-it/hooks';\n\nexport const useTemplateVariablesPlugin = ({ replace = false }) => {\n  const emailVariablesValues = useBaseEmailVariableValue();\n\n  return useMemo(() => {\n    const values = Object.values(emailVariablesValues).flat();\n\n    const options = {\n      replace,\n      values,\n    };\n\n    return {\n      key: ELEMENT_TEMPLATE_VARIABLE,\n      isElement: true,\n      isVoid: true,\n      isInline: true,\n      options: options,\n      withOverrides: withTemplateVariableOverrides,\n      plugins: [\n        {\n          key: ELEMENT_MISSING_VARIABLE,\n          isElement: true,\n          isVoid: true,\n          isInline: true,\n        },\n      ],\n      then: (_, { type }) => {\n        return {\n          options: options,\n          deserializeHtml: {\n            type,\n            getNode: el => ({\n              type,\n              group: el.getAttribute('group'),\n              name: el.getAttribute('name'),\n              id: el.getAttribute('type'),\n            }),\n            rules: [{ validNodeName: 'VARIABLE' }],\n          },\n          serializeHtml: ({ element }) => {\n            //@ts-ignore\n            const variable: any = values.find(v => v.id === element.id);\n            if (variable) {\n              return variable?.value;\n            } else {\n              const group = toTitleCase(element.group);\n              const name = toTitleCase(element.name);\n\n              return createElementAs('span', {\n                ...element,\n                as: 'missing-variable',\n                style: {\n                  color: 'var(--softTomato)',\n                  backgroundColor: '#ffdbe2',\n                  borderRadius: '4px',\n                  padding: '2px 4px',\n                  textTransform: 'capitalize',\n                  whiteSpace: 'normal',\n                },\n                children: `${group}: ${name}`,\n              });\n            }\n          },\n        };\n      },\n    };\n  }, [replace, hash(emailVariablesValues)]);\n};\n","/**\n * Flat map an array of object by key.\n */\nexport const flatMapByKey = (arr, key) => arr.flatMap(item => item[key] ?? []);\n\nexport const checkEmptyText = ({\n  type,\n  children,\n}: {\n  type: string;\n  children: { [text: string]: string }[];\n}) => {\n  if (type === 'p') {\n    return children[0]?.text?.trim() === '';\n  }\n  return false;\n};\n","import { flatMapByKey } from '../../utils';\nimport { ELEMENT_MISSING_VARIABLE } from '../defaults';\n\nexport const hasMissingVariables = root => {\n  const nodes = flatMapByKey(root, 'children');\n  return nodes.some(node => node?.type === ELEMENT_MISSING_VARIABLE);\n};\n","import {\n  createExitBreakPlugin,\n  createSelectOnBackspacePlugin,\n  ELEMENT_BLOCKQUOTE,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n  ELEMENT_IMAGE,\n  ELEMENT_PARAGRAPH,\n  ExitBreakPlugin,\n  isBlockAboveEmpty,\n  isSelectionAtBlockStart,\n  KEYS_HEADING,\n  ResetNodePlugin,\n  SelectOnBackspacePlugin,\n} from '@udecode/plate';\n\nimport { createMyPlugins, MyPlatePlugin } from './../config/typescript';\nimport { createDirPlugin } from './createDirPlugin';\nimport { createDirectionPlugin } from './createDirectionPlugin';\nimport { ELEMENT_IMAGE_LINK } from './imagePlugin/defaults';\nimport { ELEMENT_RAW_HTML_BLOCK } from './rawHTMLBlockPlugin';\nimport { ELEMENT_SLOTS_FORM } from './slotsBlockPlugin';\nimport { ELEMENT_MISSING_VARIABLE, ELEMENT_TEMPLATE_VARIABLE } from './templateVariablesPlugin';\n\nconst resetBlockTypesCommonRule = {\n  types: [ELEMENT_BLOCKQUOTE],\n  defaultType: ELEMENT_PARAGRAPH,\n};\n\nexport const resetBlockTypePlugin: Partial<MyPlatePlugin<ResetNodePlugin>> = {\n  options: {\n    rules: [\n      {\n        ...resetBlockTypesCommonRule,\n        hotkey: 'Enter',\n        predicate: isBlockAboveEmpty,\n      },\n      {\n        ...resetBlockTypesCommonRule,\n        hotkey: 'Backspace',\n        predicate: isSelectionAtBlockStart,\n      },\n    ],\n  },\n};\n\nexport const exitBreakPlugin: Partial<MyPlatePlugin<ExitBreakPlugin>> = {\n  options: {\n    rules: [\n      {\n        hotkey: 'mod+enter',\n      },\n      {\n        hotkey: 'mod+shift+enter',\n        before: true,\n      },\n      {\n        hotkey: 'enter',\n        query: {\n          start: true,\n          end: true,\n          allow: KEYS_HEADING,\n        },\n        relative: true,\n      },\n      {\n        hotkey: 'enter',\n        query: {\n          allow: [ELEMENT_IMAGE, ELEMENT_BLOCKQUOTE, ELEMENT_IMAGE_LINK],\n        },\n      },\n      {\n        hotkey: 'enter',\n        before: true,\n        query: {\n          start: true,\n          allow: [ELEMENT_PARAGRAPH],\n        },\n      },\n    ],\n  },\n};\n\nexport const selectOnBackspacePlugin: Partial<MyPlatePlugin<SelectOnBackspacePlugin>> = {\n  options: {\n    query: {\n      allow: [\n        ELEMENT_IMAGE,\n        ELEMENT_TEMPLATE_VARIABLE,\n        ELEMENT_MISSING_VARIABLE,\n        ELEMENT_RAW_HTML_BLOCK,\n        ELEMENT_IMAGE_LINK,\n        ELEMENT_SLOTS_FORM,\n      ],\n    },\n  },\n};\n\nconst createControlPlugins = () =>\n  createMyPlugins([\n    //createResetNodePlugin(resetBlockTypePlugin),\n    createExitBreakPlugin(exitBreakPlugin),\n    createSelectOnBackspacePlugin(selectOnBackspacePlugin),\n    createDirectionPlugin({\n      inject: {\n        props: {\n          validTypes: [\n            ELEMENT_PARAGRAPH,\n            ELEMENT_H1,\n            ELEMENT_H2,\n            ELEMENT_H3,\n            ELEMENT_H4,\n            ELEMENT_H5,\n            ELEMENT_H6,\n            'span',\n          ],\n        },\n      },\n    }),\n    createDirPlugin({\n      inject: {\n        props: {\n          validTypes: [\n            ELEMENT_PARAGRAPH,\n            ELEMENT_H1,\n            ELEMENT_H2,\n            ELEMENT_H3,\n            ELEMENT_H4,\n            ELEMENT_H5,\n            ELEMENT_H6,\n          ],\n        },\n      },\n    }),\n  ]);\n\nexport default createControlPlugins;\n","import {\n  ELEMENT_IMAGE,\n  ELEMENT_PARAGRAPH,\n  TImageElement,\n  InsertNodesOptions,\n  ELEMENT_LIC,\n  getParentNode,\n  getPath,\n} from '@udecode/plate';\nimport {\n  getPluginType,\n  insertNodes,\n  PlateEditor,\n  Value,\n  focusEditor,\n  findNodePath,\n  getPointAfter,\n  select,\n} from '@udecode/plate-core';\n\nconst selectNextElementLic = (editor, type, path) => {\n  if (type === ELEMENT_LIC) {\n    if (path) {\n      select(editor, getPointAfter(editor, path));\n      const nextNode = getParentNode(editor, getPath(editor, editor.selection));\n\n      if (\n        nextNode &&\n        nextNode[0]?.type === ELEMENT_LIC &&\n        nextNode[1]?.toString() !== path?.toString()\n      ) {\n        selectNextElementLic(editor, nextNode[0]?.type, nextNode[1]);\n      }\n    }\n  }\n};\n\nconst newNode = {\n  type: ELEMENT_PARAGRAPH,\n  children: [{ text: '' }],\n};\n\nexport const insertImage = <V extends Value>(\n  editor: PlateEditor<V>,\n  url: string | ArrayBuffer,\n  options?: InsertNodesOptions,\n) => {\n  const text = { text: '' };\n  const image = {\n    type: getPluginType(editor, ELEMENT_IMAGE),\n    url: url as any,\n    width: 300,\n    children: [text],\n  };\n\n  // If the cursor is inside a list item, we need to move the cursor to the end of the list item and insert the image there.\n  const currentNode = getParentNode(editor, getPath(editor, editor.selection));\n  if (currentNode[0]?.type === ELEMENT_LIC) {\n    //@ts-ignore\n    insertNodes(editor, newNode, {\n      at: [editor.children.length],\n    });\n  }\n  selectNextElementLic(editor, currentNode[0]?.type, currentNode[1]);\n\n  insertNodes<TImageElement>(editor, image, options);\n\n  setTimeout(() => {\n    const path = findNodePath(editor, image);\n    if (path) {\n      select(editor, path);\n    }\n    focusEditor(editor);\n  }, 500);\n};\n","import { ImagePlugin, isImageUrl } from '@udecode/plate';\nimport { PlateEditor, Value, WithPlatePlugin } from '@udecode/plate-core';\nimport { insertImage } from './transforms/insertImage';\n\n/**\n * If inserted text is image url, insert image instead.\n */\nexport const withImageEmbed = <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>(\n  editor: E,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  plugin: WithPlatePlugin<ImagePlugin, V, E>,\n) => {\n  const { insertData } = editor;\n\n  editor.insertData = (dataTransfer: DataTransfer) => {\n    const text = dataTransfer.getData('text/plain');\n\n    if (isImageUrl(text)) {\n      insertImage(editor, text);\n      return;\n    }\n\n    insertData(dataTransfer);\n  };\n\n  return editor;\n};\n","import { AnyObject, ImagePlugin, select } from '@udecode/plate';\nimport {\n  getInjectedPlugins,\n  pipeInsertDataQuery,\n  PlateEditor,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-core';\nimport { insertImage } from './transforms/insertImage';\nimport { api } from '@bloobirds-it/utils';\n\n/**\n * Allows for pasting images from clipboard.\n * Not yet: dragging and dropping images, selecting them through a file system dialog.\n */\nexport const withImageUpload = <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>(\n  editor: E,\n  plugin: WithPlatePlugin<ImagePlugin, V, E>,\n) => {\n  const {\n    options: { uploadImage },\n  } = plugin;\n  const { insertData } = editor;\n\n  editor.insertData = (dataTransfer: DataTransfer) => {\n    const text = dataTransfer.getData('text/plain');\n    const { files } = dataTransfer;\n\n    if (files && files.length > 0) {\n      const injectedPlugins = getInjectedPlugins<AnyObject, V, E>(editor, plugin);\n      if (\n        !pipeInsertDataQuery<AnyObject, V, E>(injectedPlugins, {\n          data: text,\n          dataTransfer,\n        })\n      ) {\n        return insertData(dataTransfer);\n      }\n      //@ts-ignore\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split('/');\n\n        if (mime === 'image') {\n          reader.addEventListener('load', async () => {\n            if (!reader.result) {\n              return;\n            }\n\n            const formData = new FormData();\n            formData.append('file', file);\n            formData.append('visible', 'true');\n\n            const response = await api.post('/messaging/mediaFiles', formData, {\n              validateStatus: () => true,\n              headers: {\n                'Content-Type': 'multipart/form-data',\n              },\n            });\n\n            if (response.status === 201) {\n              insertImage(editor, response.data.url);\n            }\n          });\n\n          reader.readAsDataURL(file);\n        }\n      }\n    } else {\n      insertData(dataTransfer);\n    }\n  };\n\n  return editor;\n};\n","import { ImagePlugin } from '@udecode/plate';\nimport { PlateEditor, Value, WithPlatePlugin } from '@udecode/plate-core';\nimport { withImageEmbed } from './withImageEmbed';\nimport { withImageUpload } from './withImageUpload';\n\n/**\n * @see withImageUpload\n * @see withImageEmbed\n */\nexport const withImage = <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>(\n  editor: E,\n  plugin: WithPlatePlugin<ImagePlugin, V, E>,\n) => {\n  const {\n    options: { disableUploadInsert, disableEmbedInsert },\n  } = plugin;\n\n  if (!disableUploadInsert) {\n    editor = withImageUpload(editor, plugin);\n  }\n\n  if (!disableEmbedInsert) {\n    editor = withImageEmbed(editor, plugin);\n  }\n\n  return editor;\n};\n","import { createPluginFactory, ELEMENT_IMAGE, ImagePlugin } from '@udecode/plate';\nimport { ELEMENT_IMAGE_LINK } from './defaults';\nimport { withImage } from './withImage';\n\nexport const createImagePlugin = createPluginFactory<ImagePlugin>({\n  key: ELEMENT_IMAGE,\n  isElement: true,\n  isVoid: true,\n  withOverrides: withImage,\n  options: {\n    disableCaption: true,\n  },\n  plugins: [\n    {\n      key: ELEMENT_IMAGE_LINK,\n      isElement: true,\n      isVoid: true,\n      then: (editor, { type }) => ({\n        deserializeHtml: {\n          rules: [{ validNodeName: 'IMGLINK' }],\n          getNode: el => ({\n            type,\n            url: el.getAttribute('src'),\n            href: el.getAttribute('href'),\n          }),\n        },\n        serializeHtml: ({ element }) => {\n          const width = element.width;\n          return (\n            <a rel=\"noreferrer noopener\" target=\"_blank\" href={element.href as string}>\n              <img\n                src={element.url as string}\n                alt=\"\"\n                style={{\n                  width: typeof width === 'string' || typeof width === 'number' ? width : undefined,\n                  marginTop: 8,\n                }}\n              />\n            </a>\n          );\n        },\n      }),\n    },\n  ],\n  then: (_, { type }) => ({\n    deserializeHtml: {\n      rules: [\n        {\n          validNodeName: 'IMG',\n        },\n      ],\n      getNode: el => ({\n        type,\n        url: el.getAttribute('src'),\n      }),\n    },\n    serializeHtml: ({ element }) => {\n      const width = element.width;\n      return (\n        <img\n          src={element.url as string}\n          alt=\"\"\n          style={{\n            width: typeof width === 'string' || typeof width === 'number' ? width : undefined,\n            marginTop: 8,\n          }}\n        />\n      );\n    },\n  }),\n});\n","import { getPluginType, insertNodes, PlateEditor, TImageElement } from '@udecode/plate';\nimport { ELEMENT_IMAGE_LINK } from '../defaults';\nimport { Value } from '@udecode/plate-core';\n\nexport const insertImageLink = <V extends Value>(\n  editor: PlateEditor<V>,\n  url: string | ArrayBuffer,\n  href: string,\n) => {\n  const text = { text: '' };\n  const image: TImageElement = {\n    type: getPluginType(editor, ELEMENT_IMAGE_LINK),\n    url: url as any,\n    href: href as any,\n    children: [text],\n  };\n  insertNodes<TImageElement>(editor, image);\n};\n","export const ELEMENT_REPLY_HISTORY = 'reply-history';\n","import { ELEMENT_REPLY_HISTORY } from './defaults';\nimport spacetime from 'spacetime';\n\nexport const createReplyHistoryPlugin = () => ({\n  key: ELEMENT_REPLY_HISTORY,\n  isElement: true,\n  isVoid: true,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: el => ({\n        type,\n        html: el.getAttribute('html'),\n      }),\n      rules: [{ validNodeName: 'REPLY-HISTORY' }],\n    },\n  }),\n  serializeHtml: ({ element }) => {\n    return (\n      <>\n        <br />\n        <div className=\"gmail_quote\">\n          <div dir=\"ltr\" className=\"gmail_attr\">\n            On {spacetime(element.sentAt).format('nice')}{' '}\n            <a href={`mailto:${element.sentBy}`}>{element.sentBy}</a> wrote:\n            <br />\n          </div>\n          <blockquote\n            dangerouslySetInnerHTML={{ __html: element.html }}\n            className=\"gmail_quote\"\n            style={{\n              margin: '0px 0px 0px 0.8ex',\n              borderLeft: '1px solid rgb(204,204,204)',\n              paddingLeft: '1ex',\n            }}\n          />\n        </div>\n      </>\n    );\n  },\n});\n","import { getPluginType } from '@udecode/plate';\nimport { ELEMENT_REPLY_HISTORY } from '../defaults';\n\nexport const createReplyHistory = (editor, { html, sentAt, sentBy }) => {\n  const type = getPluginType(editor, ELEMENT_REPLY_HISTORY);\n  return {\n    html,\n    type,\n    sentAt,\n    sentBy,\n    children: [{ text: '' }],\n  };\n};\n","import React from 'react';\nimport { Box } from '@udecode/plate-core';\nimport { Image, Media } from '@udecode/plate-media';\nimport { useFocused, useReadOnly, useSelected } from 'slate-react';\nimport { ImageElementProps } from '@udecode/plate';\nimport styles from './imageLink.module.css';\nimport clsx from 'clsx';\n\nexport const ImageElement = (props: ImageElementProps) => {\n  const { children, nodeProps, resizableProps, ignoreReadOnly = false } = props;\n\n  const { as, ...rootProps } = props;\n\n  const focused = useFocused();\n  const selected = useSelected();\n  const readOnly = useReadOnly();\n\n  const classes = clsx(styles.image, {\n    [styles.focused]: selected && focused,\n  });\n\n  return (\n    <Media.Root {...rootProps} className={styles.root}>\n      <figure className={`group ${styles.figure}`} contentEditable={false}>\n        <Media.Resizable\n          // @ts-ignore\n          className={styles.resizable}\n          handleComponent={{\n            // eslint-disable-next-line react/jsx-handler-names\n            left: <Box className={styles.handleLeft} />,\n            // eslint-disable-next-line react/jsx-handler-names\n            right: <Box className={styles.handleRight} />,\n          }}\n          readOnly={!ignoreReadOnly && readOnly}\n          {...resizableProps}\n        >\n          <Image className={classes} {...nodeProps} width={'100%'} />\n        </Media.Resizable>\n      </figure>\n\n      {children}\n    </Media.Root>\n  );\n};\n","import styles from './imageLink.module.css';\nimport { useFocused, useReadOnly, useSelected } from 'slate-react';\nimport { Box, Image, Link, Media } from '@udecode/plate';\nimport clsx from 'clsx';\n\nconst ImageLink = props => {\n  const { as, ...rootProps } = props;\n  const {\n    children,\n    nodeProps,\n    resizableProps,\n    align = 'center',\n    ignoreReadOnly = false,\n  } = rootProps;\n\n  const focused = useFocused();\n  const selected = useSelected();\n  const readOnly = useReadOnly();\n\n  const classes = clsx(styles.image, {\n    [styles.focused]: selected && focused,\n  });\n\n  // Fix for useLink hook of @udecode/plate-link\n  const linkProps = {\n    ...rootProps,\n    element: { ...rootProps.element, url: rootProps.element.href, target: '_blank' },\n  };\n\n  return (\n    <Media.Root {...rootProps} className={styles.root}>\n      <figure className={`group ${styles.figure}`} contentEditable={false}>\n        <Media.Resizable\n          // @ts-ignore\n          className={styles.resizable}\n          handleComponent={{\n            // eslint-disable-next-line react/jsx-handler-names\n            left: <Box className={styles.handleLeft} />,\n            // eslint-disable-next-line react/jsx-handler-names\n            right: <Box className={styles.handleRight} />,\n          }}\n          align={align}\n          readOnly={!ignoreReadOnly && readOnly}\n          {...resizableProps}\n        >\n          <Link.Root {...linkProps}>\n            <Image className={classes} {...nodeProps} width={'100%'} />\n          </Link.Root>\n        </Media.Resizable>\n      </figure>\n\n      {children}\n    </Media.Root>\n  );\n};\n\nexport default ImageLink;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport classNames from 'clsx';\nimport { useSelected } from 'slate-react';\n\nimport styles from './meetingLink.module.css';\n\nconst MissingMeetingLink = ({ attributes, children, element }) => {\n  const selected = useSelected();\n  const { t } = useTranslation('translation', { keyPrefix: 'richTextEditor' });\n\n  const classes = classNames(styles.container, {\n    [styles.focused]: selected,\n  });\n  return (\n    <span {...attributes}>\n      <span title={t('missingMeetingLink')} className={classes}>\n        {element?.children[0]?.text}\n      </span>\n      {children}\n    </span>\n  );\n};\n\nexport default MissingMeetingLink;\n","import React from 'react';\n\nimport { useActiveUserId, useMeetingLinks } from '@bloobirds-it/hooks';\nimport { addHttpsIfNeeded } from '@bloobirds-it/utils';\n\nimport MissingMeetingLink from './missingMeetingLink';\n\nconst getMeetingLinkURL = (meetingLinks, linkId) => {\n  if (linkId === '__default__') return meetingLinks?.find(link => link.defaultLink)?.url;\n  return meetingLinks?.find(link => link.id === linkId)?.url;\n};\nconst MeetingLink = ({ attributes, element, children }) => {\n  const { userId, linkId, children: elementChildren } = element;\n  const activeUserId = useActiveUserId();\n  const { getUserMeetingLinks } = useMeetingLinks();\n  const meetingLinks = getUserMeetingLinks(userId === '__me__' ? activeUserId : userId);\n  const link = getMeetingLinkURL(meetingLinks, linkId);\n\n  if (link) {\n    const linkURL = addHttpsIfNeeded(link);\n\n    return (\n      <span {...attributes}>\n        <a href={linkURL} target=\"_blank\" rel=\"noreferrer\">\n          {elementChildren[0]?.text}\n        </a>\n        {children}\n      </span>\n    );\n  } else {\n    return (\n      <MissingMeetingLink attributes={attributes} element={element}>\n        {children}\n      </MissingMeetingLink>\n    );\n  }\n};\n\nexport default MeetingLink;\n","import React from 'react';\nimport styles from './rawHTMLBlock.module.css';\nimport { useSelected } from 'slate-react';\nimport classNames from 'clsx';\n\nconst RawHTMLBlock = ({ children, attributes, element }) => {\n  const selected = useSelected();\n\n  const classes = classNames(styles.container, {\n    [styles.focused]: selected,\n  });\n\n  return (\n    <div {...attributes} className={classes}>\n      <div contentEditable={false}>\n        <div dangerouslySetInnerHTML={{ __html: element.html }} />\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default RawHTMLBlock;\n","import React, { useState } from 'react';\nimport ReactShadowRoot from 'react-shadow-root';\nimport styles from './replyHistory.module.css';\nimport { select } from '@udecode/plate';\n\nconst replyStyle = `\n  div[dir='ltr'] + blockquote {\n    opacity: 0.75;\n  }\n  div {\n    white-space: initial;\n  }\n`;\n\nconst ToggleButton = ({ onClick }) => (\n  <button type=\"button\" className={styles.toggle} onClick={onClick}>\n    <div>•</div>\n    <div>•</div>\n    <div>•</div>\n  </button>\n);\n\nconst ReplyHistory = ({ element, attributes, children, editor }) => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <div {...attributes}>\n      <div contentEditable={false}>\n        <ToggleButton\n          onClick={() => {\n            setVisible(!visible);\n            setTimeout(() => {\n              select(editor, [0, 0]);\n            }, 0);\n          }}\n        />\n        {visible && (\n          <ReactShadowRoot>\n            <style>{replyStyle}</style>\n            <div className={styles.history} dangerouslySetInnerHTML={{ __html: element.html }} />\n          </ReactShadowRoot>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default ReplyHistory;\n","import React from 'react';\n\nimport { useEditorRef } from '@udecode/plate';\nimport classNames from 'clsx';\nimport { useSelected } from 'slate-react';\n\nimport styles from './slotsBlock.module.css';\n\nconst SlotsBlock = ({ children, attributes, element }) => {\n  const editor = useEditorRef();\n  //@ts-ignore\n  const selected = useSelected();\n\n  const classes = classNames(styles.container, {\n    [styles.focused]: selected,\n  });\n  function handleClick() {\n    element.onClick();\n  }\n\n  return (\n    <div {...attributes} className={classes} onClick={handleClick}>\n      <div contentEditable={false}>\n        <div dangerouslySetInnerHTML={{ __html: element.html }} />\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default SlotsBlock;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport classNames from 'clsx';\nimport { useSelected } from 'slate-react';\n\nimport styles from './templateVariable.module.css';\n\nconst MissingVariable = ({ attributes, children, element }) => {\n  const selected = useSelected();\n  const { t } = useTranslation('translation', { keyPrefix: 'richTextEditor' });\n\n  const classes = classNames(styles.missingContainer, {\n    [styles.missingFocused]: selected,\n  });\n\n  return (\n    <span {...attributes}>\n      <span title={t('variableNotFound')} className={classes}>\n        {element.group} {element.name}\n      </span>\n      {children}\n    </span>\n  );\n};\n\nexport default MissingVariable;\n","import styles from './templateVariable.module.css';\nimport classNames from 'clsx';\nimport { useSelected } from 'slate-react';\nexport interface TemplateVariablesPlugin {\n  replace?: boolean;\n}\n\nconst TemplateVariable = ({ attributes, children, element, editor }) => {\n  const selected = useSelected();\n\n  const classes = classNames(styles.container, {\n    [styles.focused]: selected,\n  });\n\n  return (\n    <span {...attributes}>\n      <span contentEditable={false} className={classes}>\n        {element.group} {element.name}\n      </span>\n      {children}\n    </span>\n  );\n};\n\nexport default TemplateVariable;\n","import React, { ReactNode } from 'react';\n\nimport { Tooltip } from '@bloobirds-it/flamingo-ui';\nimport clsx from 'clsx';\n\nimport styles from './ColorPicker.module.css';\n\ntype ColorButtonProps = {\n  name?: string;\n  value: string;\n  isBrightColor: boolean;\n  isSelected: boolean;\n  selectedIcon: ReactNode;\n  updateColor: (color: string) => void;\n};\n\nexport const ColorButton = ({\n  name,\n  value,\n  isBrightColor,\n  isSelected,\n  selectedIcon,\n  updateColor,\n}: ColorButtonProps) => {\n  const classes = clsx(styles.colorButton, {\n    [styles.colorButtonBright]: !isBrightColor,\n  });\n\n  const content = (\n    <button\n      data-testid=\"ColorButton\"\n      type=\"button\"\n      aria-label={name}\n      name={name}\n      onClick={() => updateColor(value)}\n      className={classes}\n      style={{ backgroundColor: value }}\n    >\n      {isSelected ? selectedIcon : null}\n    </button>\n  );\n\n  return name ? (\n    <Tooltip title={name} position=\"top\">\n      {content}\n    </Tooltip>\n  ) : (\n    content\n  );\n};\n","import React, { ReactNode } from 'react';\n\nimport { ColorButton } from './ColorButton';\nimport styles from './ColorPicker.module.css';\nimport { ColorType } from './ColorType';\n\ntype ColorsProps = {\n  prefix?: string;\n  color?: string;\n  colors: ColorType[];\n  selectedIcon: ReactNode;\n  updateColor: (color: string) => void;\n};\n\nexport const Colors = ({ prefix, color, colors, selectedIcon, updateColor }: ColorsProps) => {\n  return (\n    <div className={styles.colors}>\n      {colors.map(({ name, value, isBrightColor }) => (\n        <ColorButton\n          key={prefix + (name || value)}\n          name={name}\n          value={value}\n          isBrightColor={isBrightColor}\n          isSelected={color === value}\n          selectedIcon={selectedIcon}\n          updateColor={updateColor}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { ReactNode } from 'react';\n\nimport { ColorType } from './ColorType';\nimport { Colors } from './Colors';\n\ntype CustomColorsProps = {\n  color?: string;\n  customColors: ColorType[];\n  selectedIcon: ReactNode;\n  updateColor: (color: string) => void;\n};\n\nexport const CustomColors = ({\n  color,\n  customColors,\n  selectedIcon,\n  updateColor,\n}: CustomColorsProps) => {\n  return (\n    <Colors\n      prefix=\"custom\"\n      color={color}\n      colors={customColors}\n      selectedIcon={selectedIcon}\n      updateColor={updateColor}\n    />\n  );\n};\n","import React, { ReactNode } from 'react';\n\nimport styles from './ColorPicker.module.css';\nimport { ColorType } from './ColorType';\nimport { Colors } from './Colors';\nimport { CustomColors } from './CustomColors';\n\ntype ColorPickerProps = {\n  color?: string;\n  colors: ColorType[];\n  customColors: ColorType[];\n  selectedIcon: ReactNode;\n  updateColor: (color: string) => void;\n  updateCustomColor: (color: string) => void;\n  clearColor: () => void;\n  open?: boolean;\n};\n\nconst ColorPickerInternal = ({\n  color,\n  colors,\n  customColors,\n  selectedIcon,\n  updateColor,\n  updateCustomColor,\n  clearColor,\n}: ColorPickerProps) => {\n  return (\n    <div data-testid=\"ColorPicker\" className={styles.colorPicker}>\n      <CustomColors\n        color={color}\n        customColors={customColors}\n        selectedIcon={selectedIcon}\n        updateColor={updateColor}\n      />\n      <div className={styles.divider} />\n      <Colors color={color} colors={colors} selectedIcon={selectedIcon} updateColor={updateColor} />\n      <button\n        data-testid=\"ColorPickerClear\"\n        onClick={clearColor}\n        disabled={!color}\n        className={styles.clearButton}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n\nexport const ColorPicker = React.memo(\n  ColorPickerInternal,\n  (prev, next) =>\n    prev.color === next.color &&\n    prev.colors === next.colors &&\n    prev.customColors === next.customColors &&\n    prev.open === next.open,\n);\n","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\n\nimport { ToolbarButton, ColorType as ColorTypeF, Icon } from '@bloobirds-it/flamingo-ui';\nimport { useLocalStorage } from '@bloobirds-it/hooks';\nimport { MIXPANEL_EVENTS, LocalStorageKeys } from '@bloobirds-it/types';\nimport {\n  DEFAULT_COLORS,\n  DEFAULT_CUSTOM_COLORS,\n  MARK_COLOR,\n  focusEditor,\n  getMark,\n  removeMark,\n  select,\n  setMarks,\n  useEventPlateId,\n  usePlateEditorRef,\n  usePlateEditorState,\n  ToolbarDropdown,\n  getPluginType,\n} from '@udecode/plate';\nimport mixpanel from 'mixpanel-browser';\n\nimport { ColorPicker } from './ColorPicker/ColorPicker';\nimport { ColorType } from './ColorPicker/ColorType';\nimport styles from './editorToolbar.module.css';\n\ntype ColorPickerToolbarDropdownProps = {\n  id?: string;\n  colors?: ColorType[];\n  customColors?: ColorType[];\n  closeOnSelect?: boolean;\n  color?: ColorTypeF;\n};\n\nfunction isBrightColor(hexColor) {\n  if (!hexColor) {\n    return false;\n  }\n\n  hexColor = hexColor.replace('#', '');\n\n  const r = parseInt(hexColor.slice(0, 2), 16);\n  const g = parseInt(hexColor.slice(2, 4), 16);\n  const b = parseInt(hexColor.slice(4, 6), 16);\n\n  const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\n\n  const threshold = 192; // Umbral para determinar si el color es brillante\n\n  return luminance > threshold;\n}\n\nexport const ColorPickerToolbarDropdown = ({\n  id,\n  colors = DEFAULT_COLORS,\n  customColors = DEFAULT_CUSTOM_COLORS,\n  ...rest\n}: ColorPickerToolbarDropdownProps) => {\n  id = useEventPlateId(id);\n  const editor = usePlateEditorState(id);\n  const editorRef = usePlateEditorRef(id);\n  const { get, set } = useLocalStorage();\n  const dropdownRef = useRef(null);\n  const type = getPluginType(editor, MARK_COLOR);\n\n  const [open, setOpen] = useState(false);\n\n  const color = editorRef && (getMark(editorRef, type) as string);\n\n  const [selectedColor, setSelectedColor] = useState<string>();\n\n  const onToggle = useCallback(\n    (value = !open) => {\n      setOpen(value);\n      if (!open) mixpanel.track(MIXPANEL_EVENTS.EDITOR_OPEN_COLOR_PICKER);\n    },\n    [open, setOpen],\n  );\n\n  const updateColor = useCallback(\n    (value: string) => {\n      if (editorRef && editor && editor.selection) {\n        setSelectedColor(value);\n\n        select(editorRef, editor.selection);\n        focusEditor(editorRef);\n\n        setMarks(editor, { [type]: value });\n\n        // Guardar en localstorage el color seleccionado en la lista de últimos colores usados\n        const lastColors = get(LocalStorageKeys.LastColors) || [];\n        const index = lastColors.indexOf(value);\n        if (index !== -1) {\n          lastColors.splice(index, 1);\n        }\n        lastColors.unshift(value);\n        if (lastColors.length > 10) {\n          lastColors.pop();\n        }\n        set(LocalStorageKeys.LastColors, lastColors);\n      }\n    },\n    [editor, editorRef, type],\n  );\n\n  const updateColorAndClose = useCallback(\n    (value: string) => {\n      updateColor(value);\n      onToggle();\n    },\n    [onToggle, updateColor],\n  );\n\n  const clearColor = useCallback(() => {\n    if (editorRef && editor && editor.selection) {\n      select(editorRef, editor.selection);\n      focusEditor(editorRef);\n\n      if (selectedColor) {\n        removeMark(editor, { key: type });\n      }\n\n      onToggle();\n    }\n  }, [editor, editorRef, onToggle, selectedColor, type]);\n\n  useEffect(() => {\n    if (editor?.selection) {\n      setSelectedColor(color);\n    }\n  }, [color, editor?.selection]);\n\n  // Si la lista de últimos colores usados está vacía, se rellena con los colores por defecto\n  useEffect(() => {\n    const lastColors = get(LocalStorageKeys.LastColors) || [];\n    if (lastColors.length === 0) {\n      set(\n        LocalStorageKeys.LastColors,\n        customColors.map(color => color.value),\n      );\n    }\n  }, [get, set]);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setOpen(false);\n      }\n    }\n\n    if (open) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [open]);\n\n  const lastColors = get(LocalStorageKeys.LastColors) || [];\n  const lastColorsObject = useMemo(\n    () =>\n      lastColors.map(color => ({\n        name: '',\n        value: color,\n        isBrightColor: isBrightColor(color),\n      })),\n    [lastColors],\n  );\n\n  return (\n    <div ref={dropdownRef} className={styles.colorContainer}>\n      <ToolbarDropdown\n        control={<ToolbarButton active={open} icon=\"textColor\" {...rest} isDropdown />}\n        open={open}\n        onOpen={onToggle}\n        onClose={onToggle}\n      >\n        <ColorPicker\n          color={selectedColor || color}\n          colors={colors}\n          customColors={lastColorsObject}\n          selectedIcon={\n            <Icon name=\"check\" color={isBrightColor(color) ? 'black' : 'white'} size={16} />\n          }\n          updateColor={updateColorAndClose}\n          updateCustomColor={updateColorAndClose}\n          clearColor={clearColor}\n          open={open}\n        />\n      </ToolbarDropdown>\n    </div>\n  );\n};\n","import { ToolbarButton } from '@bloobirds-it/flamingo-ui';\nimport {\n  focusEditor,\n  isMarkActive,\n  MarkToolbarButtonProps,\n  toggleMark,\n  useEventPlateId,\n  usePlateEditorState,\n  Value,\n} from '@udecode/plate';\n\nexport const MarkToolbarButton = <V extends Value>({\n  id,\n  type,\n  clear,\n  ...props\n}: MarkToolbarButtonProps<V>) => {\n  const editor = usePlateEditorState(useEventPlateId(id));\n\n  return (\n    <>\n      {/* @ts-ignore */}\n      <ToolbarButton\n        active={!!editor?.selection && isMarkActive(editor, type!)}\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n\n          toggleMark(editor, { key: type!, clear });\n          focusEditor(editor);\n        }}\n        {...props}\n      />\n    </>\n  );\n};\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ToolbarButton, ColorType } from '@bloobirds-it/flamingo-ui';\nimport { useSignatures } from '@bloobirds-it/hooks';\nimport { baseUrls } from '@bloobirds-it/utils';\nimport {\n  usePlateEditorRef,\n  useEventPlateId,\n  ToolbarDropdown,\n  usePlateEditorState,\n} from '@udecode/plate';\n\nimport { ELEMENT_RAW_HTML_BLOCK, replaceHTMLBlock } from '../../plugins';\nimport styles from './editorToolbar.module.css';\n\ntype SizeDropdownMenuProps = {\n  id?: string;\n  color?: ColorType;\n};\n\nexport const SelectSignatureDropdown = ({ id, ...props }: SizeDropdownMenuProps) => {\n  id = useEventPlateId(id);\n  const editor = usePlateEditorState(id);\n  const editorRef = usePlateEditorRef(id);\n  const dropdownRef = useRef(null);\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const { data } = useSignatures();\n\n  const onToggle = useCallback(\n    (value = !open) => {\n      setOpen(value);\n    },\n    [open, setOpen],\n  );\n\n  const selectHandler = useCallback(\n    (value: string) => {\n      if (editorRef && editor && editor.selection) {\n        replaceHTMLBlock(editorRef, 'signature', ELEMENT_RAW_HTML_BLOCK, value);\n\n        onToggle();\n      }\n    },\n    [editor, editorRef, onToggle],\n  );\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setOpen(false);\n      }\n    }\n\n    if (open) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [open]);\n\n  return (\n    <div ref={dropdownRef} className={styles.sizeContainer}>\n      <ToolbarDropdown\n        control={<ToolbarButton active={open} icon=\"signature\" {...props} isDropdown />}\n        open={open}\n        onOpen={onToggle}\n        onClose={onToggle}\n      >\n        {data?.length > 0 && (\n          <>\n            {data.map(({ name, signature }) => (\n              <div\n                className={styles.itemSignature}\n                style={{ cursor: 'pointer', fontSize: 13 }}\n                key={name}\n                onClick={() => selectHandler(signature)}\n              >\n                {name}\n              </div>\n            ))}\n            <div className={styles.separator} />\n          </>\n        )}\n        <div\n          className={styles.itemSignature}\n          style={{ cursor: 'pointer', fontSize: 13 }}\n          onClick={() =>\n            window.open(baseUrls[process.env.NODE_ENV] + '/app/management/user', '_blank')\n          }\n        >\n          {data?.length > 0\n            ? t('signatures.selectToolbarEmail.edit')\n            : t('signatures.selectToolbarEmail.create')}\n        </div>\n      </ToolbarDropdown>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ToolbarButton, ColorType, Icon } from '@bloobirds-it/flamingo-ui';\nimport { MIXPANEL_EVENTS } from '@bloobirds-it/types';\nimport {\n  getPluginType,\n  focusEditor,\n  getMark,\n  select,\n  usePlateEditorRef,\n  setMarks,\n  useEventPlateId,\n  ToolbarDropdown,\n  usePlateEditorState,\n  MARK_FONT_SIZE,\n} from '@udecode/plate';\nimport mixpanel from 'mixpanel-browser';\n\nimport styles from './editorToolbar.module.css';\n\ntype SizeDropdownMenuProps = {\n  id?: string;\n  color?: ColorType;\n};\n\nexport const SizeDropdownMenu = ({ id, ...props }: SizeDropdownMenuProps) => {\n  id = useEventPlateId(id);\n  const editor = usePlateEditorState(id);\n  const editorRef = usePlateEditorRef(id);\n  const dropdownRef = useRef(null);\n  const type = getPluginType(editor, MARK_FONT_SIZE);\n  const { t } = useTranslation('translation', { keyPrefix: 'richTextEditor.sizes' });\n\n  const [open, setOpen] = React.useState(false);\n\n  const fontSize = (editorRef && (getMark(editorRef, type) as string)) ?? '13px';\n\n  const sizeValues = [\n    { name: t('small'), value: '10px' },\n    { name: t('medium'), value: '13px' },\n    { name: t('large'), value: '16px' },\n    { name: t('huge'), value: '30px' },\n  ];\n\n  const onToggle = useCallback(\n    (value = !open) => {\n      setOpen(value);\n      if (!open) mixpanel.track(MIXPANEL_EVENTS.EDITOR_OPEN_CHANGE_SIZE);\n    },\n    [open, setOpen],\n  );\n\n  const selectHandler = useCallback(\n    (value: string) => {\n      if (editorRef && editor && editor.selection) {\n        select(editorRef, editor.selection);\n        focusEditor(editorRef);\n\n        setMarks(editor, { [type]: value });\n\n        onToggle();\n      }\n    },\n    [editor, editorRef, type, onToggle],\n  );\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setOpen(false);\n      }\n    }\n\n    if (open) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [open]);\n\n  return (\n    <div ref={dropdownRef} className={styles.sizeContainer}>\n      <ToolbarDropdown\n        control={<ToolbarButton active={open} icon=\"textEditor\" {...props} isDropdown />}\n        open={open}\n        onOpen={onToggle}\n        onClose={onToggle}\n      >\n        {sizeValues &&\n          sizeValues.map(({ name, value }) => (\n            <div\n              className={styles.sizeDropdown}\n              style={{ cursor: 'pointer', fontSize: value }}\n              key={name}\n              onClick={() => {\n                selectHandler(value);\n              }}\n            >\n              <div className={styles.sizeItem}>\n                {fontSize === value && <Icon name=\"check\" color=\"black\" size={16} />}\n                {name}\n              </div>\n            </div>\n          ))}\n      </ToolbarDropdown>\n    </div>\n  );\n};\n","import { Fragment, useEffect, useRef, useState } from 'react';\nimport { useController, useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  Button,\n  ColorType,\n  Dropdown,\n  Icon,\n  IconButton,\n  Input,\n  Item,\n  Radio,\n  RadioGroup,\n  Section,\n  Select,\n  Text,\n  Toolbar,\n  ToolbarButton,\n  ToolbarMenu,\n  ToolbarSection,\n  useToasts,\n  useVisible,\n} from '@bloobirds-it/flamingo-ui';\nimport {\n  useActiveUserId,\n  useBaseEmailVariables,\n  useBaseEmailVariableValue,\n  useMeetingLinks,\n  useUserSearch,\n} from '@bloobirds-it/hooks';\nimport { api, recoverScrollOfBox, removeScrollOfBox, toTitleCase } from '@bloobirds-it/utils';\nimport {\n  ELEMENT_BLOCKQUOTE,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_LINK,\n  ELEMENT_OL,\n  ELEMENT_PARAGRAPH,\n  ELEMENT_UL,\n  focusEditor,\n  getPluginType,\n  insertNodes,\n  isCollapsed,\n  MARK_BOLD,\n  MARK_ITALIC,\n  MARK_UNDERLINE,\n  select,\n  someNode,\n  toggleList,\n  toggleNodeType,\n  triggerFloatingLink,\n  useEventPlateId,\n} from '@udecode/plate';\n\nimport { MyEditor, useMyPlateEditorRef } from '../../config/typescript';\nimport { insertTemplateVariable, insertImage, ELEMENT_MEETING_LINK } from '../../plugins';\nimport { ColorPickerToolbarDropdown } from './ColorPickerToolbarDropdown';\nimport { MarkToolbarButton } from './MarkToolbarButton';\nimport { SelectSignatureDropdown } from './SelectSignatureDropdown';\nimport { SizeDropdownMenu } from './SizeDropdownMenu';\nimport styles from './editorToolbar.module.css';\n\nexport const EditorToolbar = ({\n  children,\n  backgroundColor = 'bloobirds',\n  disabled = false,\n}: {\n  children: React.ReactNode;\n  backgroundColor?: ColorType;\n  disabled?: boolean;\n}) => {\n  const isLinkedinPage = window.location.href.includes('linkedin');\n\n  return (\n    <Toolbar\n      disabled={disabled}\n      backgroundColor={backgroundColor as ColorType}\n      className={isLinkedinPage && styles.toolbar}\n    >\n      {children}\n    </Toolbar>\n  );\n};\n\nexport const EditorToolbarControlsSection = ({ color }: { color?: ColorType }) => {\n  const editor = useMyPlateEditorRef(useEventPlateId());\n\n  return (\n    <ToolbarSection>\n      <ToolbarButton\n        icon=\"undoRevert\"\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          editor?.undo();\n          focusEditor(editor);\n        }}\n        color={color}\n      />\n      <ToolbarButton\n        icon=\"redoReload\"\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          editor?.redo();\n          focusEditor(editor);\n        }}\n        color={color}\n      />\n    </ToolbarSection>\n  );\n};\n\nexport const EditorToolbarFontStylesSection = ({\n  color,\n  enableChangeSize = false,\n}: {\n  color?: ColorType;\n  enableChangeSize?: boolean;\n}) => {\n  const editor = useMyPlateEditorRef(useEventPlateId());\n  const hasSelection = !!editor?.selection;\n\n  return (\n    <ToolbarSection>\n      {enableChangeSize && <SizeDropdownMenu color={color || 'white'} />}\n      <ToolbarButton\n        icon=\"header1\"\n        active={hasSelection && someNode(editor, { match: { type: ELEMENT_H1 } })}\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          toggleNodeType(editor, { activeType: ELEMENT_H1 });\n          focusEditor(editor);\n        }}\n        color={color || 'white'}\n      />\n      <ToolbarButton\n        icon=\"header2\"\n        active={hasSelection && someNode(editor, { match: { type: ELEMENT_H2 } })}\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          toggleNodeType(editor, { activeType: ELEMENT_H2 });\n          focusEditor(editor);\n        }}\n        color={color || 'white'}\n      />\n      <ToolbarButton\n        icon=\"quote\"\n        active={hasSelection && someNode(editor, { match: { type: ELEMENT_BLOCKQUOTE } })}\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          toggleNodeType(editor, { activeType: ELEMENT_BLOCKQUOTE });\n          focusEditor(editor);\n        }}\n        color={color || 'white'}\n      />\n    </ToolbarSection>\n  );\n};\n\nexport const EditorToolbarLink = ({ color, editor }: { color?: ColorType; editor?: MyEditor }) => {\n  const myPlateEditor = useMyPlateEditorRef(useEventPlateId()) || editor;\n  const type = getPluginType(editor, ELEMENT_LINK);\n  const hasSelection = !!editor?.selection;\n\n  return (\n    <ToolbarButton\n      icon=\"link\"\n      color={color || 'white'}\n      active={hasSelection && someNode(myPlateEditor, { match: { type } })}\n      onMouseDown={async event => {\n        if (!myPlateEditor) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        focusEditor(myPlateEditor, myPlateEditor.selection ?? myPlateEditor.prevSelection!);\n\n        setTimeout(() => {\n          triggerFloatingLink(myPlateEditor, { focused: true });\n        }, 0);\n      }}\n    />\n  );\n};\n\nexport const EditorToolbarSnippet = ({ onClick }: { onClick: () => void }) => {\n  const editor = useMyPlateEditorRef(useEventPlateId());\n\n  return (\n    <ToolbarButton\n      icon=\"snippet\"\n      color=\"white\"\n      onMouseDown={async event => {\n        if (!editor) return;\n        onClick?.();\n        event.preventDefault();\n        event.stopPropagation();\n        focusEditor(editor, editor?.selection ?? editor?.prevSelection);\n      }}\n    />\n  );\n};\n\nexport const EditorToolbarTextMarksSection = ({\n  color,\n  editor,\n  enableChangeColor = false,\n}: {\n  color?: ColorType;\n  editor?: MyEditor;\n  enableChangeColor?: boolean;\n}) => {\n  const myPlateEditor = useMyPlateEditorRef() || editor;\n\n  return (\n    <ToolbarSection>\n      <MarkToolbarButton\n        type={getPluginType(myPlateEditor, MARK_BOLD)}\n        icon=\"textBold\"\n        color={color || 'white'}\n        actionHandler=\"onMouseDown\"\n      />\n      <MarkToolbarButton\n        type={getPluginType(myPlateEditor, MARK_ITALIC)}\n        icon=\"textItalic\"\n        color={color || 'white'}\n        actionHandler=\"onMouseDown\"\n      />\n      <MarkToolbarButton\n        type={getPluginType(myPlateEditor, MARK_UNDERLINE)}\n        icon=\"textUnderlined\"\n        color={color || 'white'}\n        actionHandler=\"onMouseDown\"\n      />\n      {enableChangeColor && <ColorPickerToolbarDropdown color={color || 'white'} />}\n      <EditorToolbarLink color={color} editor={myPlateEditor} />\n    </ToolbarSection>\n  );\n};\n\nexport const EditorToolbarListsSection = ({ color }: { color?: ColorType }) => {\n  const editor = useMyPlateEditorRef(useEventPlateId());\n  const hasSelection = !!editor?.selection;\n\n  return (\n    <ToolbarSection>\n      <ToolbarButton\n        icon=\"textBulletList\"\n        color={color || 'white'}\n        active={hasSelection && someNode(editor, { match: { type: ELEMENT_UL } })}\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          toggleList(editor, { type: ELEMENT_UL });\n          focusEditor(editor);\n        }}\n      />\n      <ToolbarButton\n        icon=\"textOrderedList\"\n        color={color || 'white'}\n        active={hasSelection && someNode(editor, { match: { type: ELEMENT_OL } })}\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          toggleList(editor, { type: ELEMENT_OL });\n          focusEditor(editor);\n        }}\n      />\n    </ToolbarSection>\n  );\n};\n\nexport const EditorToolbarSection = ({ children }) => <ToolbarSection>{children}</ToolbarSection>;\n\nexport const EditorToolbarImage = ({\n  color = 'white',\n  editor,\n}: {\n  color?: ColorType;\n  editor?: MyEditor;\n}) => {\n  const myPlateEditorRef = useMyPlateEditorRef(useEventPlateId());\n  const myPlateEditor = myPlateEditorRef || editor;\n  const lastSelection = useRef(null);\n  const { createToast } = useToasts();\n  const { t } = useTranslation('translation', { keyPrefix: 'richTextEditor.toasts' });\n\n  const isFocused =\n    !!myPlateEditorRef && !!myPlateEditor?.selection && isCollapsed(myPlateEditor.selection);\n\n  useEffect(() => {\n    const handleSelectionChange = () => {\n      if (myPlateEditor?.selection) {\n        lastSelection.current = myPlateEditor.selection;\n      }\n    };\n    document.addEventListener('selectionchange', handleSelectionChange);\n    return () => document.removeEventListener('selectionchange', handleSelectionChange);\n  }, [myPlateEditor]);\n\n  const addImage = async event => {\n    const file = event.target.files[0];\n    if (!file || !file.type.startsWith('image/')) {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('visible', 'true');\n\n    const response = await api.post('/messaging/mediaFiles', formData, {\n      validateStatus: () => true,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n\n    if (response.status === 201) {\n      if (!isFocused) {\n        const newNode = {\n          type: ELEMENT_PARAGRAPH,\n          children: [{ text: '' }],\n        };\n\n        // @ts-ignore\n        insertNodes(editor, newNode, {\n          at: [0],\n        });\n\n        insertImage(myPlateEditor, response.data.url, {\n          at: [0],\n        });\n      } else {\n        if (lastSelection.current) {\n          select(myPlateEditor, lastSelection.current);\n        }\n\n        insertImage(myPlateEditor, response.data.url);\n      }\n    } else if (\n      response.status === 500 &&\n      response.data?.message.includes('SizeLimitExceededException')\n    ) {\n      createToast({\n        message: t('sizeError'),\n        type: 'error',\n      });\n    } else {\n      createToast({ message: t('uploadAttachmentError'), type: 'error' });\n    }\n  };\n\n  // This allows selecting the same image twice\n  const resetSelectedImage = event => {\n    event.target.value = null;\n  };\n\n  return (\n    <label className={styles.label} htmlFor=\"insert-image\">\n      <Icon name=\"image\" size={20} color={color} />\n      <input\n        type=\"file\"\n        id=\"insert-image\"\n        name=\"insert-image\"\n        data-test=\"insert-image\"\n        onClick={resetSelectedImage}\n        onChange={addImage}\n        className={styles.input}\n        accept=\".png, .jpeg, .gif, .jpg\"\n        multiple={false}\n      />\n    </label>\n  );\n};\n\nexport const TemplateEditorToolbarImage = ({ color = 'white' }: { color?: ColorType }) => {\n  const eventPlateId = useEventPlateId();\n  const myPlateEditor = useMyPlateEditorRef(eventPlateId);\n  const lastSelection = useRef(null);\n  const { createToast } = useToasts();\n  const { t } = useTranslation('translation', { keyPrefix: 'richTextEditor.toasts' });\n\n  useEffect(() => {\n    const handleSelectionChange = () => {\n      if (myPlateEditor?.selection) {\n        lastSelection.current = myPlateEditor.selection;\n      }\n    };\n    document.addEventListener('selectionchange', handleSelectionChange);\n    return () => document.removeEventListener('selectionchange', handleSelectionChange);\n  }, [myPlateEditor]);\n\n  const addImage = async event => {\n    const file = event.target.files[0];\n    if (!file || !file.type.startsWith('image/')) {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('visible', 'true');\n\n    const response = await api.post('/messaging/mediaFiles', formData, {\n      validateStatus: () => true,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n\n    if (response.status === 201) {\n      if (lastSelection?.current) {\n        select(myPlateEditor, lastSelection.current);\n      }\n      insertImage(myPlateEditor, response.data.url);\n    } else if (\n      response.status === 500 &&\n      response.data?.message.includes('SizeLimitExceededException')\n    ) {\n      createToast({\n        message: t('sizerError'),\n        type: 'error',\n      });\n    } else {\n      createToast({ message: t('uploadAttachmentError'), type: 'error' });\n    }\n  };\n\n  // This allows selecting the same image twice\n  const resetSelectedImage = event => {\n    event.target.value = null;\n  };\n\n  return (\n    <label className={styles.label} htmlFor=\"insert-image-2\">\n      <Icon name=\"image\" size={20} color={color} />\n      <input\n        type=\"file\"\n        id=\"insert-image-2\"\n        name=\"insert-image-2\"\n        data-test=\"insert-image-2\"\n        onClick={event => resetSelectedImage(event)}\n        onChange={addImage}\n        className={styles.input}\n        accept=\".png, .jpeg, .gif, .jpg\"\n        multiple={false}\n      />\n    </label>\n  );\n};\n\nexport const EditorToolbarFileAttachment = ({\n  color = 'white',\n  onAttachment,\n}: {\n  color?: ColorType;\n  onAttachment: (files: Array<any>) => void;\n}) => (\n  <label className={styles.label} htmlFor=\"file-attachment\">\n    <Icon name=\"paperclip\" size={20} color={color} />\n    <input\n      type=\"file\"\n      id=\"file-attachment\"\n      name=\"file-attachment\"\n      data-test=\"file-attachment\"\n      onChange={event => {\n        onAttachment(Array.from(event.target.files));\n        event.target.value = null;\n      }}\n      className={styles.input}\n      multiple={true}\n    />\n  </label>\n);\n\nexport const EditorToolbarTimeSlots = ({\n  color = 'white',\n  toggleTimeSlots,\n}: {\n  color?: ColorType;\n  toggleTimeSlots: () => void;\n}) => {\n  return (\n    <div className={styles.timeSlotsButton}>\n      <IconButton name=\"meetingSlots\" color={color} size={20} onClick={toggleTimeSlots} />\n    </div>\n  );\n};\n\nexport const TemplateEditorToolbarFileAttachment = ({\n  color = 'white',\n  onAttachment,\n}: {\n  color?: ColorType;\n  onAttachment: (files: Array<any>) => void;\n}) => (\n  <label className={styles.label} htmlFor=\"file-attachment-2\">\n    <Icon name=\"paperclip\" size={20} color={color} />\n    <input\n      type=\"file\"\n      id=\"file-attachment-2\"\n      name=\"file-attachment-2\"\n      data-test=\"file-attachment-2\"\n      onChange={event => {\n        onAttachment(Array.from(event.target.files));\n        event.target.value = null;\n      }}\n      className={styles.input}\n      multiple={true}\n    />\n  </label>\n);\n\nexport const EditorToolbarTemplateVariable = ({\n  disableEmpty = false,\n  editor,\n}: {\n  disableEmpty?: boolean;\n  editor?: MyEditor;\n}) => {\n  const myPlateEditorRef = useMyPlateEditorRef(useEventPlateId());\n  const myPlateEditor = myPlateEditorRef || editor;\n  const { ref, visible, setVisible } = useVisible(false);\n  const emailVariables = useBaseEmailVariables();\n  const emailValues = useBaseEmailVariableValue();\n  const isDisableVariable = (group, variable) => {\n    return disableEmpty && !emailValues[group]?.find(value => variable.id === value.id).value;\n  };\n  const { t } = useTranslation('translation', { keyPrefix: 'richTextEditor.variables' });\n\n  const isFocused =\n    !!myPlateEditorRef && !!myPlateEditor?.selection && isCollapsed(myPlateEditor.selection);\n\n  useEffect(() => {\n    if (visible) {\n      removeScrollOfBox();\n    }\n\n    if (!visible) {\n      recoverScrollOfBox();\n    }\n  }, [visible]);\n\n  return (\n    <div className={styles.templateVariable}>\n      <ToolbarMenu\n        ref={ref}\n        icon=\"textVariable\"\n        width={200}\n        visible={visible}\n        // @ts-ignore\n        onClick={event => {\n          event.preventDefault();\n          event.stopPropagation();\n          setVisible(!visible);\n        }}\n      >\n        <div className={styles.variableList}>\n          {emailVariables &&\n            Object.entries(emailVariables).map(([group, variables]) => (\n              <Fragment key={group}>\n                <Section>{toTitleCase(t(group.toLowerCase()))}</Section>\n                {/* @ts-ignore */}\n                {variables.map(variable => (\n                  <Item\n                    key={variable.id}\n                    disabled={isDisableVariable(group, variable)}\n                    onMouseDown={event => {\n                      if (!isDisableVariable(group, variable)) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        if (!isFocused) {\n                          insertTemplateVariable(\n                            myPlateEditor,\n                            {\n                              id: variable.id,\n                              name: variable.name,\n                              group: variable.type,\n                            },\n                            {\n                              at: [0, 0],\n                            },\n                          );\n                        } else {\n                          insertTemplateVariable(myPlateEditor, {\n                            id: variable.id,\n                            name: variable.name,\n                            group: variable.type,\n                          });\n                        }\n                        setVisible(false);\n                      }\n                    }}\n                  >\n                    {variable.name}\n                  </Item>\n                ))}\n              </Fragment>\n            ))}\n        </div>\n      </ToolbarMenu>\n    </div>\n  );\n};\n\nexport const FloatingTemplateVariable = ({\n  disableEmpty = false,\n  editor,\n}: {\n  disableEmpty?: boolean;\n  editor: MyEditor;\n}) => {\n  const { ref, visible, setVisible } = useVisible(false);\n  const emailVariables = useBaseEmailVariables();\n  const emailValues = useBaseEmailVariableValue();\n  const { t } = useTranslation('translation', { keyPrefix: 'richTextEditor.variables' });\n\n  const isDisableVariable = (group, variable) => {\n    return disableEmpty && !emailValues[group]?.find(value => variable.id === value.id).value;\n  };\n\n  useEffect(() => {\n    if (visible) {\n      removeScrollOfBox();\n    }\n\n    if (!visible) {\n      recoverScrollOfBox();\n    }\n  }, [visible]);\n\n  return (\n    <Dropdown\n      ref={ref}\n      visible={visible}\n      position=\"bottom\"\n      width={200}\n      anchor={\n        <IconButton\n          className={styles.floatingTemplateVariable}\n          name=\"textVariable\"\n          onClick={event => {\n            event.preventDefault();\n            event.stopPropagation();\n            setVisible(!visible);\n          }}\n        />\n      }\n    >\n      <div className={styles.variableList}>\n        {emailVariables &&\n          Object.entries(emailVariables).map(([group, variables]) => (\n            <Fragment key={group}>\n              <Section>{toTitleCase(t(group.toLowerCase()))}</Section>\n              {/* @ts-ignore */}\n              {variables.map(variable => (\n                <Item\n                  key={variable.id}\n                  disabled={isDisableVariable(group, variable)}\n                  onMouseDown={event => {\n                    if (!isDisableVariable(group, variable)) {\n                      event.preventDefault();\n                      event.stopPropagation();\n                      insertTemplateVariable(editor, {\n                        id: variable.id,\n                        name: variable.name,\n                        group: variable.type,\n                      });\n                      setVisible(false);\n                    }\n                  }}\n                >\n                  {variable.name}\n                </Item>\n              ))}\n            </Fragment>\n          ))}\n      </div>\n    </Dropdown>\n  );\n};\n\nfunction getDefaultLink(meetingLinks, t) {\n  if (!meetingLinks || meetingLinks?.length === 0) return t('noMeetingLinks');\n  return meetingLinks?.find(meetingLink => meetingLink.defaultLink);\n}\n\nexport const EditorToolbarMeetingLink = ({\n  color = 'white',\n  editor,\n}: {\n  color?: ColorType;\n  editor?: MyEditor;\n}) => {\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  // @ts-ignore\n  const { users } = useUserSearch() || [];\n  const activeUserId = useActiveUserId();\n  const activeUsers = users?.filter(({ active, id }) => active && activeUserId !== id);\n  const [linkOwner, setLinkOwner] = useState(true);\n  const myPlateEditorRef = useMyPlateEditorRef(useEventPlateId());\n  const myPlateEditor = myPlateEditorRef || editor;\n  const type = getPluginType(myPlateEditor, ELEMENT_MEETING_LINK);\n  const { ref, visible, setVisible } = useVisible(false);\n  const [selectedUser, setSelectedUser] = useState();\n  const { getUserMeetingLinks } = useMeetingLinks();\n  const meetingLinks = getUserMeetingLinks(selectedUser || activeUserId);\n  const { t } = useTranslation('translation', { keyPrefix: 'richTextEditor.meetingLinks' });\n  const defaultLink = getDefaultLink(meetingLinks, t);\n\n  const isFocused =\n    !!myPlateEditorRef && !!myPlateEditor?.selection && isCollapsed(myPlateEditor.selection);\n\n  function resetValues() {\n    reset({ displayText: '' });\n    setLinkOwner(true);\n    setSelectedUser(undefined);\n  }\n  useEffect(() => {\n    if (visible) {\n      removeScrollOfBox();\n    }\n\n    if (!visible) {\n      resetValues();\n      recoverScrollOfBox();\n    }\n  }, [visible]);\n\n  const {\n    field: { ref: textRef, ...textField },\n  } = useController({\n    control,\n    name: 'displayText',\n    rules: {\n      required: true,\n    },\n  });\n\n  const {\n    field: { value: meetingLink, onChange: meetingLinkOnChange },\n  } = useController({\n    control,\n    name: 'meetingLink',\n    rules: {\n      required: true,\n    },\n  });\n\n  useEffect(() => {\n    reset({ meetingLink: defaultLink?.id });\n  }, [defaultLink, visible]);\n\n  const handleAddMeetingLink = async (data, event) => {\n    if (!myPlateEditor) return;\n    event.preventDefault();\n\n    const meetingLink = {\n      type,\n      userId: selectedUser || '__me__',\n      linkId:\n        data?.meetingLink === defaultLink?.id && !selectedUser ? '__default__' : data?.meetingLink,\n      children: [{ text: data?.displayText }],\n    };\n\n    if (!isFocused) {\n      focusEditor(myPlateEditor);\n\n      setTimeout(() => {\n        // @ts-ignore\n        insertNodes(myPlateEditorRef, meetingLink);\n      }, 100);\n    } else {\n      // @ts-ignore\n      insertNodes(myPlateEditor, meetingLink);\n    }\n\n    setVisible(false);\n  };\n\n  return (\n    <div className={styles.meetingLinkButton}>\n      <Dropdown\n        ref={ref}\n        visible={visible}\n        anchor={\n          <IconButton\n            name=\"calendar\"\n            color={color}\n            size={20}\n            onClick={() => setVisible(!visible)}\n          />\n        }\n      >\n        <form>\n          <div className={styles.meetingLinksDropdownWrapper}>\n            <Text size=\"m\" className={styles.meetingLinksHeader}>\n              {t('title')}\n            </Text>\n            <div className={styles.meetingLinksTextDisplayInput}>\n              <Input\n                ref={textRef as any}\n                placeholder={t('placeholder')}\n                size=\"small\"\n                width={'273px'}\n                error={errors?.displayText && t('required')}\n                {...textField}\n              />\n            </div>\n            <Text size=\"m\" className={styles.meetingLinksHeader}>\n              {t('linkTo')}\n            </Text>\n            <div className={styles.radioGroup}>\n              <RadioGroup\n                defaultValue={linkOwner}\n                onChange={value => {\n                  setLinkOwner(value);\n                  if (value) setSelectedUser(activeUserId);\n                }}\n              >\n                <Radio size=\"small\" value={true} expand>\n                  <Text size=\"s\">{t('myMeetingLinks')}</Text>\n                </Radio>\n                <Radio size=\"small\" value={false} expand>\n                  <Text size=\"s\">{t('otherMeetingLinks')}</Text>\n                </Radio>\n              </RadioGroup>\n            </div>\n            <div className={styles.dropdownSelects}>\n              {!linkOwner && (\n                <Select\n                  placeholder={t('user')}\n                  size=\"small\"\n                  borderless={false}\n                  width={'273px'}\n                  value={selectedUser}\n                  onChange={setSelectedUser}\n                >\n                  {activeUsers?.map(({ id, name }) => (\n                    <Item key={id} value={id}>\n                      {name}\n                    </Item>\n                  ))}\n                </Select>\n              )}\n              {typeof defaultLink === 'string' && selectedUser ? (\n                <Text size=\"s\">{defaultLink}</Text>\n              ) : (\n                <Select\n                  placeholder={t('meetingLink')}\n                  size=\"small\"\n                  borderless={false}\n                  width={'273px'}\n                  disabled={!selectedUser && !linkOwner}\n                  error={errors?.meetingLink && t('required')}\n                  value={meetingLink}\n                  onChange={meetingLinkOnChange}\n                >\n                  {meetingLinks?.map(({ id, title }) => (\n                    <Item key={id} value={id}>\n                      {title}\n                    </Item>\n                  ))}\n                </Select>\n              )}\n            </div>\n            <div className={styles.addButton}>\n              <Button\n                size=\"small\"\n                disabled={\n                  (errors && Object.keys(errors)?.length > 0) || typeof defaultLink === 'string'\n                }\n                onClick={handleSubmit(handleAddMeetingLink)}\n              >\n                {t('add')}\n              </Button>\n            </div>\n          </div>\n        </form>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport const TemplateEditorToolbarMeetingLink = ({ color = 'white' }: { color?: ColorType }) => {\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  // @ts-ignore\n  const { users } = useUserSearch() || [];\n  const activeUserId = useActiveUserId();\n  const activeUsers = users?.filter(({ active }) => active);\n  const [linkOwner, setLinkOwner] = useState(true);\n  const editor = useMyPlateEditorRef(useEventPlateId());\n  const type = getPluginType(editor, ELEMENT_MEETING_LINK);\n  const { ref, visible, setVisible } = useVisible(false);\n  const [selectedUser, setSelectedUser] = useState();\n  const { getUserMeetingLinks } = useMeetingLinks();\n  const meetingLinks = getUserMeetingLinks(selectedUser || activeUserId);\n  const { t } = useTranslation('translation', { keyPrefix: 'richTextEditor.meetingLinks' });\n  const defaultLink = getDefaultLink(meetingLinks, t);\n\n  function resetValues() {\n    reset({ displayText: '' });\n    setLinkOwner(true);\n    setSelectedUser(undefined);\n  }\n\n  useEffect(() => {\n    if (visible) {\n      removeScrollOfBox();\n    }\n\n    if (!visible) {\n      resetValues();\n      recoverScrollOfBox();\n    }\n  }, [visible]);\n\n  const {\n    field: { ref: textRef, ...textField },\n  } = useController({\n    control,\n    name: 'displayText',\n    rules: {\n      required: true,\n    },\n  });\n\n  const {\n    field: { value: meetingLink, onChange: meetingLinkOnChange },\n  } = useController({\n    control,\n    name: 'meetingLink',\n  });\n\n  useEffect(() => {\n    reset({ meetingLink: defaultLink?.id });\n  }, [defaultLink]);\n\n  useEffect(() => {\n    if (!linkOwner && selectedUser && meetingLinks?.length > 0) {\n      meetingLinkOnChange(meetingLinks[0]?.id);\n    }\n  }, [meetingLinks?.length, linkOwner, selectedUser]);\n\n  useEffect(() => {\n    setSelectedUser(activeUserId);\n  }, [activeUserId]);\n\n  const handleAddMeetingLink = async (data, event) => {\n    if (!editor) return;\n\n    event.preventDefault();\n\n    const meetingLink = {\n      type,\n      userId: selectedUser || '__me__',\n      linkId:\n        data?.meetingLink === defaultLink?.id && !selectedUser ? '__default__' : data?.meetingLink,\n      children: [{ text: data?.displayText }],\n    };\n    setVisible(false);\n    // @ts-ignore\n    insertNodes(editor, meetingLink);\n  };\n\n  return (\n    <div className={styles.meetingLinkButton}>\n      <Dropdown\n        ref={ref}\n        visible={visible}\n        width={321}\n        anchor={\n          <IconButton\n            name=\"calendar\"\n            color={color}\n            size={20}\n            onClick={() => {\n              reset();\n              setVisible(!visible);\n            }}\n          />\n        }\n      >\n        <form>\n          <div className={styles.templateMeetingLinksDropdownWrapper}>\n            <Text size=\"m\" className={styles.meetingLinksHeader}>\n              {t('title')}\n            </Text>\n            <div className={styles.meetingLinksTextDisplayInput}>\n              <Input\n                placeholder={t('placeholder')}\n                size=\"small\"\n                width={'273px'}\n                ref={textRef as any}\n                error={errors?.displayText && t('required')}\n                {...textField}\n              />\n            </div>\n            <Text size=\"m\" className={styles.meetingLinksHeader}>\n              {t('linkTo')}\n            </Text>\n            <div className={styles.radioGroup}>\n              <RadioGroup\n                defaultValue={linkOwner}\n                onChange={value => {\n                  setLinkOwner(value);\n                  if (value) setSelectedUser(activeUserId);\n                }}\n              >\n                <Radio size=\"small\" value={true} expand>\n                  <Text size=\"s\">{t('sendersMeetingLinks')}</Text>\n                </Radio>\n                <Radio size=\"small\" value={false} expand>\n                  <Text size=\"s\">{t('specificUsersMeetingLinks')}</Text>\n                </Radio>\n              </RadioGroup>\n            </div>\n            <div className={styles.dropdownSelects}>\n              {!linkOwner && (\n                <>\n                  <Select\n                    placeholder={t('user')}\n                    size=\"small\"\n                    borderless={false}\n                    width={'273px'}\n                    value={selectedUser}\n                    onChange={setSelectedUser}\n                  >\n                    {activeUsers?.map(({ id, name }) => (\n                      <Item key={id} value={id}>\n                        {id === activeUserId ? `${name} (${t('you')})` : name}\n                      </Item>\n                    ))}\n                  </Select>\n                  <Select\n                    placeholder={t('meetingLink')}\n                    size=\"small\"\n                    borderless={false}\n                    width={'273px'}\n                    disabled={meetingLinks.length === 0 || (!selectedUser && !linkOwner)}\n                    error={errors?.meetingLink && t('required')}\n                    value={meetingLink}\n                    onChange={meetingLinkOnChange}\n                  >\n                    {meetingLinks?.map(({ id, title }) => (\n                      <Item key={id} value={id}>\n                        {title}\n                      </Item>\n                    ))}\n                  </Select>\n                </>\n              )}\n            </div>\n            <div className={styles.templateMeetingLinkCallout}>\n              <Icon name=\"alertTriangle\" color=\"banana\" size={24} />\n              <Text size=\"xs\">{t('alertMessage')}</Text>\n            </div>\n            <div className={styles.addButton}>\n              <Button\n                size=\"small\"\n                disabled={\n                  (errors && Object.keys(errors)?.length > 0) ||\n                  (linkOwner && (!defaultLink || typeof defaultLink === 'string')) ||\n                  (!linkOwner && !meetingLink)\n                }\n                onClick={handleSubmit(handleAddMeetingLink)}\n              >\n                {t('add')}\n              </Button>\n            </div>\n          </div>\n        </form>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport const EditorToolbarSelectSignatureSection = ({ color }: { color?: ColorType }) => {\n  return (\n    <div style={{ marginLeft: '8px', display: 'flex' }}>\n      <SelectSignatureDropdown color={color || 'white'} />\n    </div>\n  );\n};\n","import {\n  createPlateUI,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_UL,\n  ELEMENT_PARAGRAPH,\n  StyledElement,\n  withProps,\n  ELEMENT_OL,\n  ELEMENT_IMAGE,\n} from '@udecode/plate';\n\nimport { ELEMENT_SLOTS_FORM } from '../plugins';\nimport { ELEMENT_IMAGE_LINK } from '../plugins/imagePlugin/defaults';\nimport { ELEMENT_MEETING_LINK, ELEMENT_MISSING_MEETING_LINK } from '../plugins/meetingLinkPlugin';\nimport { ELEMENT_RAW_HTML_BLOCK } from '../plugins/rawHTMLBlockPlugin';\nimport { ELEMENT_REPLY_HISTORY } from '../plugins/replyHistoryPlugin';\nimport {\n  ELEMENT_MISSING_VARIABLE,\n  ELEMENT_TEMPLATE_VARIABLE,\n} from '../plugins/templateVariablesPlugin';\nimport styles from './element.module.css';\nimport { ImageElement } from './imageLink/Image';\nimport ImageLink from './imageLink/imageLink';\nimport MeetingLink from './meetingLink/meetingLink';\nimport MissingMeetingLink from './meetingLink/missingMeetingLink';\nimport RawHTMLBlock from './rawHTMLBlock/rawHTMLBlock';\nimport ReplyHistory from './replyHistory/replyHistory';\nimport SlotsBlock from './slotsBlock/slotsBlock';\nimport MissingVariable from './templateVariable/missingVariable';\nimport TemplateVariable from './templateVariable/templateVariable';\n\nconst components = createPlateUI({\n  [ELEMENT_TEMPLATE_VARIABLE]: TemplateVariable,\n  [ELEMENT_MISSING_VARIABLE]: MissingVariable,\n  [ELEMENT_MISSING_MEETING_LINK]: MissingMeetingLink,\n  [ELEMENT_MEETING_LINK]: MeetingLink,\n  [ELEMENT_RAW_HTML_BLOCK]: RawHTMLBlock,\n  [ELEMENT_SLOTS_FORM]: SlotsBlock,\n  [ELEMENT_REPLY_HISTORY]: ReplyHistory,\n  [ELEMENT_IMAGE]: ImageElement,\n  [ELEMENT_IMAGE_LINK]: ImageLink,\n  [ELEMENT_H1]: withProps(StyledElement, {\n    as: 'h1',\n    className: styles.h1,\n  }),\n  [ELEMENT_H2]: withProps(StyledElement, {\n    as: 'h2',\n    className: styles.h2,\n  }),\n  [ELEMENT_UL]: withProps(StyledElement, {\n    as: 'ul',\n    className: styles.ul,\n  }),\n  [ELEMENT_OL]: withProps(StyledElement, {\n    as: 'ol',\n    className: styles.ol,\n  }),\n  [ELEMENT_PARAGRAPH]: withProps(StyledElement, {\n    as: 'div',\n    className: styles.p,\n  }),\n});\n\nexport default components;\nexport * from './editorToolbar/editorToolbar';\n","import React, { ReactNode } from 'react';\n\nimport { Icon, Tooltip } from '@bloobirds-it/flamingo-ui';\nimport {\n  getPluginType,\n  MARK_BOLD,\n  MARK_ITALIC,\n  MARK_UNDERLINE,\n  MarkToolbarButton,\n  BalloonToolbar,\n} from '@udecode/plate';\n\nimport { useMyPlateEditorRef } from '../../config/typescript';\nimport styles from '../element.module.css';\n\nexport const MarkBalloonToolbar = ({ id, children }: { id: string; children?: ReactNode }) => {\n  const editor = useMyPlateEditorRef(id);\n\n  const arrow = false;\n  const theme = 'light';\n\n  const buttons = [\n    {\n      type: getPluginType(editor, MARK_BOLD),\n      icon: <Icon name=\"textBold\" />,\n      title: 'Bold',\n    },\n    {\n      type: getPluginType(editor, MARK_ITALIC),\n      icon: <Icon name=\"textItalic\" />,\n      title: 'Italic',\n    },\n    {\n      type: getPluginType(editor, MARK_UNDERLINE),\n      icon: <Icon name=\"textUnderlined\" />,\n      title: 'Underline',\n    },\n  ];\n\n  const renderMarkButton = (index: number, type: string, icon: ReactNode, title: string) => (\n    <Tooltip key={index} title={title} position=\"top\">\n      <div className={styles.svgs}>\n        <MarkToolbarButton type={type} icon={icon} actionHandler=\"onMouseDown\" />\n      </div>\n    </Tooltip>\n  );\n\n  const renderButtons = () =>\n    buttons.map((button, index) => renderMarkButton(index, button.type, button.icon, button.title));\n\n  return (\n    <div className={styles.svgs}>\n      <BalloonToolbar theme={theme} arrow={arrow}>\n        {renderButtons()}\n        {children}\n      </BalloonToolbar>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Icon, Tooltip } from '@bloobirds-it/flamingo-ui';\nimport { getNodeFragment, ToolbarButton, usePlateSelection } from '@udecode/plate';\n\nimport { useMyPlateEditorRef } from '../../config/typescript';\nimport styles from '../element.module.css';\n\nexport const SaveSnippetButton = ({ saveSnippetCallback }) => {\n  const test = useMyPlateEditorRef();\n  const selectedNode = usePlateSelection();\n  const { t } = useTranslation('translation', { keyPrefix: 'richTextEditor' });\n\n  function handleClick() {\n    const node = getNodeFragment(test, selectedNode);\n    saveSnippetCallback(node);\n  }\n\n  return (\n    <Tooltip title={t('saveSnippet')} position=\"top\">\n      <div className={styles.svgs}>\n        <ToolbarButton icon={<Icon name=\"save\" />} onMouseDown={handleClick} />\n      </div>\n    </Tooltip>\n  );\n};\n","import {\n  ComboboxOnSelectItem,\n  ELEMENT_MENTION,\n  NoData,\n  PlatePluginKey,\n  comboboxSelectors,\n  MentionPlugin,\n  getPlugin,\n  getBlockAbove,\n  isEndPoint,\n  Data,\n  withoutNormalizing,\n  select,\n  removeNodes,\n  insertNodes,\n  insertText,\n  TMentionElement,\n  withoutMergingHistory,\n  ELEMENT_MENTION_INPUT,\n  moveSelection,\n  comboboxActions,\n} from '@udecode/plate';\n\nexport const getSnippetOnSelectItem = <TData extends Data = NoData>({\n  key = ELEMENT_MENTION,\n}: PlatePluginKey = {}): ComboboxOnSelectItem<TData> => (editor, item) => {\n  const targetRange = comboboxSelectors.targetRange();\n  if (!targetRange) return;\n\n  const {\n    options: { insertSpaceAfterMention, createMentionNode },\n  } = getPlugin<MentionPlugin>(editor as any, key);\n\n  const pathAbove = getBlockAbove(editor)?.[1];\n  const isBlockEnd = () =>\n    editor.selection && pathAbove && isEndPoint(editor, editor.selection.anchor, pathAbove);\n\n  withoutNormalizing(editor, () => {\n    // Selectors are sensitive to operations, it's better to create everything\n    // before the editor state is changed. For example, asking for text after\n    // removeNodes below will return null.\n    const { value } = createMentionNode!(item, {\n      search: comboboxSelectors.text() ?? '',\n    });\n\n    select(editor, targetRange);\n\n    withoutMergingHistory(editor, () =>\n      removeNodes(editor, {\n        match: node => node.type === ELEMENT_MENTION_INPUT,\n      }),\n    );\n    // @ts-ignore\n    insertNodes<TMentionElement>(editor, value);\n\n    // move the selection after the element\n    moveSelection(editor, { unit: 'offset' });\n\n    if (isBlockEnd() && insertSpaceAfterMention) {\n      insertText(editor, ' ');\n    }\n  });\n\n  return comboboxActions.reset();\n};\n","import React from 'react';\n\nimport { Data, NoData } from '@udecode/plate-combobox';\nimport { getPluginOptions, usePlateEditorRef } from '@udecode/plate-core';\nimport { MentionPlugin } from '@udecode/plate-mention';\nimport { Combobox, ComboboxProps } from '@udecode/plate-ui-combobox';\n\nimport { ELEMENT_SNIPPET } from '../templateVariablesPlugin';\nimport { getSnippetOnSelectItem } from './getSnippetOnSelectItem';\n\nexport interface MentionComboboxProps<TData extends Data = NoData>\n  extends Partial<ComboboxProps<TData>> {\n  pluginKey?: string;\n}\n\nexport const SnippetCombobox = <TData extends Data = NoData>({\n  pluginKey = ELEMENT_SNIPPET,\n  id = pluginKey,\n  ...props\n}: MentionComboboxProps<TData>) => {\n  const editor = usePlateEditorRef();\n\n  const { trigger } = getPluginOptions<MentionPlugin>(editor, pluginKey);\n\n  return (\n    <Combobox\n      id={id}\n      trigger={trigger!}\n      controlled\n      onSelectItem={getSnippetOnSelectItem({\n        key: pluginKey,\n      })}\n      styles={{ item: { maxWidth: '98%', overflow: 'hidden', textOverflow: 'ellipsis' } }}\n      {...props}\n    />\n  );\n};\n","import { CSSProperties, memo, useEffect } from 'react';\n\nimport { recoverScrollOfBox, removeScrollOfBox } from '@bloobirds-it/utils';\nimport { Plate, TComboboxItem, focusEditor } from '@udecode/plate';\nimport clsx from 'clsx';\nimport normalizeUrl from 'normalize-url';\n\nimport { MarkBalloonToolbar } from './components/ballonToolbar/MarkBallonToolbar';\nimport { SaveSnippetButton } from './components/saveSnippetButton/saveSnippetButton';\nimport { MyEditor, MyValue, useMyPlateEditorRef } from './config/typescript';\nimport { SnippetCombobox } from './plugins/snippetPlugin/SnippetCombobox';\nimport styles from './richTextEditor.module.css';\n\nconst Editor = ({ setEditor }: { setEditor: (editor: MyEditor) => void }) => {\n  const editor = useMyPlateEditorRef();\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (editor?.id && editor?.id?.toLowerCase().includes('body')) {\n        focusEditor(editor);\n      }\n    }, 100);\n  }, []);\n\n  setEditor?.(editor);\n  return null;\n};\n\nexport const PlateWrapper = memo(\n  ({\n    id,\n    placeholder,\n    markBallonEnabled,\n    saveSnippetCallback,\n    setEditor,\n    snippets,\n    style,\n  }: {\n    id: string;\n    placeholder?: string;\n    markBallonEnabled: boolean;\n    saveSnippetCallback?: (snippet: string) => void;\n    setEditor: (editor: MyEditor) => void;\n    snippets?: TComboboxItem[];\n    style: CSSProperties;\n  }) => {\n    const url = normalizeUrl(window.location.href);\n    const isSalesforcePage = !!url.match('^.*://.*.lightning.force.com.*');\n\n    const classes = clsx(styles.plate_container, {\n      [styles.plate_container_sfc]: isSalesforcePage,\n    });\n\n    return (\n      <div className={classes} onFocus={removeScrollOfBox} onBlur={recoverScrollOfBox}>\n        <Plate<MyValue>\n          id={id}\n          editableProps={{\n            spellCheck: true,\n            placeholder,\n            style: {\n              fontSize: '13px',\n              fontFamily: 'Arial, Helvetica, sans-serif',\n              padding: 12,\n              ...style,\n            },\n          }}\n        >\n          {markBallonEnabled && (\n            <MarkBalloonToolbar id={id}>\n              {snippets && <SaveSnippetButton saveSnippetCallback={saveSnippetCallback} />}\n            </MarkBalloonToolbar>\n          )}\n          <Editor setEditor={setEditor} />\n\n          <SnippetCombobox items={snippets} />\n        </Plate>\n      </div>\n    );\n  },\n);\n","import React, { CSSProperties, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { useBaseEmailVariableValue } from '@bloobirds-it/hooks';\nimport {\n  AnyObject,\n  ELEMENT_PARAGRAPH,\n  PlatePlugin,\n  PlateProvider,\n  TComboboxItem,\n} from '@udecode/plate';\nimport hash from 'object-hash';\n\nimport components from './components';\nimport { createMyPlugins, MyEditor, MyValue } from './config/typescript';\nimport { PlateWrapper } from './plateWrapper';\n\nexport const initialValue = [\n  {\n    type: ELEMENT_PARAGRAPH,\n    children: [\n      {\n        text: '',\n      },\n    ],\n  },\n];\n\ninterface RichTextEditorProps {\n  id?: string;\n  value?: any;\n  defaultValue?: any;\n  style: CSSProperties;\n  placeholder?: string;\n  plugins?: any[];\n  children?: (editor: JSX.Element) => React.ReactNode;\n  setEditor?: (editor: MyEditor) => void;\n  onChange?: (value: any) => void;\n  snippets?: TComboboxItem[];\n  saveSnippetCallback?: (snippet: string) => void;\n  registerProps?: any;\n}\n\nconst RichTextEditor = ({\n  id,\n  value,\n  defaultValue = initialValue,\n  style,\n  onChange,\n  placeholder,\n  plugins,\n  children,\n  setEditor,\n  snippets,\n  saveSnippetCallback,\n  registerProps,\n}: RichTextEditorProps) => {\n  const isUsingRegister = !!registerProps;\n  const [plateId, setPlateId] = useState<string>();\n  const oldPlateId = useRef(null);\n\n  const emailVariablesValues = useBaseEmailVariableValue();\n\n  const pluginsToUse = useMemo<PlatePlugin<AnyObject, MyValue, MyEditor>[]>(\n    () => createMyPlugins(plugins, { components }),\n    [hash(plugins)],\n  );\n\n  const templateVariableEnabled = pluginsToUse.some(plugin => plugin.key === 'variable');\n  const markBallonEnabled = pluginsToUse.some(plugin => plugin.key === 'basicMarks');\n\n  useEffect(() => {\n    if (\n      templateVariableEnabled &&\n      emailVariablesValues &&\n      Object.keys(emailVariablesValues).length > 0\n    ) {\n      if (id) {\n        id = `${id}_${hash(emailVariablesValues)}`;\n      } else {\n        id = hash(emailVariablesValues);\n      }\n    } else {\n      id = id || 'plateEditor';\n    }\n\n    setPlateId(id);\n  }, [id, templateVariableEnabled, emailVariablesValues]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', e => {\n      e.stopImmediatePropagation();\n    });\n    return () => {\n      window.removeEventListener('keydown', e => {\n        e.stopImmediatePropagation();\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    if (oldPlateId.current !== plateId) {\n      oldPlateId.current = plateId;\n    }\n  }, [plateId]);\n\n  if (!plateId) {\n    return null;\n  }\n\n  if (plateId !== id && oldPlateId.current && oldPlateId.current !== plateId) {\n    return null;\n  }\n\n  const PlateEditor = (\n    <PlateWrapper\n      id={plateId}\n      placeholder={placeholder}\n      markBallonEnabled={markBallonEnabled}\n      setEditor={setEditor}\n      snippets={snippets}\n      style={style}\n      saveSnippetCallback={saveSnippetCallback}\n    ></PlateWrapper>\n  );\n\n  return (\n    <PlateProvider<MyValue>\n      id={plateId}\n      initialValue={defaultValue}\n      plugins={pluginsToUse}\n      value={value}\n      {...(isUsingRegister ? registerProps : {})}\n      onChange={\n        isUsingRegister\n          ? value => {\n              const event = { target: { value, name: registerProps?.name } };\n              registerProps.onChange(event);\n            }\n          : onChange\n      }\n    >\n      {children?.(PlateEditor) ?? PlateEditor}\n    </PlateProvider>\n  );\n};\n\nexport default RichTextEditor;\n","import { createPluginFactory, HotkeyPlugin, onKeyDownToggleElement } from '@udecode/plate-core';\n\nexport const ELEMENT_PARAGRAPH = 'p';\n\n/**\n * Enables support for paragraphs.\n */\nexport const createCustomParagraphPlugin = createPluginFactory<HotkeyPlugin>({\n  key: ELEMENT_PARAGRAPH,\n  isElement: true,\n  handlers: {\n    onKeyDown: onKeyDownToggleElement,\n  },\n  options: {\n    hotkey: ['mod+opt+0', 'mod+shift+0'],\n  },\n  deserializeHtml: {\n    rules: [\n      {\n        validNodeName: 'DIV',\n      },\n      {\n        validNodeName: 'P',\n      },\n    ],\n    query: el => el.style.fontFamily !== 'Consolas',\n  },\n});\n","import { createComboboxPlugin, createMentionPlugin } from '@udecode/plate';\n\nimport { ELEMENT_SNIPPET } from '../templateVariablesPlugin';\n\nexport const createSnippetPlugins = () => {\n  return [\n    createComboboxPlugin(),\n    createMentionPlugin({\n      key: ELEMENT_SNIPPET,\n      options: {\n        // @ts-ignore\n        createMentionNode: mention => ({ value: mention.data }),\n        trigger: '/',\n        insertSpaceAfterMention: true,\n      },\n    }),\n  ];\n};\n","import { useMemo } from 'react';\n\nimport {\n  createBasicMarksPlugin,\n  createParagraphPlugin,\n  createSingleLinePlugin,\n  createFontSizePlugin,\n  createFontColorPlugin,\n} from '@udecode/plate';\n\nimport { createSlotsBlockPlugin } from './plugins';\nimport createControlPlugins from './plugins/controlPlugins';\nimport { createCustomParagraphPlugin } from './plugins/createCustomParagraphPlugin';\nimport createElementsPlugins from './plugins/elementsPlugins';\nimport { createImagePlugin } from './plugins/imagePlugin/createImagePlugin';\nimport { useTemplateMeetingLinksPlugin } from './plugins/meetingLinkPlugin';\nimport { createRawHTMLBlockPlugin } from './plugins/rawHTMLBlockPlugin';\nimport createReplacePlugins from './plugins/replacePlugins';\nimport { createReplyHistoryPlugin } from './plugins/replyHistoryPlugin';\nimport { createSnippetPlugins } from './plugins/snippetPlugin';\nimport { useTemplateVariablesPlugin } from './plugins/templateVariablesPlugin';\n\nconst useRichTextEditorPlugins = ({\n  templateVariables = true,\n  replaceTemplateVariables = false,\n  marks = true,\n  elements = true,\n  images = true,\n  snippets = false,\n  singleLine = false,\n  autoReplace = true,\n  rawHTMLBlock = false,\n  replyHistory = false,\n  replaceMeetingLinks = false,\n  stopPropagationPlugin = true,\n  replaceParagraphs = false,\n  keepDivs = false,\n} = {}) => {\n  const createTemplateVariablesPlugin = useTemplateVariablesPlugin({\n    replace: replaceTemplateVariables,\n  });\n\n  const createMeetingLinksPlugin = useTemplateMeetingLinksPlugin(replaceMeetingLinks);\n\n  return useMemo(() => {\n    let basePlugins = [];\n\n    if (!keepDivs) {\n      if (replaceParagraphs) {\n        basePlugins = [...basePlugins, createCustomParagraphPlugin()];\n      } else {\n        basePlugins = [...basePlugins, createParagraphPlugin()];\n      }\n    }\n\n    if (elements) {\n      basePlugins = [...basePlugins, ...createElementsPlugins()];\n    }\n\n    if (elements || templateVariables) {\n      basePlugins = [...basePlugins, ...createControlPlugins()];\n    }\n\n    if (autoReplace) {\n      basePlugins = [...basePlugins, ...createReplacePlugins()];\n    }\n\n    if (marks) {\n      basePlugins = [\n        ...basePlugins,\n        createBasicMarksPlugin(),\n        createFontSizePlugin(),\n        createFontColorPlugin(),\n      ];\n    }\n\n    if (singleLine) {\n      basePlugins = [...basePlugins, createSingleLinePlugin()];\n    }\n\n    if (images) {\n      basePlugins = [...basePlugins, createImagePlugin()];\n    }\n\n    if (rawHTMLBlock) {\n      basePlugins = [...basePlugins, createRawHTMLBlockPlugin()];\n    }\n\n    if (replyHistory) {\n      basePlugins = [...basePlugins, createReplyHistoryPlugin()];\n    }\n\n    if (snippets) {\n      basePlugins = [...basePlugins, ...createSnippetPlugins()];\n    }\n\n    if (templateVariables) {\n      basePlugins = [...basePlugins, createTemplateVariablesPlugin];\n    }\n\n    basePlugins = [...basePlugins, createMeetingLinksPlugin];\n\n    basePlugins = [...basePlugins, createSlotsBlockPlugin()];\n\n    return basePlugins;\n  }, [\n    createTemplateVariablesPlugin,\n    createMeetingLinksPlugin,\n    templateVariables,\n    replaceTemplateVariables,\n    stopPropagationPlugin,\n    marks,\n    rawHTMLBlock,\n    elements,\n    images,\n    singleLine,\n    replyHistory,\n    snippets,\n  ]);\n};\n\nexport default useRichTextEditorPlugins;\n","import { createPlateUIEditor, deserializeHtml, serializeHtml } from '@udecode/plate';\n\nexport const deserialize = (content, { format = 'AST', plugins = [] } = {}) => {\n  if (!content) {\n    return undefined;\n  }\n\n  if (format === 'HTML') {\n    const editor = createPlateUIEditor({\n      plugins,\n    });\n\n    return deserializeHtml(editor, {\n      element: content,\n    });\n  } else {\n    return JSON.parse(content);\n  }\n};\n\n// This function is only meant for serializing context-free template like when they appear in the card list\nexport const serialize = (content, { format = 'AST', plugins = [] } = {}) => {\n  const editor = createPlateUIEditor({\n    plugins,\n  });\n\n  if (!content) {\n    return '';\n  }\n\n  let nodes;\n  // For backwards compatibility\n  if (format === 'HTML') {\n    nodes = deserialize(content, { format, plugins });\n  } else {\n    nodes = typeof content === 'string' ? JSON.parse(content) : content;\n  }\n\n  const html = serializeHtml(editor, { nodes, stripWhitespace: false });\n  const raw = html\n    .replaceAll(/<div(\\s*)?>\\s*<\\/div>/g, '<br>')\n    .replaceAll('&#x27;', \"'\")\n    .replaceAll('&lt;', '<')\n    .replaceAll('&gt;', '>')\n    .replaceAll('&amp;', '&')\n    .replaceAll('&quot;', '\"')\n    .replaceAll('&apos;', \"'\");\n\n  return raw;\n};\n"],"names":["preFormat","editor","unwrapList","format","customFormatting","selection","parentEntry","getParentNode","_parentEntry","_slicedToArray","node","isElement","isType","ELEMENT_CODE_BLOCK","ELEMENT_CODE_LINE","formatList","elementType","toggleList","type","autoformatPlugin","options","rules","mode","ELEMENT_H1","match","ELEMENT_H2","ELEMENT_LI","ELEMENT_UL","ELEMENT_OL","ELEMENT_BLOCKQUOTE","createReplacePlugins","createAutoformatPlugin","useMyPlateEditorRef","id","usePlateEditorRef","createMyPlugins","plugins","createPlugins","useOpenLinkButton","props","useEditorRef","usePlateSelection","entry","useMemo","findNode","getPluginType","ELEMENT_LINK","_entry","link","_objectSpread","target","href","addProtocolToURL","url","onMouseOver","e","stopPropagation","OpenLinkButton","createComponentAs","htmlProps","createElementAs","useUnlinkButton","onClick","useCallback","unwrapLink","focusEditor","preventDefault","UnlinkButton","Button","ELEMENT_IMAGE_LINK","upsertLink","_ref","_text2","_editor$selection","_text3","text","insertTextInLink","insertNodesOptions","_ref$isUrl","isUrl","getPluginOptions","at","linkAboveImage","getAboveNode","ELEMENT_IMAGE","_linkAboveImage$","_linkAboveImage$2","_linkAboveImage$3","removeNodes","insertNodes","children","linkAbove","insertText","isDefined","length","_linkAbove$","_linkAbove$2","setNodes","upsertLinkText","linkEntry","_ref2","_ref3","linkNode","linkPath","shouldReplaceText","linkText","getEditorString","linkEntryImg","isExpanded","split","wrapLink","getNodeProps","path","focus","leaf","getNodeLeaf","insertLink","submitFloatingLink","_getPluginOptions","forceSubmit","floatingLinkSelectors","isValid","newTab","undefined","floatingLinkActions","hide","_url","setTimeout","useFloatingLinkEnter","open","useFloatingLinkSelectors","isOpen","useHotkeys","key","enabled","enableOnFormTags","useFloatingLinkEdit","floatingOptions","_objectWithoutProperties","_excluded","keyEditor","usePlateSelectors","triggerFloatingLinkHotkeys","getBoundingClientRect","getRangeBoundingClientRect","anchor","getStartPoint","getEndPoint","getDefaultBoundingClientRect","_useVirtualFloatingLi","useVirtualFloatingLink","editorId","update","style","floating","useEffect","someNode","show","triggerFloatingLinkEdit","enableOnContentEditable","useFloatingLinkEscape","zIndex","ref","useComposedRef","useFloatingLinkInsert","focused","useFocused","triggerFloatingLinkInsert","useOnClickOutside","disabled","getSelectionBoundingClientRect","whileElementsMounted","updated","FloatingLinkEditRoot","_htmlProps$style","display","FloatingLinkInsertRoot","_htmlProps$style2","FloatingLink","EditRoot","InsertRoot","UrlInput","FloatingLinkUrlInput","TextInput","FloatingLinkTextInput","NewTabInput","FloatingLinkNewTabInput","EditButton","FloatingLinkEditButton","styleInject","css","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","PlateFloatingLink","readOnly","isEditing","input","_jsxs","className","styles","container","FloatingInputWrapper","_jsx","FloatingIconWrapper","LinkIcon","width","floatingInputCss","placeholder","line","ShortTextIcon","editContent","floatingRowCss","plateButtonCss","FloatingVerticalDivider","floatingButtonCss","LaunchIcon","LinkOffIcon","_Fragment","floatingRootCss","linkPlugin","renderAfterEditable","createElementsPlugins","createBlockquotePlugin","createHeadingPlugin","createLinkPlugin","createListPlugin","KEY_DIR","withRTL","normalizeNode","_node$type","_node$children","_node$children$","rtl_rx","includes","ELEMENT_DEFAULT","ELEMENT_H3","ELEMENT_H4","ELEMENT_H5","ELEMENT_H6","test","direction","rtl","createDirPlugin","createPluginFactory","withOverrides","then","inject","nodeKey","defaultNodeValue","styleKey","validNodeValues","validTypes","deserializeHtml","validNodeName","getNode","el","textContent","KEY_DIRECTION","createDirectionPlugin","_","plugin","mapInjectPropsToPlugin","_el$style","dir","textAlign","ELEMENT_RAW_HTML_BLOCK","createRawHTMLBlock","html","insertRawHTMLBlock","rawHTMLBlock","replaceHTMLBlock","pluginType","htmlBlock","_htmlBlock","withoutNormalizing","createRawHTMLBlockPlugin","isVoid","getAttribute","serializeHtml","element","padding","dangerouslySetInnerHTML","__html","ELEMENT_SLOTS_FORM","createSlotsBlock","insertSlotsBlock","slotsBlock","createSlotsBlockPlugin","ELEMENT_TEMPLATE_VARIABLE","ELEMENT_MISSING_VARIABLE","ELEMENT_SNIPPET","ELEMENT_MEETING_LINK","ELEMENT_MISSING_MEETING_LINK","getMeetingLinkURL","userMeetingLinks","linkId","find","meetingLink","defaultLink","withTemplateMeetingLinksOverrides","_ref$options","replace","getUserRelatedMeetingLinks","userId","addHttpsIfNeeded","useTemplateMeetingLinksPlugin","activeUserId","useActiveUserId","_useMeetingLinks","useMeetingLinks","getUserMeetingLinks","isLoading","isInline","group","name","toTitleCase","concat","getNodeText","isEditorFocused","_getNodeEntry","getNodeEntry","_getNodeEntry2","insertTemplateVariable","data","templateVariable","initialText","updatedText","hasBeenReplaced","variableLength","moveSelection","unit","distance","deselect","insertMeetingLink","withTemplateVariableOverrides","values","variable","v","logicRole","value","useTemplateVariablesPlugin","_ref$replace","emailVariablesValues","useBaseEmailVariableValue","Object","flat","as","color","backgroundColor","borderRadius","textTransform","whiteSpace","hash","flatMapByKey","arr","flatMap","item","_item$key","checkEmptyText","_children$","_children$$text","trim","hasMissingVariables","root","nodes","some","resetBlockTypesCommonRule","types","defaultType","ELEMENT_PARAGRAPH","resetBlockTypePlugin","hotkey","predicate","isBlockAboveEmpty","isSelectionAtBlockStart","exitBreakPlugin","before","query","start","end","allow","KEYS_HEADING","relative","selectOnBackspacePlugin","createControlPlugins","createExitBreakPlugin","createSelectOnBackspacePlugin","selectNextElementLic","ELEMENT_LIC","_nextNode$","_nextNode$2","select","getPointAfter","nextNode","getPath","toString","_nextNode$3","newNode","insertImage","_currentNode$","_currentNode$2","image","currentNode","findNodePath","withImageEmbed","insertData","dataTransfer","getData","isImageUrl","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_i","_s","_e","_x","_r","_arr","_n","_d","Array","isArray","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","_e2","f","normalCompletion","didErr","step","_e3","minLen","_arrayLikeToArray","from","len","arr2","withImageUpload","uploadImage","files","injectedPlugins","getInjectedPlugins","pipeInsertDataQuery","_iterator","_step","_loop","file","reader","FileReader","_file$type$split","_file$type$split2","mime","addEventListener","_callee","formData","response","_callee$","_context","FormData","append","api","post","validateStatus","headers","status","readAsDataURL","withImage","_plugin$options","disableUploadInsert","disableEmbedInsert","createImagePlugin","disableCaption","rel","src","alt","marginTop","_ref4","insertImageLink","ELEMENT_REPLY_HISTORY","createReplyHistoryPlugin","spacetime","sentAt","sentBy","margin","borderLeft","paddingLeft","createReplyHistory","ImageElement","nodeProps","resizableProps","_props$ignoreReadOnly","ignoreReadOnly","rootProps","selected","useSelected","useReadOnly","classes","clsx","_defineProperty","Media","Root","figure","contentEditable","Resizable","resizable","handleComponent","left","Box","handleLeft","right","handleRight","Image","ImageLink","_rootProps$align","align","_rootProps$ignoreRead","linkProps","Link","MissingMeetingLink","_element$children$","attributes","_useTranslation","useTranslation","keyPrefix","t","classNames","title","meetingLinks","_meetingLinks$find","_meetingLinks$find2","MeetingLink","elementChildren","_elementChildren$","linkURL","RawHTMLBlock","replyStyle","ToggleButton","toggle","ReplyHistory","_useState","useState","_useState2","visible","setVisible","ReactShadowRoot","history","SlotsBlock","handleClick","MissingVariable","missingContainer","missingFocused","TemplateVariable","ColorButton","isBrightColor","isSelected","selectedIcon","updateColor","colorButton","colorButtonBright","content","Tooltip","position","Colors","prefix","colors","map","CustomColors","customColors","ColorPickerInternal","updateCustomColor","clearColor","colorPicker","divider","clearButton","ColorPicker","React","memo","hexColor","r","parseInt","g","b","luminance","threshold","ColorPickerToolbarDropdown","_ref$colors","DEFAULT_COLORS","_ref$customColors","DEFAULT_CUSTOM_COLORS","rest","useEventPlateId","usePlateEditorState","editorRef","_useLocalStorage","useLocalStorage","get","set","dropdownRef","useRef","MARK_COLOR","setOpen","getMark","_useState3","_useState4","selectedColor","setSelectedColor","onToggle","mixpanel","track","MIXPANEL_EVENTS","EDITOR_OPEN_COLOR_PICKER","setMarks","lastColors","LocalStorageKeys","LastColors","index","indexOf","splice","unshift","updateColorAndClose","removeMark","handleClickOutside","event","current","contains","removeEventListener","lastColorsObject","colorContainer","ToolbarDropdown","control","ToolbarButton","active","icon","isDropdown","onOpen","onClose","Icon","size","MarkToolbarButton","clear","isMarkActive","toggleMark","SelectSignatureDropdown","_useSignatures","useSignatures","selectHandler","sizeContainer","signature","itemSignature","cursor","fontSize","separator","window","baseUrls","SizeDropdownMenu","MARK_FONT_SIZE","_React$useState","_React$useState2","sizeValues","EDITOR_OPEN_CHANGE_SIZE","sizeDropdown","sizeItem","EditorToolbar","_ref$backgroundColor","_ref$disabled","isLinkedinPage","location","Toolbar","toolbar","EditorToolbarControlsSection","ToolbarSection","undo","redo","EditorToolbarFontStylesSection","_ref3$enableChangeSiz","enableChangeSize","hasSelection","toggleNodeType","activeType","EditorToolbarLink","myPlateEditor","onMouseDown","_ref5","_myPlateEditor$select","prevSelection","triggerFloatingLink","EditorToolbarSnippet","_ref6","_ref7","_callee2","_callee2$","_context2","_x2","EditorToolbarTextMarksSection","_ref8","_ref8$enableChangeCol","enableChangeColor","MARK_BOLD","actionHandler","MARK_ITALIC","MARK_UNDERLINE","EditorToolbarListsSection","_ref9","EditorToolbarSection","_ref10","EditorToolbarImage","_ref11","_ref11$color","myPlateEditorRef","lastSelection","_useToasts","useToasts","createToast","isFocused","isCollapsed","handleSelectionChange","addImage","_ref12","_callee3","_response$data","_callee3$","_context3","startsWith","message","_x3","resetSelectedImage","label","htmlFor","onChange","accept","multiple","TemplateEditorToolbarImage","_ref13","_ref13$color","eventPlateId","_useToasts2","_useTranslation2","_ref14","_callee4","_response$data2","_callee4$","_context4","_x4","EditorToolbarFileAttachment","_ref15","_ref15$color","onAttachment","EditorToolbarTimeSlots","_ref16","_ref16$color","toggleTimeSlots","timeSlotsButton","IconButton","TemplateEditorToolbarFileAttachment","_ref17","_ref17$color","EditorToolbarTemplateVariable","_ref18","_ref18$disableEmpty","disableEmpty","_useVisible","useVisible","emailVariables","useBaseEmailVariables","emailValues","isDisableVariable","_emailValues$group","_useTranslation3","removeScrollOfBox","recoverScrollOfBox","ToolbarMenu","variableList","entries","_ref19","_ref20","variables","Fragment","Section","toLowerCase","Item","FloatingTemplateVariable","_ref21","_ref21$disableEmpty","_useVisible2","_useTranslation4","_emailValues$group2","Dropdown","floatingTemplateVariable","_ref22","_ref23","getDefaultLink","EditorToolbarMeetingLink","_ref24","_Object$keys","_ref24$color","_useForm","useForm","handleSubmit","errors","formState","_ref25","useUserSearch","users","activeUsers","filter","_ref26","linkOwner","setLinkOwner","_useVisible3","selectedUser","setSelectedUser","_useTranslation5","resetValues","displayText","_useController","useController","required","_useController$field","field","textRef","textField","_useController2","_useController2$field","meetingLinkOnChange","handleAddMeetingLink","_ref27","_callee5","_callee5$","_context5","_x5","_x6","meetingLinkButton","meetingLinksDropdownWrapper","Text","meetingLinksHeader","meetingLinksTextDisplayInput","Input","radioGroup","RadioGroup","defaultValue","Radio","expand","dropdownSelects","Select","borderless","_ref28","_ref29","addButton","TemplateEditorToolbarMeetingLink","_ref30","_Object$keys2","_ref30$color","_useForm2","_ref31","_ref32","_useState5","_useState6","_useVisible4","_useState7","_useState8","_useMeetingLinks2","_useTranslation6","_useController3","_useController3$field","_excluded2","_useController4","_useController4$field","_meetingLinks$","_ref33","_callee6","_callee6$","_context6","_x7","_x8","templateMeetingLinksDropdownWrapper","_ref34","_ref35","templateMeetingLinkCallout","EditorToolbarSelectSignatureSection","_ref36","marginLeft","components","createPlateUI","_createPlateUI","withProps","StyledElement","h1","h2","ul","ol","p","MarkBalloonToolbar","arrow","theme","buttons","renderMarkButton","svgs","renderButtons","button","BalloonToolbar","SaveSnippetButton","saveSnippetCallback","selectedNode","getNodeFragment","getSnippetOnSelectItem","_ref$key","ELEMENT_MENTION","_getBlockAbove","targetRange","comboboxSelectors","_getPlugin","getPlugin","_getPlugin$options","insertSpaceAfterMention","createMentionNode","pathAbove","getBlockAbove","isBlockEnd","isEndPoint","_comboboxSelectors$te","search","withoutMergingHistory","ELEMENT_MENTION_INPUT","comboboxActions","SnippetCombobox","_ref$pluginKey","pluginKey","_ref$id","trigger","Combobox","controlled","onSelectItem","maxWidth","overflow","textOverflow","Editor","setEditor","_editor$id","PlateWrapper","markBallonEnabled","snippets","normalizeUrl","isSalesforcePage","plate_container","plate_container_sfc","onFocus","onBlur","Plate","editableProps","spellCheck","fontFamily","items","initialValue","RichTextEditor","_children","_ref$defaultValue","registerProps","isUsingRegister","plateId","setPlateId","oldPlateId","pluginsToUse","templateVariableEnabled","stopImmediatePropagation","PlateEditor","PlateProvider","createCustomParagraphPlugin","handlers","onKeyDown","onKeyDownToggleElement","createSnippetPlugins","createComboboxPlugin","createMentionPlugin","mention","useRichTextEditorPlugins","_ref$templateVariable","templateVariables","_ref$replaceTemplateV","replaceTemplateVariables","_ref$marks","marks","_ref$elements","elements","_ref$images","images","_ref$snippets","_ref$singleLine","singleLine","_ref$autoReplace","autoReplace","_ref$rawHTMLBlock","_ref$replyHistory","replyHistory","_ref$replaceMeetingLi","replaceMeetingLinks","_ref$stopPropagationP","stopPropagationPlugin","_ref$replaceParagraph","replaceParagraphs","_ref$keepDivs","keepDivs","createTemplateVariablesPlugin","createMeetingLinksPlugin","basePlugins","_toConsumableArray","createParagraphPlugin","createBasicMarksPlugin","createFontSizePlugin","createFontColorPlugin","createSingleLinePlugin","deserialize","_ref$format","_ref$plugins","createPlateUIEditor","JSON","parse","serialize","_ref2$format","_ref2$plugins","stripWhitespace","raw","replaceAll"],"mappings":"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"}