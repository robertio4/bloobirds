
> @bloobirds-it/types@0.0.1 lint
> npm run lint:eslint && npm run lint:types


> @bloobirds-it/types@0.0.1 lint:eslint
> eslint "{src,test}/**/*.ts"


/Users/robertorf/Workspace/frontend-monorepo/packages/types/src/bobjects.ts
  63:11  error  Parsing error: Type expected  prettier/prettier

/Users/robertorf/Workspace/frontend-monorepo/packages/types/src/bobjectsSearch.ts
  18:53  error  Parsing error: Type expected  prettier/prettier

/Users/robertorf/Workspace/frontend-monorepo/packages/types/src/entities.ts
  4:3  warning  'Bobject' is defined but never used  @typescript-eslint/no-unused-vars

/Users/robertorf/Workspace/frontend-monorepo/packages/types/src/events.ts
  13:39  error  Insert `,`  prettier/prettier

/Users/robertorf/Workspace/frontend-monorepo/packages/types/src/filters.ts
  149:1  error  Delete `⏎`  prettier/prettier

/Users/robertorf/Workspace/frontend-monorepo/packages/types/src/guideDefinitionAdmin.ts
  144:11  error  Insert `··`                                   prettier/prettier
  145:1   error  Insert `··`                                   prettier/prettier
  146:1   error  Replace `············` with `··············`  prettier/prettier
  147:1   error  Insert `··`                                   prettier/prettier
  148:1   error  Replace `············` with `··············`  prettier/prettier
  149:1   error  Insert `··`                                   prettier/prettier
  150:1   error  Insert `··`                                   prettier/prettier
  151:11  error  Insert `··`                                   prettier/prettier
  152:1   error  Insert `··`                                   prettier/prettier

/Users/robertorf/Workspace/frontend-monorepo/packages/types/src/router.d.ts
  2:31  error  Don't use `{}` as a type. `{}` actually means "any non-nullish value".
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead.
- If you want a type meaning "empty object", you probably want `Record<string, never>` instead.
- If you really want a type meaning "any non-nullish value", you probably want `NonNullable<unknown>` instead  @typescript-eslint/ban-types
  6:16  error  Don't use `{}` as a type. `{}` actually means "any non-nullish value".
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead.
- If you want a type meaning "empty object", you probably want `Record<string, never>` instead.
- If you really want a type meaning "any non-nullish value", you probably want `NonNullable<unknown>` instead  @typescript-eslint/ban-types

/Users/robertorf/Workspace/frontend-monorepo/packages/types/src/salesforce.ts
  82:1  error  Delete `⏎`  prettier/prettier

✖ 17 problems (16 errors, 1 warning)
  12 errors and 0 warnings potentially fixable with the `--fix` option.

